
# 1 "conversions.c"

# 4 "C:\Program Files (x86)\Microchip\xc8\v1.38\include\__size_t.h"
typedef unsigned size_t;

# 14 "C:\Program Files (x86)\Microchip\xc8\v1.38\include\string.h"
extern void * memcpy(void *, const void *, size_t);
extern void * memmove(void *, const void *, size_t);
extern void * memset(void *, int, size_t);

# 34
extern char * strcat(char *, const char *);
extern char * strcpy(char *, const char *);
extern char * strncat(char *, const char *, size_t);
extern char * strncpy(char *, const char *, size_t);
extern char * strdup(const char *);
extern char * strtok(char *, const char *);


extern int memcmp(const void *, const void *, size_t);
extern int strcmp(const char *, const char *);
extern int stricmp(const char *, const char *);
extern int strncmp(const char *, const char *, size_t);
extern int strnicmp(const char *, const char *, size_t);
extern void * memchr(const void *, int, size_t);
extern size_t strcspn(const char *, const char *);
extern char * strpbrk(const char *, const char *);
extern size_t strspn(const char *, const char *);
extern char * strstr(const char *, const char *);
extern char * stristr(const char *, const char *);
extern char * strerror(int);
extern size_t strlen(const char *);
extern char * strchr(const char *, int);
extern char * strichr(const char *, int);
extern char * strrchr(const char *, int);
extern char * strrichr(const char *, int);

# 13 "conversions.h"
unsigned char A[6][6];

char *intToString(int Number);
int stringToInt(const char CharNumber[]);
int scaleChange(int Xmax, int Xmin, int Ymax, int Ymin, int Y);
int ConvBrutoToReal(unsigned char n1, unsigned char n2);
double *MutMatA(const double *B);
void AllocA(unsigned char *DataReceive);

# 37 "conversions.c"
int scaleChange(int Xmax, int Xmin, int Ymax, int Ymin, int Y){
return ((Y - Ymin)/(Ymax - Ymin)) * (Xmax - Xmin) + Xmin;
}
int ConvBrutoToReal(unsigned char n1, unsigned char n2){
return ((int)n2<<8)|(int)n1;
}

# 53
void AllocA(unsigned char *DataReceive){
unsigned j = 0;

for(unsigned i = 0; i < strlen(DataReceive); ++i){
A[j][i] = DataReceive[i];

if(i == 6) ++j;
}
}
