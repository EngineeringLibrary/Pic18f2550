

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Feb 02 19:40:43 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           	psect	idataCOMRAM
    51  002590                     __pidataCOMRAM:
    52                           	opt stack 0
    53                           
    54                           ;initializer for __pwm
    55  002590  01                 	db	1
    56  002591  01                 	db	1
    57  002592  01                 	db	1
    58  002593  01                 	db	1
    59  002594  01                 	db	1
    60                           
    61                           ;initializer for _h
    62  002595  CD                 	db	205
    63  002596  CC                 	db	204
    64  002597  3D                 	db	61
    65                           
    66                           ;initializer for _ADC_NChannel
    67  002598  0005               	dw	5
    68                           
    69                           ;initializer for _SerialLen
    70  00259A  0032               	dw	50
    71                           
    72                           ;initializer for _freq
    73  00259C  50                 	db	80
    74                           
    75                           	psect	idataBANK0
    76  00259D                     __pidataBANK0:
    77                           	opt stack 0
    78                           
    79                           ;initializer for WifiTCPSend@F4101
    80  00259D  0D                 	db	13
    81  00259E  0A                 	db	10
    82  00259F  00                 	db	0
    83                           
    84                           ;initializer for _filtro
    85  0025A0  CD                 	db	205
    86  0025A1  CC                 	db	204
    87  0025A2  3D                 	db	61
    88                           
    89                           ;initializer for _WifiTCPDataLen
    90  0025A3  000F               	dw	15
    91  0000                     _ADCON0	set	4034
    92  0000                     _ADCON0bits	set	4034
    93  0000                     _ADCON1	set	4033
    94  0000                     _ADCON2	set	4032
    95  0000                     _ADRESH	set	4036
    96  0000                     _ADRESL	set	4035
    97  0000                     _INTCON	set	4082
    98  0000                     _INTCONbits	set	4082
    99  0000                     _LATB	set	3978
   100  0000                     _PIE1bits	set	3997
   101  0000                     _PIR1bits	set	3998
   102  0000                     _PORTB	set	3969
   103  0000                     _RCREG	set	4014
   104  0000                     _SPBRG	set	4015
   105  0000                     _SPBRGH	set	4016
   106  0000                     _SSPADD	set	4040
   107  0000                     _SSPBUF	set	4041
   108  0000                     _SSPCON1	set	4038
   109  0000                     _SSPCON1bits	set	4038
   110  0000                     _SSPCON2	set	4037
   111  0000                     _SSPCON2bits	set	4037
   112  0000                     _SSPSTAT	set	4039
   113  0000                     _SSPSTATbits	set	4039
   114  0000                     _T0CON	set	4053
   115  0000                     _TMR0L	set	4054
   116  0000                     _TRISA	set	3986
   117  0000                     _TRISB	set	3987
   118  0000                     _TRISCbits	set	3988
   119  0000                     _TXREG	set	4013
   120  0000                     _ADDEN	set	32091
   121  0000                     _BRGH	set	32098
   122  0000                     _CREN	set	32092
   123  0000                     _CSRC	set	32103
   124  0000                     _FERR	set	32090
   125  0000                     _OERR	set	32089
   126  0000                     _RCIE	set	31981
   127  0000                     _RCIF	set	31989
   128  0000                     _RX9	set	32094
   129  0000                     _RX9D	set	32088
   130  0000                     _SENDB	set	32099
   131  0000                     _SPEN	set	32095
   132  0000                     _SREN	set	32093
   133  0000                     _SYNC	set	32100
   134  0000                     _TRMT	set	32097
   135  0000                     _TX9	set	32102
   136  0000                     _TX9D	set	32096
   137  0000                     _TXEN	set	32101
   138  0000                     _TXIE	set	31980
   139  0000                     _TXIF	set	31988
   140                           
   141                           	psect	smallconst
   142  00081A                     __psmallconst:
   143                           	opt stack 0
   144  00081A  00                 	db	0
   145  00081B  41                 	db	65	;'A'
   146  00081C  54                 	db	84	;'T'
   147  00081D  2B                 	db	43
   148  00081E  43                 	db	67	;'C'
   149  00081F  57                 	db	87	;'W'
   150  000820  4A                 	db	74	;'J'
   151  000821  41                 	db	65	;'A'
   152  000822  50                 	db	80	;'P'
   153  000823  3D                 	db	61	;'='
   154  000824  22                 	db	34
   155  000825  42                 	db	66	;'B'
   156  000826  61                 	db	97	;'a'
   157  000827  74                 	db	116	;'t'
   158  000828  43                 	db	67	;'C'
   159  000829  61                 	db	97	;'a'
   160  00082A  76                 	db	118	;'v'
   161  00082B  65                 	db	101	;'e'
   162  00082C  72                 	db	114	;'r'
   163  00082D  6E                 	db	110	;'n'
   164  00082E  61                 	db	97	;'a'
   165  00082F  22                 	db	34
   166  000830  2C                 	db	44
   167  000831  22                 	db	34
   168  000832  32                 	db	50	;'2'
   169  000833  33                 	db	51	;'3'
   170  000834  64                 	db	100	;'d'
   171  000835  66                 	db	102	;'f'
   172  000836  64                 	db	100	;'d'
   173  000837  31                 	db	49	;'1'
   174  000838  62                 	db	98	;'b'
   175  000839  36                 	db	54	;'6'
   176  00083A  34                 	db	52	;'4'
   177  00083B  62                 	db	98	;'b'
   178  00083C  22                 	db	34
   179  00083D  0D                 	db	13
   180  00083E  0A                 	db	10
   181  00083F  00                 	db	0
   182  000840  41                 	db	65	;'A'
   183  000841  54                 	db	84	;'T'
   184  000842  2B                 	db	43
   185  000843  43                 	db	67	;'C'
   186  000844  49                 	db	73	;'I'
   187  000845  50                 	db	80	;'P'
   188  000846  53                 	db	83	;'S'
   189  000847  45                 	db	69	;'E'
   190  000848  52                 	db	82	;'R'
   191  000849  56                 	db	86	;'V'
   192  00084A  45                 	db	69	;'E'
   193  00084B  52                 	db	82	;'R'
   194  00084C  3D                 	db	61	;'='
   195  00084D  31                 	db	49	;'1'
   196  00084E  2C                 	db	44
   197  00084F  34                 	db	52	;'4'
   198  000850  30                 	db	48	;'0'
   199  000851  30                 	db	48	;'0'
   200  000852  30                 	db	48	;'0'
   201  000853  0D                 	db	13
   202  000854  0A                 	db	10
   203  000855  00                 	db	0
   204  000856  41                 	db	65	;'A'
   205  000857  54                 	db	84	;'T'
   206  000858  2B                 	db	43
   207  000859  43                 	db	67	;'C'
   208  00085A  57                 	db	87	;'W'
   209  00085B  4D                 	db	77	;'M'
   210  00085C  4F                 	db	79	;'O'
   211  00085D  44                 	db	68	;'D'
   212  00085E  45                 	db	69	;'E'
   213  00085F  3D                 	db	61	;'='
   214  000860  31                 	db	49	;'1'
   215  000861  0D                 	db	13
   216  000862  0A                 	db	10
   217  000863  00                 	db	0
   218  000864  41                 	db	65	;'A'
   219  000865  54                 	db	84	;'T'
   220  000866  2B                 	db	43
   221  000867  43                 	db	67	;'C'
   222  000868  49                 	db	73	;'I'
   223  000869  50                 	db	80	;'P'
   224  00086A  4D                 	db	77	;'M'
   225  00086B  55                 	db	85	;'U'
   226  00086C  58                 	db	88	;'X'
   227  00086D  3D                 	db	61	;'='
   228  00086E  31                 	db	49	;'1'
   229  00086F  0D                 	db	13
   230  000870  0A                 	db	10
   231  000871  00                 	db	0
   232  000872  41                 	db	65	;'A'
   233  000873  54                 	db	84	;'T'
   234  000874  2B                 	db	43
   235  000875  43                 	db	67	;'C'
   236  000876  49                 	db	73	;'I'
   237  000877  50                 	db	80	;'P'
   238  000878  53                 	db	83	;'S'
   239  000879  45                 	db	69	;'E'
   240  00087A  4E                 	db	78	;'N'
   241  00087B  44                 	db	68	;'D'
   242  00087C  3D                 	db	61	;'='
   243  00087D  30                 	db	48	;'0'
   244  00087E  2C                 	db	44
   245  00087F  00                 	db	0
   246  000880  6C                 	db	108	;'l'
   247  000881  69                 	db	105	;'i'
   248  000882  6E                 	db	110	;'n'
   249  000883  6B                 	db	107	;'k'
   250  000884  20                 	db	32
   251  000885  69                 	db	105	;'i'
   252  000886  73                 	db	115	;'s'
   253  000887  20                 	db	32
   254  000888  6E                 	db	110	;'n'
   255  000889  6F                 	db	111	;'o'
   256  00088A  74                 	db	116	;'t'
   257  00088B  00                 	db	0
   258  00088C  41                 	db	65	;'A'
   259  00088D  54                 	db	84	;'T'
   260  00088E  2B                 	db	43
   261  00088F  52                 	db	82	;'R'
   262  000890  53                 	db	83	;'S'
   263  000891  54                 	db	84	;'T'
   264  000892  0D                 	db	13
   265  000893  0A                 	db	10
   266  000894  00                 	db	0
   267  000895  4F                 	db	79	;'O'
   268  000896  4B                 	db	75	;'K'
   269  000897  00                 	db	0
   270                           
   271                           ; #config settings
   272  000898  00                 	db	0	; dummy byte at the end
   273  0000                     
   274                           	psect	cinit
   275  0021DA                     __pcinit:
   276                           	opt stack 0
   277  0021DA                     start_initialization:
   278                           	opt stack 0
   279  0021DA                     __initialization:
   280                           	opt stack 0
   281                           
   282                           ; Initialize objects allocated to BANK0 (8 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284  0021DA  0E9D               	movlw	low __pidataBANK0
   285  0021DC  6EF6               	movwf	tblptrl,c
   286  0021DE  0E25               	movlw	high __pidataBANK0
   287  0021E0  6EF7               	movwf	tblptrh,c
   288  0021E2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289  0021E4  6EF8               	movwf	tblptru,c
   290  0021E6  EE00  F0DE         	lfsr	0,__pdataBANK0
   291  0021EA  EE10 F008          	lfsr	1,8
   292  0021EE                     copy_data0:
   293  0021EE  0009               	tblrd		*+
   294  0021F0  CFF5 FFEE          	movff	tablat,postinc0
   295  0021F4  50E5               	movf	postdec1,w,c
   296  0021F6  50E1               	movf	fsr1l,w,c
   297  0021F8  E1FA               	bnz	copy_data0
   298                           
   299                           ; Initialize objects allocated to COMRAM (13 bytes)
   300                           ; load TBLPTR registers with __pidataCOMRAM
   301  0021FA  0E90               	movlw	low __pidataCOMRAM
   302  0021FC  6EF6               	movwf	tblptrl,c
   303  0021FE  0E25               	movlw	high __pidataCOMRAM
   304  002200  6EF7               	movwf	tblptrh,c
   305  002202  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   306  002204  6EF8               	movwf	tblptru,c
   307  002206  EE00  F03B         	lfsr	0,__pdataCOMRAM
   308  00220A  EE10 F00D          	lfsr	1,13
   309  00220E                     copy_data1:
   310  00220E  0009               	tblrd		*+
   311  002210  CFF5 FFEE          	movff	tablat,postinc0
   312  002214  50E5               	movf	postdec1,w,c
   313  002216  50E1               	movf	fsr1l,w,c
   314  002218  E1FA               	bnz	copy_data1
   315                           
   316                           ; Clear objects allocated to BANK2 (50 bytes)
   317  00221A  EE02  F000         	lfsr	0,__pbssBANK2
   318  00221E  0E32               	movlw	50
   319  002220                     clear_0:
   320  002220  6AEE               	clrf	postinc0,c
   321  002222  06E8               	decf	wreg,f,c
   322  002224  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to BANK1 (254 bytes)
   325  002226  EE01  F000         	lfsr	0,__pbssBANK1
   326  00222A  0EFE               	movlw	254
   327  00222C                     clear_1:
   328  00222C  6AEE               	clrf	postinc0,c
   329  00222E  06E8               	decf	wreg,f,c
   330  002230  E1FD               	bnz	clear_1
   331                           
   332                           ; Clear objects allocated to BANK0 (93 bytes)
   333  002232  EE00  F060         	lfsr	0,__pbssBANK0
   334  002236  0E5D               	movlw	93
   335  002238                     clear_2:
   336  002238  6AEE               	clrf	postinc0,c
   337  00223A  06E8               	decf	wreg,f,c
   338  00223C  E1FD               	bnz	clear_2
   339                           
   340                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   341  00223E  6A4C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   342                           
   343                           ; Clear objects allocated to COMRAM (4 bytes)
   344  002240  6A4B               	clrf	(__pbssCOMRAM+3)& (0+255),c
   345  002242  6A4A               	clrf	(__pbssCOMRAM+2)& (0+255),c
   346  002244  6A49               	clrf	(__pbssCOMRAM+1)& (0+255),c
   347  002246  6A48               	clrf	__pbssCOMRAM& (0+255),c
   348  002248                     end_of_initialization:
   349                           	opt stack 0
   350  002248                     __end_of__initialization:
   351                           	opt stack 0
   352  002248  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   353  00224A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   354  00224C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   355  00224E  6EF8               	movwf	tblptru,c
   356  002250  0100               	movlb	0
   357  002252  EF4D  F004         	goto	_main	;jump to C main() function
   358                           tblptru	equ	0xFF8
   359                           tblptrh	equ	0xFF7
   360                           tblptrl	equ	0xFF6
   361                           tablat	equ	0xFF5
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           postdec1	equ	0xFE5
   365                           fsr1l	equ	0xFE1
   366                           
   367                           	psect	bitbssCOMRAM
   368  000260                     __pbitbssCOMRAM:
   369                           	opt stack 0
   370  000260                     _flagData:
   371                           	opt stack 0
   372  000260                     	ds	1
   373  000261                     _flagLink:
   374                           	opt stack 0
   375  000261                     	ds	1
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	bssCOMRAM
   386  000048                     __pbssCOMRAM:
   387                           	opt stack 0
   388  000048                     _ADC_Channel:
   389                           	opt stack 0
   390  000048                     	ds	2
   391  00004A                     _PWM_Counter:
   392                           	opt stack 0
   393  00004A                     	ds	1
   394  00004B                     _SerialReceivedData:
   395                           	opt stack 0
   396  00004B                     	ds	1
   397                           tblptru	equ	0xFF8
   398                           tblptrh	equ	0xFF7
   399                           tblptrl	equ	0xFF6
   400                           tablat	equ	0xFF5
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           postdec1	equ	0xFE5
   404                           fsr1l	equ	0xFE1
   405                           
   406                           	psect	dataCOMRAM
   407  00003B                     __pdataCOMRAM:
   408                           	opt stack 0
   409  00003B                     __pwm:
   410                           	opt stack 0
   411  00003B                     	ds	5
   412  000040                     _h:
   413                           	opt stack 0
   414  000040                     	ds	3
   415  000043                     _ADC_NChannel:
   416                           	opt stack 0
   417  000043                     	ds	2
   418  000045                     _SerialLen:
   419                           	opt stack 0
   420  000045                     	ds	2
   421  000047                     _freq:
   422                           	opt stack 0
   423  000047                     	ds	1
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           postdec1	equ	0xFE5
   431                           fsr1l	equ	0xFE1
   432                           
   433                           	psect	bssBANK0
   434  000060                     __pbssBANK0:
   435                           	opt stack 0
   436  000060                     _WifiTCPData:
   437                           	opt stack 0
   438  000060                     	ds	15
   439  00006F                     _accel:
   440                           	opt stack 0
   441  00006F                     	ds	9
   442  000078                     _accelBias:
   443                           	opt stack 0
   444  000078                     	ds	9
   445  000081                     _accelTemp:
   446                           	opt stack 0
   447  000081                     	ds	9
   448  00008A                     _giro:
   449                           	opt stack 0
   450  00008A                     	ds	9
   451  000093                     _giroBias:
   452                           	opt stack 0
   453  000093                     	ds	9
   454  00009C                     _giroTemp:
   455                           	opt stack 0
   456  00009C                     	ds	9
   457  0000A5                     _pos:
   458                           	opt stack 0
   459  0000A5                     	ds	9
   460  0000AE                     _vel:
   461                           	opt stack 0
   462  0000AE                     	ds	9
   463  0000B7                     _PID_interruptCounter:
   464                           	opt stack 0
   465  0000B7                     	ds	4
   466  0000BB                     _contador:
   467                           	opt stack 0
   468  0000BB                     	ds	2
   469                           tblptru	equ	0xFF8
   470                           tblptrh	equ	0xFF7
   471                           tblptrl	equ	0xFF6
   472                           tablat	equ	0xFF5
   473                           postinc0	equ	0xFEE
   474                           wreg	equ	0xFE8
   475                           postdec1	equ	0xFE5
   476                           fsr1l	equ	0xFE1
   477                           
   478                           	psect	dataBANK0
   479  0000DE                     __pdataBANK0:
   480                           	opt stack 0
   481  0000DE                     WifiTCPSend@F4101:
   482                           	opt stack 0
   483  0000DE                     	ds	3
   484  0000E1                     _filtro:
   485                           	opt stack 0
   486  0000E1                     	ds	3
   487  0000E4                     _WifiTCPDataLen:
   488                           	opt stack 0
   489  0000E4                     	ds	2
   490                           tblptru	equ	0xFF8
   491                           tblptrh	equ	0xFF7
   492                           tblptrl	equ	0xFF6
   493                           tablat	equ	0xFF5
   494                           postinc0	equ	0xFEE
   495                           wreg	equ	0xFE8
   496                           postdec1	equ	0xFE5
   497                           fsr1l	equ	0xFE1
   498                           
   499                           	psect	bssBANK1
   500  000100                     __pbssBANK1:
   501                           	opt stack 0
   502  000100                     _pid:
   503                           	opt stack 0
   504  000100                     	ds	148
   505  000194                     _A:
   506                           	opt stack 0
   507  000194                     	ds	36
   508  0001B8                     _SerialReceivedString:
   509                           	opt stack 0
   510  0001B8                     	ds	50
   511  0001EA                     _ADC:
   512                           	opt stack 0
   513  0001EA                     	ds	20
   514                           tblptru	equ	0xFF8
   515                           tblptrh	equ	0xFF7
   516                           tblptrl	equ	0xFF6
   517                           tablat	equ	0xFF5
   518                           postinc0	equ	0xFEE
   519                           wreg	equ	0xFE8
   520                           postdec1	equ	0xFE5
   521                           fsr1l	equ	0xFE1
   522                           
   523                           	psect	bssBANK2
   524  000200                     __pbssBANK2:
   525                           	opt stack 0
   526  000200                     _SerialSendString:
   527                           	opt stack 0
   528  000200                     	ds	50
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           postdec1	equ	0xFE5
   536                           fsr1l	equ	0xFE1
   537                           
   538                           	psect	cstackBANK2
   539  000232                     __pcstackBANK2:
   540                           	opt stack 0
   541  000232                     main@j:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x0
   545  000232                     	ds	1
   546  000233                     main@u2:
   547                           	opt stack 0
   548                           
   549                           ; 3 bytes @ 0x1
   550  000233                     	ds	3
   551  000236                     main@u3:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x4
   555  000236                     	ds	3
   556  000239                     main@theta:
   557                           	opt stack 0
   558                           
   559                           ; 3 bytes @ 0x7
   560  000239                     	ds	3
   561  00023C                     main@z:
   562                           	opt stack 0
   563                           
   564                           ; 3 bytes @ 0xA
   565  00023C                     	ds	3
   566  00023F                     main@phi:
   567                           	opt stack 0
   568                           
   569                           ; 3 bytes @ 0xD
   570  00023F                     	ds	3
   571  000242                     main@psi:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x10
   575  000242                     	ds	3
   576  000245                     main@l:
   577                           	opt stack 0
   578                           
   579                           ; 3 bytes @ 0x13
   580  000245                     	ds	3
   581  000248                     main@lambda:
   582                           	opt stack 0
   583                           
   584                           ; 3 bytes @ 0x16
   585  000248                     	ds	3
   586  00024B                     main@u1:
   587                           	opt stack 0
   588                           
   589                           ; 3 bytes @ 0x19
   590  00024B                     	ds	3
   591  00024E                     main@u4:
   592                           	opt stack 0
   593                           
   594                           ; 3 bytes @ 0x1C
   595  00024E                     	ds	3
   596  000251                     _main$1973:
   597                           	opt stack 0
   598                           
   599                           ; 3 bytes @ 0x1F
   600  000251                     	ds	3
   601  000254                     main@i:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x22
   605  000254                     	ds	1
   606  000255                     _main$1972:
   607                           	opt stack 0
   608                           
   609                           ; 3 bytes @ 0x23
   610  000255                     	ds	3
   611  000258                     main@pwmTemp:
   612                           	opt stack 0
   613                           
   614                           ; 3 bytes @ 0x26
   615  000258                     	ds	3
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           postdec1	equ	0xFE5
   623                           fsr1l	equ	0xFE1
   624                           
   625                           	psect	cstackBANK0
   626  0000BD                     __pcstackBANK0:
   627                           	opt stack 0
   628  0000BD                     ___ftmul@exp:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x0
   632  0000BD                     	ds	1
   633  0000BE                     ___ftmul@f3_as_product:
   634                           	opt stack 0
   635                           
   636                           ; 3 bytes @ 0x1
   637  0000BE                     	ds	3
   638  0000C1                     ___ftmul@cntr:
   639                           	opt stack 0
   640                           
   641                           ; 1 bytes @ 0x4
   642  0000C1                     	ds	1
   643  0000C2                     ___ftmul@sign:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x5
   647  0000C2                     	ds	1
   648  0000C3                     ?___ftdiv:
   649                           	opt stack 0
   650  0000C3                     ___ftdiv@f1:
   651                           	opt stack 0
   652                           
   653                           ; 3 bytes @ 0x6
   654  0000C3                     	ds	3
   655  0000C6                     ___ftdiv@f2:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x9
   659  0000C6                     	ds	3
   660  0000C9                     ___ftdiv@cntr:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0xC
   664  0000C9                     	ds	1
   665  0000CA                     ___ftdiv@f3:
   666                           	opt stack 0
   667                           
   668                           ; 3 bytes @ 0xD
   669  0000CA                     	ds	3
   670  0000CD                     ___ftdiv@exp:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x10
   674  0000CD                     	ds	1
   675  0000CE                     ___ftdiv@sign:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x11
   679  0000CE                     	ds	1
   680  0000CF                     PID_outputControlCalc@reference:
   681                           	opt stack 0
   682                           
   683                           ; 3 bytes @ 0x12
   684  0000CF                     	ds	3
   685  0000D2                     PID_outputControlCalc@systemOutput:
   686                           	opt stack 0
   687                           
   688                           ; 3 bytes @ 0x15
   689  0000D2                     	ds	3
   690  0000D5                     PID_outputControlCalc@whichPID:
   691                           	opt stack 0
   692                           
   693                           ; 1 bytes @ 0x18
   694  0000D5                     	ds	1
   695  0000D6                     
   696                           ; 1 bytes @ 0x19
   697  0000D6                     	ds	2
   698  0000D8                     _PID_outputControlCalc$1974:
   699                           	opt stack 0
   700                           
   701                           ; 3 bytes @ 0x1B
   702  0000D8                     	ds	3
   703  0000DB                     ??_main:
   704                           
   705                           ; 1 bytes @ 0x1E
   706  0000DB                     	ds	3
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           postinc0	equ	0xFEE
   712                           wreg	equ	0xFE8
   713                           postdec1	equ	0xFE5
   714                           fsr1l	equ	0xFE1
   715                           
   716                           	psect	cstackCOMRAM
   717  000001                     __pcstackCOMRAM:
   718                           	opt stack 0
   719  000001                     waitToken@value:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x0
   723  000001                     	ds	1
   724  000002                     SerialReadUntilToken@charToCompare:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x1
   728  000002                     	ds	1
   729  000003                     SerialReadUntilToken@i:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x2
   733  000003                     	ds	2
   734  000005                     ??_INTERRUPTION:
   735                           
   736                           ; 1 bytes @ 0x4
   737  000005                     	ds	14
   738  000013                     ??_IdleI2C:
   739  000013                     ?___ftpack:
   740                           	opt stack 0
   741  000013                     ?___fttol:
   742                           	opt stack 0
   743  000013                     delayMS@waitTime:
   744                           	opt stack 0
   745  000013                     ___ftpack@arg:
   746                           	opt stack 0
   747  000013                     ___ftge@ff1:
   748                           	opt stack 0
   749  000013                     ___fttol@f1:
   750                           	opt stack 0
   751                           
   752                           ; 3 bytes @ 0x12
   753  000013                     	ds	1
   754  000014                     WriteI2C@data_out:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x13
   758  000014                     	ds	1
   759  000015                     ??_delayMS:
   760  000015                     readACC@Adress:
   761                           	opt stack 0
   762  000015                     readGIRO@Adress:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0x14
   766  000015                     	ds	1
   767  000016                     readACC@c:
   768                           	opt stack 0
   769  000016                     readGIRO@c:
   770                           	opt stack 0
   771  000016                     ___ftpack@exp:
   772                           	opt stack 0
   773  000016                     delayMS@j:
   774                           	opt stack 0
   775  000016                     ___ftge@ff2:
   776                           	opt stack 0
   777                           
   778                           ; 3 bytes @ 0x15
   779  000016                     	ds	1
   780  000017                     ??___fttol:
   781  000017                     ?___awdiv:
   782                           	opt stack 0
   783  000017                     ___ftpack@sign:
   784                           	opt stack 0
   785  000017                     ___awdiv@dividend:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x16
   789  000017                     	ds	1
   790  000018                     ??___ftpack:
   791                           
   792                           ; 1 bytes @ 0x17
   793  000018                     	ds	1
   794  000019                     ??___ftge:
   795  000019                     ___awdiv@divisor:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x18
   799  000019                     	ds	2
   800  00001B                     ?___ftneg:
   801                           	opt stack 0
   802  00001B                     ___awdiv@counter:
   803                           	opt stack 0
   804  00001B                     ___ftneg@f1:
   805                           	opt stack 0
   806                           
   807                           ; 3 bytes @ 0x1A
   808  00001B                     	ds	1
   809  00001C                     ___awdiv@sign:
   810                           	opt stack 0
   811  00001C                     ___fttol@sign1:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x1B
   815  00001C                     	ds	1
   816  00001D                     ___awdiv@quotient:
   817                           	opt stack 0
   818  00001D                     ___fttol@lval:
   819                           	opt stack 0
   820                           
   821                           ; 4 bytes @ 0x1C
   822  00001D                     	ds	1
   823  00001E                     
   824                           ; 1 bytes @ 0x1D
   825  00001E                     	ds	1
   826  00001F                     ?___awtoft:
   827                           	opt stack 0
   828  00001F                     ___awtoft@c:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x1E
   832  00001F                     	ds	2
   833  000021                     ___fttol@exp1:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x20
   837  000021                     	ds	1
   838  000022                     ___awtoft@sign:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x21
   842  000022                     	ds	1
   843  000023                     ?___ftadd:
   844                           	opt stack 0
   845  000023                     ___ftadd@f1:
   846                           	opt stack 0
   847                           
   848                           ; 3 bytes @ 0x22
   849  000023                     	ds	3
   850  000026                     ___ftadd@f2:
   851                           	opt stack 0
   852                           
   853                           ; 3 bytes @ 0x25
   854  000026                     	ds	3
   855  000029                     ??___ftadd:
   856                           
   857                           ; 1 bytes @ 0x28
   858  000029                     	ds	3
   859  00002C                     ___ftadd@sign:
   860                           	opt stack 0
   861                           
   862                           ; 1 bytes @ 0x2B
   863  00002C                     	ds	1
   864  00002D                     ___ftadd@exp2:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x2C
   868  00002D                     	ds	1
   869  00002E                     ___ftadd@exp1:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x2D
   873  00002E                     	ds	1
   874  00002F                     ?___ftmul:
   875                           	opt stack 0
   876  00002F                     ___ftmul@f1:
   877                           	opt stack 0
   878                           
   879                           ; 3 bytes @ 0x2E
   880  00002F                     	ds	3
   881  000032                     ___ftmul@f2:
   882                           	opt stack 0
   883                           
   884                           ; 3 bytes @ 0x31
   885  000032                     	ds	3
   886  000035                     ??___ftmul:
   887                           
   888                           ; 1 bytes @ 0x34
   889  000035                     	ds	3
   890  000038                     ??___ftdiv:
   891                           
   892                           ; 1 bytes @ 0x37
   893  000038                     	ds	3
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           postinc0	equ	0xFEE
   899                           wreg	equ	0xFE8
   900                           postdec1	equ	0xFE5
   901                           fsr1l	equ	0xFE1
   902                           
   903 ;;
   904 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   905 ;;
   906 ;; *************** function _main *****************
   907 ;; Defined at:
   908 ;;		line 25 in file "main.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  pwmTemp         3   38[BANK2 ] float 
   913 ;;  u4              3   28[BANK2 ] float 
   914 ;;  u1              3   25[BANK2 ] float 
   915 ;;  lambda          3   22[BANK2 ] float 
   916 ;;  l               3   19[BANK2 ] float 
   917 ;;  u3              3    4[BANK2 ] float 
   918 ;;  u2              3    1[BANK2 ] float 
   919 ;;  i               1   34[BANK2 ] unsigned char 
   920 ;;  psi             3   16[BANK2 ] float 
   921 ;;  phi             3   13[BANK2 ] float 
   922 ;;  z               3   10[BANK2 ] float 
   923 ;;  theta           3    7[BANK2 ] float 
   924 ;;  j               1    0[BANK2 ] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   934 ;;      Params:         0       0       0       0       0       0       0       0       0
   935 ;;      Locals:         0       0       0      41       0       0       0       0       0
   936 ;;      Temps:          0       3       0       0       0       0       0       0       0
   937 ;;      Totals:         0       3       0      41       0       0       0       0       0
   938 ;;Total ram usage:       44 bytes
   939 ;; Hardware stack levels required when called:    7
   940 ;; This function calls:
   941 ;;		_PID_outputControlCalc
   942 ;;		_PWM_Init
   943 ;;		___awdiv
   944 ;;		___awtoft
   945 ;;		___ftadd
   946 ;;		___ftdiv
   947 ;;		___ftge
   948 ;;		___ftmul
   949 ;;		___ftneg
   950 ;;		___fttol
   951 ;;		_delayMS
   952 ;;		_initUART
   953 ;;		_readACC
   954 ;;		_readGIRO
   955 ;; This function is called by:
   956 ;;		Startup code after reset
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text0
   961  00089A                     __ptext0:
   962                           	opt stack 0
   963  00089A                     _main:
   964                           	opt stack 24
   965                           
   966                           ;main.c: 30: initUART();
   967                           
   968                           ;incstack = 0
   969  00089A  EC42  F012         	call	_initUART	;wreg free
   970                           
   971                           ;main.c: 32: PWM_Init();
   972  00089E  ECA1  F012         	call	_PWM_Init	;wreg free
   973                           
   974                           ;main.c: 35: float z = -11.6; float phi = -3; float psi = -2; float theta = -2;
   975  0008A2  0E9A               	movlw	154
   976  0008A4  0102               	movlb	2	; () banked
   977  0008A6  6F3C               	movwf	main@z& (0+255),b
   978  0008A8  0E39               	movlw	57
   979  0008AA  0102               	movlb	2	; () banked
   980  0008AC  6F3D               	movwf	(main@z+1)& (0+255),b
   981  0008AE  0EC1               	movlw	193
   982  0008B0  0102               	movlb	2	; () banked
   983  0008B2  6F3E               	movwf	(main@z+2)& (0+255),b
   984                           
   985                           ; BSR set to: 2
   986  0008B4  0E00               	movlw	0
   987  0008B6  0102               	movlb	2	; () banked
   988  0008B8  6F3F               	movwf	main@phi& (0+255),b
   989  0008BA  0E40               	movlw	64
   990  0008BC  0102               	movlb	2	; () banked
   991  0008BE  6F40               	movwf	(main@phi+1)& (0+255),b
   992  0008C0  0EC0               	movlw	192
   993  0008C2  0102               	movlb	2	; () banked
   994  0008C4  6F41               	movwf	(main@phi+2)& (0+255),b
   995                           
   996                           ; BSR set to: 2
   997  0008C6  0E00               	movlw	0
   998  0008C8  0102               	movlb	2	; () banked
   999  0008CA  6F42               	movwf	main@psi& (0+255),b
  1000  0008CC  0E00               	movlw	0
  1001  0008CE  0102               	movlb	2	; () banked
  1002  0008D0  6F43               	movwf	(main@psi+1)& (0+255),b
  1003  0008D2  0EC0               	movlw	192
  1004  0008D4  0102               	movlb	2	; () banked
  1005  0008D6  6F44               	movwf	(main@psi+2)& (0+255),b
  1006                           
  1007                           ; BSR set to: 2
  1008  0008D8  0E00               	movlw	0
  1009  0008DA  0102               	movlb	2	; () banked
  1010  0008DC  6F39               	movwf	main@theta& (0+255),b
  1011  0008DE  0E00               	movlw	0
  1012  0008E0  0102               	movlb	2	; () banked
  1013  0008E2  6F3A               	movwf	(main@theta+1)& (0+255),b
  1014  0008E4  0EC0               	movlw	192
  1015  0008E6  0102               	movlb	2	; () banked
  1016  0008E8  6F3B               	movwf	(main@theta+2)& (0+255),b
  1017                           
  1018                           ; BSR set to: 2
  1019                           ;main.c: 37: pid[0].lowerLimit = -127; pid[0].upperLimit = 127;
  1020  0008EA  0E00               	movlw	0
  1021  0008EC  0101               	movlb	1	; () banked
  1022  0008EE  6F1B               	movwf	(_pid+27)& (0+255),b
  1023  0008F0  0EFE               	movlw	254
  1024  0008F2  0101               	movlb	1	; () banked
  1025  0008F4  6F1C               	movwf	(_pid+28)& (0+255),b
  1026  0008F6  0EC2               	movlw	194
  1027  0008F8  0101               	movlb	1	; () banked
  1028  0008FA  6F1D               	movwf	(_pid+29)& (0+255),b
  1029                           
  1030                           ; BSR set to: 1
  1031  0008FC  0E00               	movlw	0
  1032  0008FE  0101               	movlb	1	; () banked
  1033  000900  6F18               	movwf	(_pid+24)& (0+255),b
  1034  000902  0EFE               	movlw	254
  1035  000904  0101               	movlb	1	; () banked
  1036  000906  6F19               	movwf	(_pid+25)& (0+255),b
  1037  000908  0E42               	movlw	66
  1038  00090A  0101               	movlb	1	; () banked
  1039  00090C  6F1A               	movwf	(_pid+26)& (0+255),b
  1040                           
  1041                           ; BSR set to: 1
  1042                           ;main.c: 38: pid[0].Kp = 1.0; pid[0].Ki = 0.0; pid[0].Kd = 0.0; pid[0].step = 1.0;
  1043  00090E  0E00               	movlw	0
  1044  000910  0101               	movlb	1	; () banked
  1045  000912  6F00               	movwf	_pid& (0+255),b
  1046  000914  0E80               	movlw	128
  1047  000916  0101               	movlb	1	; () banked
  1048  000918  6F01               	movwf	(_pid+1)& (0+255),b
  1049  00091A  0E3F               	movlw	63
  1050  00091C  0101               	movlb	1	; () banked
  1051  00091E  6F02               	movwf	(_pid+2)& (0+255),b
  1052                           
  1053                           ; BSR set to: 1
  1054  000920  0E00               	movlw	0
  1055  000922  0101               	movlb	1	; () banked
  1056  000924  6F03               	movwf	(_pid+3)& (0+255),b
  1057  000926  0E00               	movlw	0
  1058  000928  0101               	movlb	1	; () banked
  1059  00092A  6F04               	movwf	(_pid+4)& (0+255),b
  1060  00092C  0E00               	movlw	0
  1061  00092E  0101               	movlb	1	; () banked
  1062  000930  6F05               	movwf	(_pid+5)& (0+255),b
  1063                           
  1064                           ; BSR set to: 1
  1065  000932  0E00               	movlw	0
  1066  000934  0101               	movlb	1	; () banked
  1067  000936  6F06               	movwf	(_pid+6)& (0+255),b
  1068  000938  0E00               	movlw	0
  1069  00093A  0101               	movlb	1	; () banked
  1070  00093C  6F07               	movwf	(_pid+7)& (0+255),b
  1071  00093E  0E00               	movlw	0
  1072  000940  0101               	movlb	1	; () banked
  1073  000942  6F08               	movwf	(_pid+8)& (0+255),b
  1074                           
  1075                           ; BSR set to: 1
  1076  000944  0E00               	movlw	0
  1077  000946  0101               	movlb	1	; () banked
  1078  000948  6F15               	movwf	(_pid+21)& (0+255),b
  1079  00094A  0E80               	movlw	128
  1080  00094C  0101               	movlb	1	; () banked
  1081  00094E  6F16               	movwf	(_pid+22)& (0+255),b
  1082  000950  0E3F               	movlw	63
  1083  000952  0101               	movlb	1	; () banked
  1084  000954  6F17               	movwf	(_pid+23)& (0+255),b
  1085                           
  1086                           ; BSR set to: 1
  1087                           ;main.c: 40: pid[1].lowerLimit = -127; pid[1].upperLimit = 127;
  1088  000956  0E00               	movlw	0
  1089  000958  0101               	movlb	1	; () banked
  1090  00095A  6F40               	movwf	(_pid+64)& (0+255),b
  1091  00095C  0EFE               	movlw	254
  1092  00095E  0101               	movlb	1	; () banked
  1093  000960  6F41               	movwf	(_pid+65)& (0+255),b
  1094  000962  0EC2               	movlw	194
  1095  000964  0101               	movlb	1	; () banked
  1096  000966  6F42               	movwf	(_pid+66)& (0+255),b
  1097                           
  1098                           ; BSR set to: 1
  1099  000968  0E00               	movlw	0
  1100  00096A  0101               	movlb	1	; () banked
  1101  00096C  6F3D               	movwf	(_pid+61)& (0+255),b
  1102  00096E  0EFE               	movlw	254
  1103  000970  0101               	movlb	1	; () banked
  1104  000972  6F3E               	movwf	(_pid+62)& (0+255),b
  1105  000974  0E42               	movlw	66
  1106  000976  0101               	movlb	1	; () banked
  1107  000978  6F3F               	movwf	(_pid+63)& (0+255),b
  1108                           
  1109                           ; BSR set to: 1
  1110                           ;main.c: 41: pid[1].Kp = 1.0; pid[1].Ki = 0.0; pid[1].Kd = 0.0; pid[1].step = 1.0;
  1111  00097A  0E00               	movlw	0
  1112  00097C  0101               	movlb	1	; () banked
  1113  00097E  6F25               	movwf	(_pid+37)& (0+255),b
  1114  000980  0E80               	movlw	128
  1115  000982  0101               	movlb	1	; () banked
  1116  000984  6F26               	movwf	(_pid+38)& (0+255),b
  1117  000986  0E3F               	movlw	63
  1118  000988  0101               	movlb	1	; () banked
  1119  00098A  6F27               	movwf	(_pid+39)& (0+255),b
  1120                           
  1121                           ; BSR set to: 1
  1122  00098C  0E00               	movlw	0
  1123  00098E  0101               	movlb	1	; () banked
  1124  000990  6F28               	movwf	(_pid+40)& (0+255),b
  1125  000992  0E00               	movlw	0
  1126  000994  0101               	movlb	1	; () banked
  1127  000996  6F29               	movwf	(_pid+41)& (0+255),b
  1128  000998  0E00               	movlw	0
  1129  00099A  0101               	movlb	1	; () banked
  1130  00099C  6F2A               	movwf	(_pid+42)& (0+255),b
  1131                           
  1132                           ; BSR set to: 1
  1133  00099E  0E00               	movlw	0
  1134  0009A0  0101               	movlb	1	; () banked
  1135  0009A2  6F2B               	movwf	(_pid+43)& (0+255),b
  1136  0009A4  0E00               	movlw	0
  1137  0009A6  0101               	movlb	1	; () banked
  1138  0009A8  6F2C               	movwf	(_pid+44)& (0+255),b
  1139  0009AA  0E00               	movlw	0
  1140  0009AC  0101               	movlb	1	; () banked
  1141  0009AE  6F2D               	movwf	(_pid+45)& (0+255),b
  1142                           
  1143                           ; BSR set to: 1
  1144  0009B0  0E00               	movlw	0
  1145  0009B2  0101               	movlb	1	; () banked
  1146  0009B4  6F3A               	movwf	(_pid+58)& (0+255),b
  1147  0009B6  0E80               	movlw	128
  1148  0009B8  0101               	movlb	1	; () banked
  1149  0009BA  6F3B               	movwf	(_pid+59)& (0+255),b
  1150  0009BC  0E3F               	movlw	63
  1151  0009BE  0101               	movlb	1	; () banked
  1152  0009C0  6F3C               	movwf	(_pid+60)& (0+255),b
  1153                           
  1154                           ; BSR set to: 1
  1155                           ;main.c: 43: pid[2].lowerLimit = -127; pid[2].upperLimit = 127;
  1156  0009C2  0E00               	movlw	0
  1157  0009C4  0101               	movlb	1	; () banked
  1158  0009C6  6F65               	movwf	(_pid+101)& (0+255),b
  1159  0009C8  0EFE               	movlw	254
  1160  0009CA  0101               	movlb	1	; () banked
  1161  0009CC  6F66               	movwf	(_pid+102)& (0+255),b
  1162  0009CE  0EC2               	movlw	194
  1163  0009D0  0101               	movlb	1	; () banked
  1164  0009D2  6F67               	movwf	(_pid+103)& (0+255),b
  1165                           
  1166                           ; BSR set to: 1
  1167  0009D4  0E00               	movlw	0
  1168  0009D6  0101               	movlb	1	; () banked
  1169  0009D8  6F62               	movwf	(_pid+98)& (0+255),b
  1170  0009DA  0EFE               	movlw	254
  1171  0009DC  0101               	movlb	1	; () banked
  1172  0009DE  6F63               	movwf	(_pid+99)& (0+255),b
  1173  0009E0  0E42               	movlw	66
  1174  0009E2  0101               	movlb	1	; () banked
  1175  0009E4  6F64               	movwf	(_pid+100)& (0+255),b
  1176                           
  1177                           ; BSR set to: 1
  1178                           ;main.c: 44: pid[2].Kp = 1.0; pid[2].Ki = 0.0; pid[2].Kd = 0.0; pid[2].step = 1.0;
  1179  0009E6  0E00               	movlw	0
  1180  0009E8  0101               	movlb	1	; () banked
  1181  0009EA  6F4A               	movwf	(_pid+74)& (0+255),b
  1182  0009EC  0E80               	movlw	128
  1183  0009EE  0101               	movlb	1	; () banked
  1184  0009F0  6F4B               	movwf	(_pid+75)& (0+255),b
  1185  0009F2  0E3F               	movlw	63
  1186  0009F4  0101               	movlb	1	; () banked
  1187  0009F6  6F4C               	movwf	(_pid+76)& (0+255),b
  1188                           
  1189                           ; BSR set to: 1
  1190  0009F8  0E00               	movlw	0
  1191  0009FA  0101               	movlb	1	; () banked
  1192  0009FC  6F4D               	movwf	(_pid+77)& (0+255),b
  1193  0009FE  0E00               	movlw	0
  1194  000A00  0101               	movlb	1	; () banked
  1195  000A02  6F4E               	movwf	(_pid+78)& (0+255),b
  1196  000A04  0E00               	movlw	0
  1197  000A06  0101               	movlb	1	; () banked
  1198  000A08  6F4F               	movwf	(_pid+79)& (0+255),b
  1199                           
  1200                           ; BSR set to: 1
  1201  000A0A  0E00               	movlw	0
  1202  000A0C  0101               	movlb	1	; () banked
  1203  000A0E  6F50               	movwf	(_pid+80)& (0+255),b
  1204  000A10  0E00               	movlw	0
  1205  000A12  0101               	movlb	1	; () banked
  1206  000A14  6F51               	movwf	(_pid+81)& (0+255),b
  1207  000A16  0E00               	movlw	0
  1208  000A18  0101               	movlb	1	; () banked
  1209  000A1A  6F52               	movwf	(_pid+82)& (0+255),b
  1210                           
  1211                           ; BSR set to: 1
  1212  000A1C  0E00               	movlw	0
  1213  000A1E  0101               	movlb	1	; () banked
  1214  000A20  6F5F               	movwf	(_pid+95)& (0+255),b
  1215  000A22  0E80               	movlw	128
  1216  000A24  0101               	movlb	1	; () banked
  1217  000A26  6F60               	movwf	(_pid+96)& (0+255),b
  1218  000A28  0E3F               	movlw	63
  1219  000A2A  0101               	movlb	1	; () banked
  1220  000A2C  6F61               	movwf	(_pid+97)& (0+255),b
  1221                           
  1222                           ; BSR set to: 1
  1223                           ;main.c: 46: pid[3].lowerLimit = -127; pid[3].upperLimit = 127;
  1224  000A2E  0E00               	movlw	0
  1225  000A30  0101               	movlb	1	; () banked
  1226  000A32  6F8A               	movwf	(_pid+138)& (0+255),b
  1227  000A34  0EFE               	movlw	254
  1228  000A36  0101               	movlb	1	; () banked
  1229  000A38  6F8B               	movwf	(_pid+139)& (0+255),b
  1230  000A3A  0EC2               	movlw	194
  1231  000A3C  0101               	movlb	1	; () banked
  1232  000A3E  6F8C               	movwf	(_pid+140)& (0+255),b
  1233                           
  1234                           ; BSR set to: 1
  1235  000A40  0E00               	movlw	0
  1236  000A42  0101               	movlb	1	; () banked
  1237  000A44  6F87               	movwf	(_pid+135)& (0+255),b
  1238  000A46  0EFE               	movlw	254
  1239  000A48  0101               	movlb	1	; () banked
  1240  000A4A  6F88               	movwf	(_pid+136)& (0+255),b
  1241  000A4C  0E42               	movlw	66
  1242  000A4E  0101               	movlb	1	; () banked
  1243  000A50  6F89               	movwf	(_pid+137)& (0+255),b
  1244                           
  1245                           ; BSR set to: 1
  1246                           ;main.c: 47: pid[3].Kp = 1.0; pid[3].Ki = 0.0; pid[3].Kd = 0.0; pid[3].step = 1.0;
  1247  000A52  0E00               	movlw	0
  1248  000A54  0101               	movlb	1	; () banked
  1249  000A56  6F6F               	movwf	(_pid+111)& (0+255),b
  1250  000A58  0E80               	movlw	128
  1251  000A5A  0101               	movlb	1	; () banked
  1252  000A5C  6F70               	movwf	(_pid+112)& (0+255),b
  1253  000A5E  0E3F               	movlw	63
  1254  000A60  0101               	movlb	1	; () banked
  1255  000A62  6F71               	movwf	(_pid+113)& (0+255),b
  1256                           
  1257                           ; BSR set to: 1
  1258  000A64  0E00               	movlw	0
  1259  000A66  0101               	movlb	1	; () banked
  1260  000A68  6F72               	movwf	(_pid+114)& (0+255),b
  1261  000A6A  0E00               	movlw	0
  1262  000A6C  0101               	movlb	1	; () banked
  1263  000A6E  6F73               	movwf	(_pid+115)& (0+255),b
  1264  000A70  0E00               	movlw	0
  1265  000A72  0101               	movlb	1	; () banked
  1266  000A74  6F74               	movwf	(_pid+116)& (0+255),b
  1267                           
  1268                           ; BSR set to: 1
  1269  000A76  0E00               	movlw	0
  1270  000A78  0101               	movlb	1	; () banked
  1271  000A7A  6F75               	movwf	(_pid+117)& (0+255),b
  1272  000A7C  0E00               	movlw	0
  1273  000A7E  0101               	movlb	1	; () banked
  1274  000A80  6F76               	movwf	(_pid+118)& (0+255),b
  1275  000A82  0E00               	movlw	0
  1276  000A84  0101               	movlb	1	; () banked
  1277  000A86  6F77               	movwf	(_pid+119)& (0+255),b
  1278                           
  1279                           ; BSR set to: 1
  1280  000A88  0E00               	movlw	0
  1281  000A8A  0101               	movlb	1	; () banked
  1282  000A8C  6F84               	movwf	(_pid+132)& (0+255),b
  1283  000A8E  0E80               	movlw	128
  1284  000A90  0101               	movlb	1	; () banked
  1285  000A92  6F85               	movwf	(_pid+133)& (0+255),b
  1286  000A94  0E3F               	movlw	63
  1287  000A96  0101               	movlb	1	; () banked
  1288  000A98  6F86               	movwf	(_pid+134)& (0+255),b
  1289                           
  1290                           ; BSR set to: 1
  1291                           ;main.c: 49: unsigned char j=1;
  1292  000A9A  0E01               	movlw	1
  1293  000A9C  0102               	movlb	2	; () banked
  1294  000A9E  6F32               	movwf	main@j& (0+255),b
  1295                           
  1296                           ; BSR set to: 2
  1297                           ;main.c: 50: for(unsigned char i = 1; i < 165; ++i) {
  1298  000AA0  0E01               	movlw	1
  1299  000AA2  0102               	movlb	2	; () banked
  1300  000AA4  6F54               	movwf	main@i& (0+255),b
  1301  000AA6                     l4185:
  1302                           
  1303                           ; BSR set to: 2
  1304  000AA6  0EA4               	movlw	164
  1305  000AA8  0102               	movlb	2	; () banked
  1306  000AAA  6554               	cpfsgt	main@i& (0+255),b
  1307  000AAC  D001               	goto	l4189
  1308  000AAE  D01C               	goto	l4207
  1309  000AB0                     l4189:
  1310                           
  1311                           ; BSR set to: 2
  1312                           ;main.c: 51: if(i < 35)
  1313  000AB0  0E23               	movlw	35
  1314  000AB2  0102               	movlb	2	; () banked
  1315  000AB4  6154               	cpfslt	main@i& (0+255),b
  1316  000AB6  D002               	goto	l4193
  1317                           
  1318                           ; BSR set to: 2
  1319                           ;main.c: 52: j++;
  1320  000AB8  0102               	movlb	2	; () banked
  1321  000ABA  2B32               	incf	main@j& (0+255),f,b
  1322  000ABC                     l4193:
  1323                           
  1324                           ; BSR set to: 2
  1325                           ;main.c: 53: _pwm[0] = i;
  1326  000ABC  C254  F03B         	movff	main@i,__pwm
  1327                           
  1328                           ; BSR set to: 2
  1329                           ;main.c: 54: _pwm[1] = i;
  1330  000AC0  C254  F03C         	movff	main@i,__pwm+1
  1331                           
  1332                           ; BSR set to: 2
  1333                           ;main.c: 55: _pwm[3] = i + 8;
  1334  000AC4  0102               	movlb	2	; () banked
  1335  000AC6  5154               	movf	main@i& (0+255),w,b
  1336  000AC8  0F08               	addlw	8
  1337  000ACA  6E3E               	movwf	__pwm+3,c
  1338                           
  1339                           ; BSR set to: 2
  1340                           ;main.c: 56: _pwm[2] = i + j;
  1341  000ACC  0102               	movlb	2	; () banked
  1342  000ACE  5154               	movf	main@i& (0+255),w,b
  1343  000AD0  0102               	movlb	2	; () banked
  1344  000AD2  2532               	addwf	main@j& (0+255),w,b
  1345  000AD4  6E3D               	movwf	__pwm+2,c
  1346                           
  1347                           ; BSR set to: 2
  1348                           ;main.c: 57: delayMS(90);
  1349  000AD6  0E00               	movlw	0
  1350  000AD8  6E14               	movwf	delayMS@waitTime+1,c
  1351  000ADA  0E5A               	movlw	90
  1352  000ADC  6E13               	movwf	delayMS@waitTime,c
  1353  000ADE  EC5B  F012         	call	_delayMS	;wreg free
  1354  000AE2  0102               	movlb	2	; () banked
  1355  000AE4  2B54               	incf	main@i& (0+255),f,b
  1356  000AE6  D7DF               	goto	l4185
  1357  000AE8                     l4207:
  1358                           
  1359                           ;main.c: 61: float l = 2, lambda = 1;
  1360  000AE8  0E00               	movlw	0
  1361  000AEA  0102               	movlb	2	; () banked
  1362  000AEC  6F45               	movwf	main@l& (0+255),b
  1363  000AEE  0E00               	movlw	0
  1364  000AF0  0102               	movlb	2	; () banked
  1365  000AF2  6F46               	movwf	(main@l+1)& (0+255),b
  1366  000AF4  0E40               	movlw	64
  1367  000AF6  0102               	movlb	2	; () banked
  1368  000AF8  6F47               	movwf	(main@l+2)& (0+255),b
  1369  000AFA  0E00               	movlw	0
  1370  000AFC  0102               	movlb	2	; () banked
  1371  000AFE  6F48               	movwf	main@lambda& (0+255),b
  1372  000B00  0E80               	movlw	128
  1373  000B02  0102               	movlb	2	; () banked
  1374  000B04  6F49               	movwf	(main@lambda+1)& (0+255),b
  1375  000B06  0E3F               	movlw	63
  1376  000B08  0102               	movlb	2	; () banked
  1377  000B0A  6F4A               	movwf	(main@lambda+2)& (0+255),b
  1378                           
  1379                           ; BSR set to: 2
  1380                           ;main.c: 62: z += filtro*((readACC(0x36) + readACC(0x37)<<8)/256 - z);
  1381  000B0C  C0E1  F032         	movff	_filtro,___ftmul@f2
  1382  000B10  C0E2  F033         	movff	_filtro+1,___ftmul@f2+1
  1383  000B14  C0E3  F034         	movff	_filtro+2,___ftmul@f2+2
  1384  000B18  C23C  F01B         	movff	main@z,___ftneg@f1
  1385  000B1C  C23D  F01C         	movff	main@z+1,___ftneg@f1+1
  1386  000B20  C23E  F01D         	movff	main@z+2,___ftneg@f1+2
  1387  000B24  EC71  F012         	call	___ftneg	;wreg free
  1388  000B28  C01B  F026         	movff	?___ftneg,___ftadd@f2
  1389  000B2C  C01C  F027         	movff	?___ftneg+1,___ftadd@f2+1
  1390  000B30  C01D  F028         	movff	?___ftneg+2,___ftadd@f2+2
  1391  000B34  0E01               	movlw	1
  1392  000B36  6E1A               	movwf	___awdiv@divisor+1,c
  1393  000B38  0E00               	movlw	0
  1394  000B3A  6E19               	movwf	___awdiv@divisor,c
  1395  000B3C  0E36               	movlw	54
  1396  000B3E  EC04  F012         	call	_readACC
  1397  000B42  0100               	movlb	0	; () banked
  1398  000B44  6FDB               	movwf	??_main& (0+255),b
  1399  000B46  6BDC               	clrf	(??_main+1)& (0+255),b
  1400  000B48  0E37               	movlw	55
  1401  000B4A  EC04  F012         	call	_readACC
  1402  000B4E  0100               	movlb	0	; () banked
  1403  000B50  6FDD               	movwf	(??_main+2)& (0+255),b
  1404  000B52  0100               	movlb	0	; () banked
  1405  000B54  51DD               	movf	(??_main+2)& (0+255),w,b
  1406  000B56  0100               	movlb	0	; () banked
  1407  000B58  27DB               	addwf	??_main& (0+255),f,b
  1408  000B5A  0E00               	movlw	0
  1409  000B5C  23DC               	addwfc	(??_main+1)& (0+255),f,b
  1410  000B5E  C0DB  F0DC         	movff	??_main,??_main+1
  1411  000B62  0100               	movlb	0	; () banked
  1412  000B64  6BDB               	clrf	??_main& (0+255),b
  1413  000B66  C0DB  F017         	movff	??_main,___awdiv@dividend
  1414  000B6A  C0DC  F018         	movff	??_main+1,___awdiv@dividend+1
  1415  000B6E  ECAB  F010         	call	___awdiv	;wreg free
  1416  000B72  C017  F01F         	movff	?___awdiv,___awtoft@c
  1417  000B76  C018  F020         	movff	?___awdiv+1,___awtoft@c+1
  1418  000B7A  EC26  F012         	call	___awtoft	;wreg free
  1419  000B7E  C01F  F023         	movff	?___awtoft,___ftadd@f1
  1420  000B82  C020  F024         	movff	?___awtoft+1,___ftadd@f1+1
  1421  000B86  C021  F025         	movff	?___awtoft+2,___ftadd@f1+2
  1422  000B8A  EC35  F00D         	call	___ftadd	;wreg free
  1423  000B8E  C023  F02F         	movff	?___ftadd,___ftmul@f1
  1424  000B92  C024  F030         	movff	?___ftadd+1,___ftmul@f1+1
  1425  000B96  C025  F031         	movff	?___ftadd+2,___ftmul@f1+2
  1426  000B9A  ECAB  F00E         	call	___ftmul	;wreg free
  1427  000B9E  C02F  F255         	movff	?___ftmul,_main$1972
  1428  000BA2  C030  F256         	movff	?___ftmul+1,_main$1972+1
  1429  000BA6  C031  F257         	movff	?___ftmul+2,_main$1972+2
  1430                           
  1431                           ;main.c: 62: z += filtro*((readACC(0x36) + readACC(0x37)<<8)/256 - z);
  1432  000BAA  C23C  F023         	movff	main@z,___ftadd@f1
  1433  000BAE  C23D  F024         	movff	main@z+1,___ftadd@f1+1
  1434  000BB2  C23E  F025         	movff	main@z+2,___ftadd@f1+2
  1435  000BB6  C255  F026         	movff	_main$1972,___ftadd@f2
  1436  000BBA  C256  F027         	movff	_main$1972+1,___ftadd@f2+1
  1437  000BBE  C257  F028         	movff	_main$1972+2,___ftadd@f2+2
  1438  000BC2  EC35  F00D         	call	___ftadd	;wreg free
  1439  000BC6  C023  F23C         	movff	?___ftadd,main@z
  1440  000BCA  C024  F23D         	movff	?___ftadd+1,main@z+1
  1441  000BCE  C025  F23E         	movff	?___ftadd+2,main@z+2
  1442                           
  1443                           ;main.c: 63: PID_outputControlCalc(0,(z + 11.6),0);
  1444  000BD2  C23C  F023         	movff	main@z,___ftadd@f1
  1445  000BD6  C23D  F024         	movff	main@z+1,___ftadd@f1+1
  1446  000BDA  C23E  F025         	movff	main@z+2,___ftadd@f1+2
  1447  000BDE  0E9A               	movlw	154
  1448  000BE0  6E26               	movwf	___ftadd@f2,c
  1449  000BE2  0E39               	movlw	57
  1450  000BE4  6E27               	movwf	___ftadd@f2+1,c
  1451  000BE6  0E41               	movlw	65
  1452  000BE8  6E28               	movwf	___ftadd@f2+2,c
  1453  000BEA  EC35  F00D         	call	___ftadd	;wreg free
  1454  000BEE  C023  F251         	movff	?___ftadd,_main$1973
  1455  000BF2  C024  F252         	movff	?___ftadd+1,_main$1973+1
  1456  000BF6  C025  F253         	movff	?___ftadd+2,_main$1973+2
  1457                           
  1458                           ;main.c: 63: PID_outputControlCalc(0,(z + 11.6),0);
  1459  000BFA  0E00               	movlw	0
  1460  000BFC  0100               	movlb	0	; () banked
  1461  000BFE  6FCF               	movwf	PID_outputControlCalc@reference& (0+255),b
  1462  000C00  0E00               	movlw	0
  1463  000C02  0100               	movlb	0	; () banked
  1464  000C04  6FD0               	movwf	(PID_outputControlCalc@reference+1)& (0+255),b
  1465  000C06  0E00               	movlw	0
  1466  000C08  0100               	movlb	0	; () banked
  1467  000C0A  6FD1               	movwf	(PID_outputControlCalc@reference+2)& (0+255),b
  1468  000C0C  C251  F0D2         	movff	_main$1973,PID_outputControlCalc@systemOutput
  1469  000C10  C252  F0D3         	movff	_main$1973+1,PID_outputControlCalc@systemOutput+1
  1470  000C14  C253  F0D4         	movff	_main$1973+2,PID_outputControlCalc@systemOutput+2
  1471  000C18  0E00               	movlw	0
  1472  000C1A  0100               	movlb	0	; () banked
  1473  000C1C  6FD5               	movwf	PID_outputControlCalc@whichPID& (0+255),b
  1474  000C1E  EC92  F00A         	call	_PID_outputControlCalc	;wreg free
  1475                           
  1476                           ;main.c: 64: float u1 = pid[0].controlSignal + 740;
  1477  000C22  C11E  F023         	movff	_pid+30,___ftadd@f1
  1478  000C26  C11F  F024         	movff	_pid+31,___ftadd@f1+1
  1479  000C2A  C120  F025         	movff	_pid+32,___ftadd@f1+2
  1480  000C2E  0E00               	movlw	0
  1481  000C30  6E26               	movwf	___ftadd@f2,c
  1482  000C32  0E39               	movlw	57
  1483  000C34  6E27               	movwf	___ftadd@f2+1,c
  1484  000C36  0E44               	movlw	68
  1485  000C38  6E28               	movwf	___ftadd@f2+2,c
  1486  000C3A  EC35  F00D         	call	___ftadd	;wreg free
  1487  000C3E  C023  F24B         	movff	?___ftadd,main@u1
  1488  000C42  C024  F24C         	movff	?___ftadd+1,main@u1+1
  1489  000C46  C025  F24D         	movff	?___ftadd+2,main@u1+2
  1490                           
  1491                           ;main.c: 65: phi += filtro*((readGIRO(0x28) + readGIRO(0x29)<<8)/256 - phi);
  1492  000C4A  C0E1  F032         	movff	_filtro,___ftmul@f2
  1493  000C4E  C0E2  F033         	movff	_filtro+1,___ftmul@f2+1
  1494  000C52  C0E3  F034         	movff	_filtro+2,___ftmul@f2+2
  1495  000C56  C23F  F01B         	movff	main@phi,___ftneg@f1
  1496  000C5A  C240  F01C         	movff	main@phi+1,___ftneg@f1+1
  1497  000C5E  C241  F01D         	movff	main@phi+2,___ftneg@f1+2
  1498  000C62  EC71  F012         	call	___ftneg	;wreg free
  1499  000C66  C01B  F026         	movff	?___ftneg,___ftadd@f2
  1500  000C6A  C01C  F027         	movff	?___ftneg+1,___ftadd@f2+1
  1501  000C6E  C01D  F028         	movff	?___ftneg+2,___ftadd@f2+2
  1502  000C72  0E01               	movlw	1
  1503  000C74  6E1A               	movwf	___awdiv@divisor+1,c
  1504  000C76  0E00               	movlw	0
  1505  000C78  6E19               	movwf	___awdiv@divisor,c
  1506  000C7A  0E28               	movlw	40
  1507  000C7C  ECE2  F011         	call	_readGIRO
  1508  000C80  0100               	movlb	0	; () banked
  1509  000C82  6FDB               	movwf	??_main& (0+255),b
  1510  000C84  6BDC               	clrf	(??_main+1)& (0+255),b
  1511  000C86  0E29               	movlw	41
  1512  000C88  ECE2  F011         	call	_readGIRO
  1513  000C8C  0100               	movlb	0	; () banked
  1514  000C8E  6FDD               	movwf	(??_main+2)& (0+255),b
  1515  000C90  0100               	movlb	0	; () banked
  1516  000C92  51DD               	movf	(??_main+2)& (0+255),w,b
  1517  000C94  0100               	movlb	0	; () banked
  1518  000C96  27DB               	addwf	??_main& (0+255),f,b
  1519  000C98  0E00               	movlw	0
  1520  000C9A  23DC               	addwfc	(??_main+1)& (0+255),f,b
  1521  000C9C  C0DB  F0DC         	movff	??_main,??_main+1
  1522  000CA0  0100               	movlb	0	; () banked
  1523  000CA2  6BDB               	clrf	??_main& (0+255),b
  1524  000CA4  C0DB  F017         	movff	??_main,___awdiv@dividend
  1525  000CA8  C0DC  F018         	movff	??_main+1,___awdiv@dividend+1
  1526  000CAC  ECAB  F010         	call	___awdiv	;wreg free
  1527  000CB0  C017  F01F         	movff	?___awdiv,___awtoft@c
  1528  000CB4  C018  F020         	movff	?___awdiv+1,___awtoft@c+1
  1529  000CB8  EC26  F012         	call	___awtoft	;wreg free
  1530  000CBC  C01F  F023         	movff	?___awtoft,___ftadd@f1
  1531  000CC0  C020  F024         	movff	?___awtoft+1,___ftadd@f1+1
  1532  000CC4  C021  F025         	movff	?___awtoft+2,___ftadd@f1+2
  1533  000CC8  EC35  F00D         	call	___ftadd	;wreg free
  1534  000CCC  C023  F02F         	movff	?___ftadd,___ftmul@f1
  1535  000CD0  C024  F030         	movff	?___ftadd+1,___ftmul@f1+1
  1536  000CD4  C025  F031         	movff	?___ftadd+2,___ftmul@f1+2
  1537  000CD8  ECAB  F00E         	call	___ftmul	;wreg free
  1538  000CDC  C02F  F255         	movff	?___ftmul,_main$1972
  1539  000CE0  C030  F256         	movff	?___ftmul+1,_main$1972+1
  1540  000CE4  C031  F257         	movff	?___ftmul+2,_main$1972+2
  1541                           
  1542                           ;main.c: 65: phi += filtro*((readGIRO(0x28) + readGIRO(0x29)<<8)/256 - phi);
  1543  000CE8  C23F  F023         	movff	main@phi,___ftadd@f1
  1544  000CEC  C240  F024         	movff	main@phi+1,___ftadd@f1+1
  1545  000CF0  C241  F025         	movff	main@phi+2,___ftadd@f1+2
  1546  000CF4  C255  F026         	movff	_main$1972,___ftadd@f2
  1547  000CF8  C256  F027         	movff	_main$1972+1,___ftadd@f2+1
  1548  000CFC  C257  F028         	movff	_main$1972+2,___ftadd@f2+2
  1549  000D00  EC35  F00D         	call	___ftadd	;wreg free
  1550  000D04  C023  F23F         	movff	?___ftadd,main@phi
  1551  000D08  C024  F240         	movff	?___ftadd+1,main@phi+1
  1552  000D0C  C025  F241         	movff	?___ftadd+2,main@phi+2
  1553                           
  1554                           ;main.c: 66: PID_outputControlCalc(0.0,(phi + 3.0),1);
  1555  000D10  C23F  F023         	movff	main@phi,___ftadd@f1
  1556  000D14  C240  F024         	movff	main@phi+1,___ftadd@f1+1
  1557  000D18  C241  F025         	movff	main@phi+2,___ftadd@f1+2
  1558  000D1C  0E00               	movlw	0
  1559  000D1E  6E26               	movwf	___ftadd@f2,c
  1560  000D20  0E40               	movlw	64
  1561  000D22  6E27               	movwf	___ftadd@f2+1,c
  1562  000D24  0E40               	movlw	64
  1563  000D26  6E28               	movwf	___ftadd@f2+2,c
  1564  000D28  EC35  F00D         	call	___ftadd	;wreg free
  1565  000D2C  C023  F251         	movff	?___ftadd,_main$1973
  1566  000D30  C024  F252         	movff	?___ftadd+1,_main$1973+1
  1567  000D34  C025  F253         	movff	?___ftadd+2,_main$1973+2
  1568                           
  1569                           ;main.c: 66: PID_outputControlCalc(0.0,(phi + 3.0),1);
  1570  000D38  0E00               	movlw	0
  1571  000D3A  0100               	movlb	0	; () banked
  1572  000D3C  6FCF               	movwf	PID_outputControlCalc@reference& (0+255),b
  1573  000D3E  0E00               	movlw	0
  1574  000D40  0100               	movlb	0	; () banked
  1575  000D42  6FD0               	movwf	(PID_outputControlCalc@reference+1)& (0+255),b
  1576  000D44  0E00               	movlw	0
  1577  000D46  0100               	movlb	0	; () banked
  1578  000D48  6FD1               	movwf	(PID_outputControlCalc@reference+2)& (0+255),b
  1579  000D4A  C251  F0D2         	movff	_main$1973,PID_outputControlCalc@systemOutput
  1580  000D4E  C252  F0D3         	movff	_main$1973+1,PID_outputControlCalc@systemOutput+1
  1581  000D52  C253  F0D4         	movff	_main$1973+2,PID_outputControlCalc@systemOutput+2
  1582  000D56  0E01               	movlw	1
  1583  000D58  0100               	movlb	0	; () banked
  1584  000D5A  6FD5               	movwf	PID_outputControlCalc@whichPID& (0+255),b
  1585  000D5C  EC92  F00A         	call	_PID_outputControlCalc	;wreg free
  1586                           
  1587                           ;main.c: 67: float u2 = pid[1].controlSignal;
  1588  000D60  C143  F233         	movff	_pid+67,main@u2
  1589  000D64  C144  F234         	movff	_pid+68,main@u2+1
  1590  000D68  C145  F235         	movff	_pid+69,main@u2+2
  1591                           
  1592                           ;main.c: 68: psi += filtro*((readGIRO(0x2A) + readGIRO(0x2B))/256 - psi);
  1593  000D6C  C0E1  F032         	movff	_filtro,___ftmul@f2
  1594  000D70  C0E2  F033         	movff	_filtro+1,___ftmul@f2+1
  1595  000D74  C0E3  F034         	movff	_filtro+2,___ftmul@f2+2
  1596  000D78  C242  F01B         	movff	main@psi,___ftneg@f1
  1597  000D7C  C243  F01C         	movff	main@psi+1,___ftneg@f1+1
  1598  000D80  C244  F01D         	movff	main@psi+2,___ftneg@f1+2
  1599  000D84  EC71  F012         	call	___ftneg	;wreg free
  1600  000D88  C01B  F026         	movff	?___ftneg,___ftadd@f2
  1601  000D8C  C01C  F027         	movff	?___ftneg+1,___ftadd@f2+1
  1602  000D90  C01D  F028         	movff	?___ftneg+2,___ftadd@f2+2
  1603  000D94  0E01               	movlw	1
  1604  000D96  6E1A               	movwf	___awdiv@divisor+1,c
  1605  000D98  0E00               	movlw	0
  1606  000D9A  6E19               	movwf	___awdiv@divisor,c
  1607  000D9C  0E2B               	movlw	43
  1608  000D9E  ECE2  F011         	call	_readGIRO
  1609  000DA2  0100               	movlb	0	; () banked
  1610  000DA4  6FDB               	movwf	??_main& (0+255),b
  1611  000DA6  0E2A               	movlw	42
  1612  000DA8  ECE2  F011         	call	_readGIRO
  1613  000DAC  0100               	movlb	0	; () banked
  1614  000DAE  6FDC               	movwf	(??_main+1)& (0+255),b
  1615  000DB0  0100               	movlb	0	; () banked
  1616  000DB2  51DC               	movf	(??_main+1)& (0+255),w,b
  1617  000DB4  0100               	movlb	0	; () banked
  1618  000DB6  25DB               	addwf	??_main& (0+255),w,b
  1619  000DB8  6E17               	movwf	___awdiv@dividend,c
  1620  000DBA  6A18               	clrf	___awdiv@dividend+1,c
  1621  000DBC  3618               	rlcf	___awdiv@dividend+1,f,c
  1622  000DBE  ECAB  F010         	call	___awdiv	;wreg free
  1623  000DC2  C017  F01F         	movff	?___awdiv,___awtoft@c
  1624  000DC6  C018  F020         	movff	?___awdiv+1,___awtoft@c+1
  1625  000DCA  EC26  F012         	call	___awtoft	;wreg free
  1626  000DCE  C01F  F023         	movff	?___awtoft,___ftadd@f1
  1627  000DD2  C020  F024         	movff	?___awtoft+1,___ftadd@f1+1
  1628  000DD6  C021  F025         	movff	?___awtoft+2,___ftadd@f1+2
  1629  000DDA  EC35  F00D         	call	___ftadd	;wreg free
  1630  000DDE  C023  F02F         	movff	?___ftadd,___ftmul@f1
  1631  000DE2  C024  F030         	movff	?___ftadd+1,___ftmul@f1+1
  1632  000DE6  C025  F031         	movff	?___ftadd+2,___ftmul@f1+2
  1633  000DEA  ECAB  F00E         	call	___ftmul	;wreg free
  1634  000DEE  C02F  F255         	movff	?___ftmul,_main$1972
  1635  000DF2  C030  F256         	movff	?___ftmul+1,_main$1972+1
  1636  000DF6  C031  F257         	movff	?___ftmul+2,_main$1972+2
  1637                           
  1638                           ;main.c: 68: psi += filtro*((readGIRO(0x2A) + readGIRO(0x2B))/256 - psi);
  1639  000DFA  C242  F023         	movff	main@psi,___ftadd@f1
  1640  000DFE  C243  F024         	movff	main@psi+1,___ftadd@f1+1
  1641  000E02  C244  F025         	movff	main@psi+2,___ftadd@f1+2
  1642  000E06  C255  F026         	movff	_main$1972,___ftadd@f2
  1643  000E0A  C256  F027         	movff	_main$1972+1,___ftadd@f2+1
  1644  000E0E  C257  F028         	movff	_main$1972+2,___ftadd@f2+2
  1645  000E12  EC35  F00D         	call	___ftadd	;wreg free
  1646  000E16  C023  F242         	movff	?___ftadd,main@psi
  1647  000E1A  C024  F243         	movff	?___ftadd+1,main@psi+1
  1648  000E1E  C025  F244         	movff	?___ftadd+2,main@psi+2
  1649                           
  1650                           ;main.c: 69: PID_outputControlCalc(0.0,(psi + 2.0),2);
  1651  000E22  C242  F023         	movff	main@psi,___ftadd@f1
  1652  000E26  C243  F024         	movff	main@psi+1,___ftadd@f1+1
  1653  000E2A  C244  F025         	movff	main@psi+2,___ftadd@f1+2
  1654  000E2E  0E00               	movlw	0
  1655  000E30  6E26               	movwf	___ftadd@f2,c
  1656  000E32  0E00               	movlw	0
  1657  000E34  6E27               	movwf	___ftadd@f2+1,c
  1658  000E36  0E40               	movlw	64
  1659  000E38  6E28               	movwf	___ftadd@f2+2,c
  1660  000E3A  EC35  F00D         	call	___ftadd	;wreg free
  1661  000E3E  C023  F251         	movff	?___ftadd,_main$1973
  1662  000E42  C024  F252         	movff	?___ftadd+1,_main$1973+1
  1663  000E46  C025  F253         	movff	?___ftadd+2,_main$1973+2
  1664                           
  1665                           ;main.c: 69: PID_outputControlCalc(0.0,(psi + 2.0),2);
  1666  000E4A  0E00               	movlw	0
  1667  000E4C  0100               	movlb	0	; () banked
  1668  000E4E  6FCF               	movwf	PID_outputControlCalc@reference& (0+255),b
  1669  000E50  0E00               	movlw	0
  1670  000E52  0100               	movlb	0	; () banked
  1671  000E54  6FD0               	movwf	(PID_outputControlCalc@reference+1)& (0+255),b
  1672  000E56  0E00               	movlw	0
  1673  000E58  0100               	movlb	0	; () banked
  1674  000E5A  6FD1               	movwf	(PID_outputControlCalc@reference+2)& (0+255),b
  1675  000E5C  C251  F0D2         	movff	_main$1973,PID_outputControlCalc@systemOutput
  1676  000E60  C252  F0D3         	movff	_main$1973+1,PID_outputControlCalc@systemOutput+1
  1677  000E64  C253  F0D4         	movff	_main$1973+2,PID_outputControlCalc@systemOutput+2
  1678  000E68  0E02               	movlw	2
  1679  000E6A  0100               	movlb	0	; () banked
  1680  000E6C  6FD5               	movwf	PID_outputControlCalc@whichPID& (0+255),b
  1681  000E6E  EC92  F00A         	call	_PID_outputControlCalc	;wreg free
  1682                           
  1683                           ;main.c: 70: float u3 = pid[2].controlSignal;
  1684  000E72  C168  F236         	movff	_pid+104,main@u3
  1685  000E76  C169  F237         	movff	_pid+105,main@u3+1
  1686  000E7A  C16A  F238         	movff	_pid+106,main@u3+2
  1687                           
  1688                           ;main.c: 71: theta = filtro*((readGIRO(0x2C) + readGIRO(0x2D))/256-theta);
  1689  000E7E  C239  F01B         	movff	main@theta,___ftneg@f1
  1690  000E82  C23A  F01C         	movff	main@theta+1,___ftneg@f1+1
  1691  000E86  C23B  F01D         	movff	main@theta+2,___ftneg@f1+2
  1692  000E8A  EC71  F012         	call	___ftneg	;wreg free
  1693  000E8E  C01B  F026         	movff	?___ftneg,___ftadd@f2
  1694  000E92  C01C  F027         	movff	?___ftneg+1,___ftadd@f2+1
  1695  000E96  C01D  F028         	movff	?___ftneg+2,___ftadd@f2+2
  1696  000E9A  0E01               	movlw	1
  1697  000E9C  6E1A               	movwf	___awdiv@divisor+1,c
  1698  000E9E  0E00               	movlw	0
  1699  000EA0  6E19               	movwf	___awdiv@divisor,c
  1700  000EA2  0E2D               	movlw	45
  1701  000EA4  ECE2  F011         	call	_readGIRO
  1702  000EA8  0100               	movlb	0	; () banked
  1703  000EAA  6FDB               	movwf	??_main& (0+255),b
  1704  000EAC  0E2C               	movlw	44
  1705  000EAE  ECE2  F011         	call	_readGIRO
  1706  000EB2  0100               	movlb	0	; () banked
  1707  000EB4  6FDC               	movwf	(??_main+1)& (0+255),b
  1708  000EB6  0100               	movlb	0	; () banked
  1709  000EB8  51DC               	movf	(??_main+1)& (0+255),w,b
  1710  000EBA  0100               	movlb	0	; () banked
  1711  000EBC  25DB               	addwf	??_main& (0+255),w,b
  1712  000EBE  6E17               	movwf	___awdiv@dividend,c
  1713  000EC0  6A18               	clrf	___awdiv@dividend+1,c
  1714  000EC2  3618               	rlcf	___awdiv@dividend+1,f,c
  1715  000EC4  ECAB  F010         	call	___awdiv	;wreg free
  1716  000EC8  C017  F01F         	movff	?___awdiv,___awtoft@c
  1717  000ECC  C018  F020         	movff	?___awdiv+1,___awtoft@c+1
  1718  000ED0  EC26  F012         	call	___awtoft	;wreg free
  1719  000ED4  C01F  F023         	movff	?___awtoft,___ftadd@f1
  1720  000ED8  C020  F024         	movff	?___awtoft+1,___ftadd@f1+1
  1721  000EDC  C021  F025         	movff	?___awtoft+2,___ftadd@f1+2
  1722  000EE0  EC35  F00D         	call	___ftadd	;wreg free
  1723  000EE4  C023  F02F         	movff	?___ftadd,___ftmul@f1
  1724  000EE8  C024  F030         	movff	?___ftadd+1,___ftmul@f1+1
  1725  000EEC  C025  F031         	movff	?___ftadd+2,___ftmul@f1+2
  1726  000EF0  C0E1  F032         	movff	_filtro,___ftmul@f2
  1727  000EF4  C0E2  F033         	movff	_filtro+1,___ftmul@f2+1
  1728  000EF8  C0E3  F034         	movff	_filtro+2,___ftmul@f2+2
  1729  000EFC  ECAB  F00E         	call	___ftmul	;wreg free
  1730  000F00  C02F  F239         	movff	?___ftmul,main@theta
  1731  000F04  C030  F23A         	movff	?___ftmul+1,main@theta+1
  1732  000F08  C031  F23B         	movff	?___ftmul+2,main@theta+2
  1733                           
  1734                           ;main.c: 72: PID_outputControlCalc(0.0,(theta + 2.0),3);
  1735  000F0C  C239  F023         	movff	main@theta,___ftadd@f1
  1736  000F10  C23A  F024         	movff	main@theta+1,___ftadd@f1+1
  1737  000F14  C23B  F025         	movff	main@theta+2,___ftadd@f1+2
  1738  000F18  0E00               	movlw	0
  1739  000F1A  6E26               	movwf	___ftadd@f2,c
  1740  000F1C  0E00               	movlw	0
  1741  000F1E  6E27               	movwf	___ftadd@f2+1,c
  1742  000F20  0E40               	movlw	64
  1743  000F22  6E28               	movwf	___ftadd@f2+2,c
  1744  000F24  EC35  F00D         	call	___ftadd	;wreg free
  1745  000F28  C023  F251         	movff	?___ftadd,_main$1973
  1746  000F2C  C024  F252         	movff	?___ftadd+1,_main$1973+1
  1747  000F30  C025  F253         	movff	?___ftadd+2,_main$1973+2
  1748                           
  1749                           ;main.c: 72: PID_outputControlCalc(0.0,(theta + 2.0),3);
  1750  000F34  0E00               	movlw	0
  1751  000F36  0100               	movlb	0	; () banked
  1752  000F38  6FCF               	movwf	PID_outputControlCalc@reference& (0+255),b
  1753  000F3A  0E00               	movlw	0
  1754  000F3C  0100               	movlb	0	; () banked
  1755  000F3E  6FD0               	movwf	(PID_outputControlCalc@reference+1)& (0+255),b
  1756  000F40  0E00               	movlw	0
  1757  000F42  0100               	movlb	0	; () banked
  1758  000F44  6FD1               	movwf	(PID_outputControlCalc@reference+2)& (0+255),b
  1759  000F46  C251  F0D2         	movff	_main$1973,PID_outputControlCalc@systemOutput
  1760  000F4A  C252  F0D3         	movff	_main$1973+1,PID_outputControlCalc@systemOutput+1
  1761  000F4E  C253  F0D4         	movff	_main$1973+2,PID_outputControlCalc@systemOutput+2
  1762  000F52  0E03               	movlw	3
  1763  000F54  0100               	movlb	0	; () banked
  1764  000F56  6FD5               	movwf	PID_outputControlCalc@whichPID& (0+255),b
  1765  000F58  EC92  F00A         	call	_PID_outputControlCalc	;wreg free
  1766                           
  1767                           ;main.c: 73: float u4 = pid[3].controlSignal;
  1768  000F5C  C18D  F24E         	movff	_pid+141,main@u4
  1769  000F60  C18E  F24F         	movff	_pid+142,main@u4+1
  1770  000F64  C18F  F250         	movff	_pid+143,main@u4+2
  1771                           
  1772                           ;main.c: 84: float pwmTemp = (u1/4 - u3/(2*l) - u4/(4*lambda));
  1773  000F68  0E00               	movlw	0
  1774  000F6A  6E32               	movwf	___ftmul@f2,c
  1775  000F6C  0E80               	movlw	128
  1776  000F6E  6E33               	movwf	___ftmul@f2+1,c
  1777  000F70  0E40               	movlw	64
  1778  000F72  6E34               	movwf	___ftmul@f2+2,c
  1779  000F74  C248  F02F         	movff	main@lambda,___ftmul@f1
  1780  000F78  C249  F030         	movff	main@lambda+1,___ftmul@f1+1
  1781  000F7C  C24A  F031         	movff	main@lambda+2,___ftmul@f1+2
  1782  000F80  ECAB  F00E         	call	___ftmul	;wreg free
  1783  000F84  C02F  F0C6         	movff	?___ftmul,___ftdiv@f2
  1784  000F88  C030  F0C7         	movff	?___ftmul+1,___ftdiv@f2+1
  1785  000F8C  C031  F0C8         	movff	?___ftmul+2,___ftdiv@f2+2
  1786  000F90  C24E  F0C3         	movff	main@u4,___ftdiv@f1
  1787  000F94  C24F  F0C4         	movff	main@u4+1,___ftdiv@f1+1
  1788  000F98  C250  F0C5         	movff	main@u4+2,___ftdiv@f1+2
  1789  000F9C  EC0B  F00E         	call	___ftdiv	;wreg free
  1790  000FA0  C0C3  F01B         	movff	?___ftdiv,___ftneg@f1
  1791  000FA4  C0C4  F01C         	movff	?___ftdiv+1,___ftneg@f1+1
  1792  000FA8  C0C5  F01D         	movff	?___ftdiv+2,___ftneg@f1+2
  1793  000FAC  EC71  F012         	call	___ftneg	;wreg free
  1794  000FB0  C01B  F026         	movff	?___ftneg,___ftadd@f2
  1795  000FB4  C01C  F027         	movff	?___ftneg+1,___ftadd@f2+1
  1796  000FB8  C01D  F028         	movff	?___ftneg+2,___ftadd@f2+2
  1797  000FBC  0E00               	movlw	0
  1798  000FBE  0100               	movlb	0	; () banked
  1799  000FC0  6FC6               	movwf	___ftdiv@f2& (0+255),b
  1800  000FC2  0E80               	movlw	128
  1801  000FC4  0100               	movlb	0	; () banked
  1802  000FC6  6FC7               	movwf	(___ftdiv@f2+1)& (0+255),b
  1803  000FC8  0E40               	movlw	64
  1804  000FCA  0100               	movlb	0	; () banked
  1805  000FCC  6FC8               	movwf	(___ftdiv@f2+2)& (0+255),b
  1806  000FCE  C24B  F0C3         	movff	main@u1,___ftdiv@f1
  1807  000FD2  C24C  F0C4         	movff	main@u1+1,___ftdiv@f1+1
  1808  000FD6  C24D  F0C5         	movff	main@u1+2,___ftdiv@f1+2
  1809  000FDA  EC0B  F00E         	call	___ftdiv	;wreg free
  1810  000FDE  C0C3  F023         	movff	?___ftdiv,___ftadd@f1
  1811  000FE2  C0C4  F024         	movff	?___ftdiv+1,___ftadd@f1+1
  1812  000FE6  C0C5  F025         	movff	?___ftdiv+2,___ftadd@f1+2
  1813  000FEA  EC35  F00D         	call	___ftadd	;wreg free
  1814  000FEE  C023  F255         	movff	?___ftadd,_main$1972
  1815  000FF2  C024  F256         	movff	?___ftadd+1,_main$1972+1
  1816  000FF6  C025  F257         	movff	?___ftadd+2,_main$1972+2
  1817                           
  1818                           ;main.c: 84: float pwmTemp = (u1/4 - u3/(2*l) - u4/(4*lambda));
  1819  000FFA  C255  F023         	movff	_main$1972,___ftadd@f1
  1820  000FFE  C256  F024         	movff	_main$1972+1,___ftadd@f1+1
  1821  001002  C257  F025         	movff	_main$1972+2,___ftadd@f1+2
  1822  001006  0E00               	movlw	0
  1823  001008  6E32               	movwf	___ftmul@f2,c
  1824  00100A  0E00               	movlw	0
  1825  00100C  6E33               	movwf	___ftmul@f2+1,c
  1826  00100E  0E40               	movlw	64
  1827  001010  6E34               	movwf	___ftmul@f2+2,c
  1828  001012  C245  F02F         	movff	main@l,___ftmul@f1
  1829  001016  C246  F030         	movff	main@l+1,___ftmul@f1+1
  1830  00101A  C247  F031         	movff	main@l+2,___ftmul@f1+2
  1831  00101E  ECAB  F00E         	call	___ftmul	;wreg free
  1832  001022  C02F  F0C6         	movff	?___ftmul,___ftdiv@f2
  1833  001026  C030  F0C7         	movff	?___ftmul+1,___ftdiv@f2+1
  1834  00102A  C031  F0C8         	movff	?___ftmul+2,___ftdiv@f2+2
  1835  00102E  C236  F0C3         	movff	main@u3,___ftdiv@f1
  1836  001032  C237  F0C4         	movff	main@u3+1,___ftdiv@f1+1
  1837  001036  C238  F0C5         	movff	main@u3+2,___ftdiv@f1+2
  1838  00103A  EC0B  F00E         	call	___ftdiv	;wreg free
  1839  00103E  C0C3  F01B         	movff	?___ftdiv,___ftneg@f1
  1840  001042  C0C4  F01C         	movff	?___ftdiv+1,___ftneg@f1+1
  1841  001046  C0C5  F01D         	movff	?___ftdiv+2,___ftneg@f1+2
  1842  00104A  EC71  F012         	call	___ftneg	;wreg free
  1843  00104E  C01B  F026         	movff	?___ftneg,___ftadd@f2
  1844  001052  C01C  F027         	movff	?___ftneg+1,___ftadd@f2+1
  1845  001056  C01D  F028         	movff	?___ftneg+2,___ftadd@f2+2
  1846  00105A  EC35  F00D         	call	___ftadd	;wreg free
  1847  00105E  C023  F258         	movff	?___ftadd,main@pwmTemp
  1848  001062  C024  F259         	movff	?___ftadd+1,main@pwmTemp+1
  1849  001066  C025  F25A         	movff	?___ftadd+2,main@pwmTemp+2
  1850                           
  1851                           ;main.c: 85: if(pwmTemp <= 0)
  1852  00106A  0E00               	movlw	0
  1853  00106C  6E13               	movwf	___ftge@ff1,c
  1854  00106E  0E00               	movlw	0
  1855  001070  6E14               	movwf	___ftge@ff1+1,c
  1856  001072  0E00               	movlw	0
  1857  001074  6E15               	movwf	___ftge@ff1+2,c
  1858  001076  C258  F016         	movff	main@pwmTemp,___ftge@ff2
  1859  00107A  C259  F017         	movff	main@pwmTemp+1,___ftge@ff2+1
  1860  00107E  C25A  F018         	movff	main@pwmTemp+2,___ftge@ff2+2
  1861  001082  EC63  F010         	call	___ftge	;wreg free
  1862  001086  A0D8               	btfss	status,0,c
  1863  001088  D009               	goto	l4255
  1864                           
  1865                           ;main.c: 86: pwmTemp = 1;
  1866  00108A  0E00               	movlw	0
  1867  00108C  0102               	movlb	2	; () banked
  1868  00108E  6F58               	movwf	main@pwmTemp& (0+255),b
  1869  001090  0E80               	movlw	128
  1870  001092  0102               	movlb	2	; () banked
  1871  001094  6F59               	movwf	(main@pwmTemp+1)& (0+255),b
  1872  001096  0E3F               	movlw	63
  1873  001098  0102               	movlb	2	; () banked
  1874  00109A  6F5A               	movwf	(main@pwmTemp+2)& (0+255),b
  1875  00109C                     l4255:
  1876                           
  1877                           ;main.c: 87: _pwm[0] = (unsigned char) pwmTemp;
  1878  00109C  C258  F013         	movff	main@pwmTemp,___fttol@f1
  1879  0010A0  C259  F014         	movff	main@pwmTemp+1,___fttol@f1+1
  1880  0010A4  C25A  F015         	movff	main@pwmTemp+2,___fttol@f1+2
  1881  0010A8  EC3B  F00F         	call	___fttol	;wreg free
  1882  0010AC  5013               	movf	?___fttol,w,c
  1883  0010AE  6E3B               	movwf	__pwm,c
  1884                           
  1885                           ;main.c: 88: pwmTemp = (u1/4 - u2/(2*l) + u4/(4*lambda));
  1886  0010B0  0E00               	movlw	0
  1887  0010B2  6E32               	movwf	___ftmul@f2,c
  1888  0010B4  0E80               	movlw	128
  1889  0010B6  6E33               	movwf	___ftmul@f2+1,c
  1890  0010B8  0E40               	movlw	64
  1891  0010BA  6E34               	movwf	___ftmul@f2+2,c
  1892  0010BC  C248  F02F         	movff	main@lambda,___ftmul@f1
  1893  0010C0  C249  F030         	movff	main@lambda+1,___ftmul@f1+1
  1894  0010C4  C24A  F031         	movff	main@lambda+2,___ftmul@f1+2
  1895  0010C8  ECAB  F00E         	call	___ftmul	;wreg free
  1896  0010CC  C02F  F0C6         	movff	?___ftmul,___ftdiv@f2
  1897  0010D0  C030  F0C7         	movff	?___ftmul+1,___ftdiv@f2+1
  1898  0010D4  C031  F0C8         	movff	?___ftmul+2,___ftdiv@f2+2
  1899  0010D8  C24E  F0C3         	movff	main@u4,___ftdiv@f1
  1900  0010DC  C24F  F0C4         	movff	main@u4+1,___ftdiv@f1+1
  1901  0010E0  C250  F0C5         	movff	main@u4+2,___ftdiv@f1+2
  1902  0010E4  EC0B  F00E         	call	___ftdiv	;wreg free
  1903  0010E8  C0C3  F026         	movff	?___ftdiv,___ftadd@f2
  1904  0010EC  C0C4  F027         	movff	?___ftdiv+1,___ftadd@f2+1
  1905  0010F0  C0C5  F028         	movff	?___ftdiv+2,___ftadd@f2+2
  1906  0010F4  0E00               	movlw	0
  1907  0010F6  0100               	movlb	0	; () banked
  1908  0010F8  6FC6               	movwf	___ftdiv@f2& (0+255),b
  1909  0010FA  0E80               	movlw	128
  1910  0010FC  0100               	movlb	0	; () banked
  1911  0010FE  6FC7               	movwf	(___ftdiv@f2+1)& (0+255),b
  1912  001100  0E40               	movlw	64
  1913  001102  0100               	movlb	0	; () banked
  1914  001104  6FC8               	movwf	(___ftdiv@f2+2)& (0+255),b
  1915  001106  C24B  F0C3         	movff	main@u1,___ftdiv@f1
  1916  00110A  C24C  F0C4         	movff	main@u1+1,___ftdiv@f1+1
  1917  00110E  C24D  F0C5         	movff	main@u1+2,___ftdiv@f1+2
  1918  001112  EC0B  F00E         	call	___ftdiv	;wreg free
  1919  001116  C0C3  F023         	movff	?___ftdiv,___ftadd@f1
  1920  00111A  C0C4  F024         	movff	?___ftdiv+1,___ftadd@f1+1
  1921  00111E  C0C5  F025         	movff	?___ftdiv+2,___ftadd@f1+2
  1922  001122  EC35  F00D         	call	___ftadd	;wreg free
  1923  001126  C023  F255         	movff	?___ftadd,_main$1972
  1924  00112A  C024  F256         	movff	?___ftadd+1,_main$1972+1
  1925  00112E  C025  F257         	movff	?___ftadd+2,_main$1972+2
  1926                           
  1927                           ;main.c: 88: pwmTemp = (u1/4 - u2/(2*l) + u4/(4*lambda));
  1928  001132  C255  F023         	movff	_main$1972,___ftadd@f1
  1929  001136  C256  F024         	movff	_main$1972+1,___ftadd@f1+1
  1930  00113A  C257  F025         	movff	_main$1972+2,___ftadd@f1+2
  1931  00113E  0E00               	movlw	0
  1932  001140  6E32               	movwf	___ftmul@f2,c
  1933  001142  0E00               	movlw	0
  1934  001144  6E33               	movwf	___ftmul@f2+1,c
  1935  001146  0E40               	movlw	64
  1936  001148  6E34               	movwf	___ftmul@f2+2,c
  1937  00114A  C245  F02F         	movff	main@l,___ftmul@f1
  1938  00114E  C246  F030         	movff	main@l+1,___ftmul@f1+1
  1939  001152  C247  F031         	movff	main@l+2,___ftmul@f1+2
  1940  001156  ECAB  F00E         	call	___ftmul	;wreg free
  1941  00115A  C02F  F0C6         	movff	?___ftmul,___ftdiv@f2
  1942  00115E  C030  F0C7         	movff	?___ftmul+1,___ftdiv@f2+1
  1943  001162  C031  F0C8         	movff	?___ftmul+2,___ftdiv@f2+2
  1944  001166  C233  F0C3         	movff	main@u2,___ftdiv@f1
  1945  00116A  C234  F0C4         	movff	main@u2+1,___ftdiv@f1+1
  1946  00116E  C235  F0C5         	movff	main@u2+2,___ftdiv@f1+2
  1947  001172  EC0B  F00E         	call	___ftdiv	;wreg free
  1948  001176  C0C3  F01B         	movff	?___ftdiv,___ftneg@f1
  1949  00117A  C0C4  F01C         	movff	?___ftdiv+1,___ftneg@f1+1
  1950  00117E  C0C5  F01D         	movff	?___ftdiv+2,___ftneg@f1+2
  1951  001182  EC71  F012         	call	___ftneg	;wreg free
  1952  001186  C01B  F026         	movff	?___ftneg,___ftadd@f2
  1953  00118A  C01C  F027         	movff	?___ftneg+1,___ftadd@f2+1
  1954  00118E  C01D  F028         	movff	?___ftneg+2,___ftadd@f2+2
  1955  001192  EC35  F00D         	call	___ftadd	;wreg free
  1956  001196  C023  F258         	movff	?___ftadd,main@pwmTemp
  1957  00119A  C024  F259         	movff	?___ftadd+1,main@pwmTemp+1
  1958  00119E  C025  F25A         	movff	?___ftadd+2,main@pwmTemp+2
  1959                           
  1960                           ;main.c: 89: if(pwmTemp <= 0)
  1961  0011A2  0E00               	movlw	0
  1962  0011A4  6E13               	movwf	___ftge@ff1,c
  1963  0011A6  0E00               	movlw	0
  1964  0011A8  6E14               	movwf	___ftge@ff1+1,c
  1965  0011AA  0E00               	movlw	0
  1966  0011AC  6E15               	movwf	___ftge@ff1+2,c
  1967  0011AE  C258  F016         	movff	main@pwmTemp,___ftge@ff2
  1968  0011B2  C259  F017         	movff	main@pwmTemp+1,___ftge@ff2+1
  1969  0011B6  C25A  F018         	movff	main@pwmTemp+2,___ftge@ff2+2
  1970  0011BA  EC63  F010         	call	___ftge	;wreg free
  1971  0011BE  A0D8               	btfss	status,0,c
  1972  0011C0  D009               	goto	l4265
  1973                           
  1974                           ;main.c: 90: pwmTemp = 1;
  1975  0011C2  0E00               	movlw	0
  1976  0011C4  0102               	movlb	2	; () banked
  1977  0011C6  6F58               	movwf	main@pwmTemp& (0+255),b
  1978  0011C8  0E80               	movlw	128
  1979  0011CA  0102               	movlb	2	; () banked
  1980  0011CC  6F59               	movwf	(main@pwmTemp+1)& (0+255),b
  1981  0011CE  0E3F               	movlw	63
  1982  0011D0  0102               	movlb	2	; () banked
  1983  0011D2  6F5A               	movwf	(main@pwmTemp+2)& (0+255),b
  1984  0011D4                     l4265:
  1985                           
  1986                           ;main.c: 91: _pwm[1] = (unsigned char) pwmTemp;
  1987  0011D4  C258  F013         	movff	main@pwmTemp,___fttol@f1
  1988  0011D8  C259  F014         	movff	main@pwmTemp+1,___fttol@f1+1
  1989  0011DC  C25A  F015         	movff	main@pwmTemp+2,___fttol@f1+2
  1990  0011E0  EC3B  F00F         	call	___fttol	;wreg free
  1991  0011E4  5013               	movf	?___fttol,w,c
  1992  0011E6  6E3C               	movwf	__pwm+1,c
  1993                           
  1994                           ;main.c: 92: pwmTemp = (u1/4 + u3/(2*l) - u4/(4*lambda));
  1995  0011E8  0E00               	movlw	0
  1996  0011EA  6E32               	movwf	___ftmul@f2,c
  1997  0011EC  0E00               	movlw	0
  1998  0011EE  6E33               	movwf	___ftmul@f2+1,c
  1999  0011F0  0E40               	movlw	64
  2000  0011F2  6E34               	movwf	___ftmul@f2+2,c
  2001  0011F4  C245  F02F         	movff	main@l,___ftmul@f1
  2002  0011F8  C246  F030         	movff	main@l+1,___ftmul@f1+1
  2003  0011FC  C247  F031         	movff	main@l+2,___ftmul@f1+2
  2004  001200  ECAB  F00E         	call	___ftmul	;wreg free
  2005  001204  C02F  F0C6         	movff	?___ftmul,___ftdiv@f2
  2006  001208  C030  F0C7         	movff	?___ftmul+1,___ftdiv@f2+1
  2007  00120C  C031  F0C8         	movff	?___ftmul+2,___ftdiv@f2+2
  2008  001210  C236  F0C3         	movff	main@u3,___ftdiv@f1
  2009  001214  C237  F0C4         	movff	main@u3+1,___ftdiv@f1+1
  2010  001218  C238  F0C5         	movff	main@u3+2,___ftdiv@f1+2
  2011  00121C  EC0B  F00E         	call	___ftdiv	;wreg free
  2012  001220  C0C3  F026         	movff	?___ftdiv,___ftadd@f2
  2013  001224  C0C4  F027         	movff	?___ftdiv+1,___ftadd@f2+1
  2014  001228  C0C5  F028         	movff	?___ftdiv+2,___ftadd@f2+2
  2015  00122C  0E00               	movlw	0
  2016  00122E  0100               	movlb	0	; () banked
  2017  001230  6FC6               	movwf	___ftdiv@f2& (0+255),b
  2018  001232  0E80               	movlw	128
  2019  001234  0100               	movlb	0	; () banked
  2020  001236  6FC7               	movwf	(___ftdiv@f2+1)& (0+255),b
  2021  001238  0E40               	movlw	64
  2022  00123A  0100               	movlb	0	; () banked
  2023  00123C  6FC8               	movwf	(___ftdiv@f2+2)& (0+255),b
  2024  00123E  C24B  F0C3         	movff	main@u1,___ftdiv@f1
  2025  001242  C24C  F0C4         	movff	main@u1+1,___ftdiv@f1+1
  2026  001246  C24D  F0C5         	movff	main@u1+2,___ftdiv@f1+2
  2027  00124A  EC0B  F00E         	call	___ftdiv	;wreg free
  2028  00124E  C0C3  F023         	movff	?___ftdiv,___ftadd@f1
  2029  001252  C0C4  F024         	movff	?___ftdiv+1,___ftadd@f1+1
  2030  001256  C0C5  F025         	movff	?___ftdiv+2,___ftadd@f1+2
  2031  00125A  EC35  F00D         	call	___ftadd	;wreg free
  2032  00125E  C023  F255         	movff	?___ftadd,_main$1972
  2033  001262  C024  F256         	movff	?___ftadd+1,_main$1972+1
  2034  001266  C025  F257         	movff	?___ftadd+2,_main$1972+2
  2035                           
  2036                           ;main.c: 92: pwmTemp = (u1/4 + u3/(2*l) - u4/(4*lambda));
  2037  00126A  C255  F023         	movff	_main$1972,___ftadd@f1
  2038  00126E  C256  F024         	movff	_main$1972+1,___ftadd@f1+1
  2039  001272  C257  F025         	movff	_main$1972+2,___ftadd@f1+2
  2040  001276  0E00               	movlw	0
  2041  001278  6E32               	movwf	___ftmul@f2,c
  2042  00127A  0E80               	movlw	128
  2043  00127C  6E33               	movwf	___ftmul@f2+1,c
  2044  00127E  0E40               	movlw	64
  2045  001280  6E34               	movwf	___ftmul@f2+2,c
  2046  001282  C248  F02F         	movff	main@lambda,___ftmul@f1
  2047  001286  C249  F030         	movff	main@lambda+1,___ftmul@f1+1
  2048  00128A  C24A  F031         	movff	main@lambda+2,___ftmul@f1+2
  2049  00128E  ECAB  F00E         	call	___ftmul	;wreg free
  2050  001292  C02F  F0C6         	movff	?___ftmul,___ftdiv@f2
  2051  001296  C030  F0C7         	movff	?___ftmul+1,___ftdiv@f2+1
  2052  00129A  C031  F0C8         	movff	?___ftmul+2,___ftdiv@f2+2
  2053  00129E  C24E  F0C3         	movff	main@u4,___ftdiv@f1
  2054  0012A2  C24F  F0C4         	movff	main@u4+1,___ftdiv@f1+1
  2055  0012A6  C250  F0C5         	movff	main@u4+2,___ftdiv@f1+2
  2056  0012AA  EC0B  F00E         	call	___ftdiv	;wreg free
  2057  0012AE  C0C3  F01B         	movff	?___ftdiv,___ftneg@f1
  2058  0012B2  C0C4  F01C         	movff	?___ftdiv+1,___ftneg@f1+1
  2059  0012B6  C0C5  F01D         	movff	?___ftdiv+2,___ftneg@f1+2
  2060  0012BA  EC71  F012         	call	___ftneg	;wreg free
  2061  0012BE  C01B  F026         	movff	?___ftneg,___ftadd@f2
  2062  0012C2  C01C  F027         	movff	?___ftneg+1,___ftadd@f2+1
  2063  0012C6  C01D  F028         	movff	?___ftneg+2,___ftadd@f2+2
  2064  0012CA  EC35  F00D         	call	___ftadd	;wreg free
  2065  0012CE  C023  F258         	movff	?___ftadd,main@pwmTemp
  2066  0012D2  C024  F259         	movff	?___ftadd+1,main@pwmTemp+1
  2067  0012D6  C025  F25A         	movff	?___ftadd+2,main@pwmTemp+2
  2068                           
  2069                           ;main.c: 93: if(pwmTemp <= 0)
  2070  0012DA  0E00               	movlw	0
  2071  0012DC  6E13               	movwf	___ftge@ff1,c
  2072  0012DE  0E00               	movlw	0
  2073  0012E0  6E14               	movwf	___ftge@ff1+1,c
  2074  0012E2  0E00               	movlw	0
  2075  0012E4  6E15               	movwf	___ftge@ff1+2,c
  2076  0012E6  C258  F016         	movff	main@pwmTemp,___ftge@ff2
  2077  0012EA  C259  F017         	movff	main@pwmTemp+1,___ftge@ff2+1
  2078  0012EE  C25A  F018         	movff	main@pwmTemp+2,___ftge@ff2+2
  2079  0012F2  EC63  F010         	call	___ftge	;wreg free
  2080  0012F6  A0D8               	btfss	status,0,c
  2081  0012F8  D009               	goto	l4275
  2082                           
  2083                           ;main.c: 94: pwmTemp = 1;
  2084  0012FA  0E00               	movlw	0
  2085  0012FC  0102               	movlb	2	; () banked
  2086  0012FE  6F58               	movwf	main@pwmTemp& (0+255),b
  2087  001300  0E80               	movlw	128
  2088  001302  0102               	movlb	2	; () banked
  2089  001304  6F59               	movwf	(main@pwmTemp+1)& (0+255),b
  2090  001306  0E3F               	movlw	63
  2091  001308  0102               	movlb	2	; () banked
  2092  00130A  6F5A               	movwf	(main@pwmTemp+2)& (0+255),b
  2093  00130C                     l4275:
  2094                           
  2095                           ;main.c: 95: _pwm[3] = (unsigned char) pwmTemp;
  2096  00130C  C258  F013         	movff	main@pwmTemp,___fttol@f1
  2097  001310  C259  F014         	movff	main@pwmTemp+1,___fttol@f1+1
  2098  001314  C25A  F015         	movff	main@pwmTemp+2,___fttol@f1+2
  2099  001318  EC3B  F00F         	call	___fttol	;wreg free
  2100  00131C  5013               	movf	?___fttol,w,c
  2101  00131E  6E3E               	movwf	__pwm+3,c
  2102                           
  2103                           ;main.c: 96: pwmTemp = (u1/4 + u2/(2*l) + u4/(4*lambda));
  2104  001320  0E00               	movlw	0
  2105  001322  6E32               	movwf	___ftmul@f2,c
  2106  001324  0E00               	movlw	0
  2107  001326  6E33               	movwf	___ftmul@f2+1,c
  2108  001328  0E40               	movlw	64
  2109  00132A  6E34               	movwf	___ftmul@f2+2,c
  2110  00132C  C245  F02F         	movff	main@l,___ftmul@f1
  2111  001330  C246  F030         	movff	main@l+1,___ftmul@f1+1
  2112  001334  C247  F031         	movff	main@l+2,___ftmul@f1+2
  2113  001338  ECAB  F00E         	call	___ftmul	;wreg free
  2114  00133C  C02F  F0C6         	movff	?___ftmul,___ftdiv@f2
  2115  001340  C030  F0C7         	movff	?___ftmul+1,___ftdiv@f2+1
  2116  001344  C031  F0C8         	movff	?___ftmul+2,___ftdiv@f2+2
  2117  001348  C233  F0C3         	movff	main@u2,___ftdiv@f1
  2118  00134C  C234  F0C4         	movff	main@u2+1,___ftdiv@f1+1
  2119  001350  C235  F0C5         	movff	main@u2+2,___ftdiv@f1+2
  2120  001354  EC0B  F00E         	call	___ftdiv	;wreg free
  2121  001358  C0C3  F026         	movff	?___ftdiv,___ftadd@f2
  2122  00135C  C0C4  F027         	movff	?___ftdiv+1,___ftadd@f2+1
  2123  001360  C0C5  F028         	movff	?___ftdiv+2,___ftadd@f2+2
  2124  001364  0E00               	movlw	0
  2125  001366  0100               	movlb	0	; () banked
  2126  001368  6FC6               	movwf	___ftdiv@f2& (0+255),b
  2127  00136A  0E80               	movlw	128
  2128  00136C  0100               	movlb	0	; () banked
  2129  00136E  6FC7               	movwf	(___ftdiv@f2+1)& (0+255),b
  2130  001370  0E40               	movlw	64
  2131  001372  0100               	movlb	0	; () banked
  2132  001374  6FC8               	movwf	(___ftdiv@f2+2)& (0+255),b
  2133  001376  C24B  F0C3         	movff	main@u1,___ftdiv@f1
  2134  00137A  C24C  F0C4         	movff	main@u1+1,___ftdiv@f1+1
  2135  00137E  C24D  F0C5         	movff	main@u1+2,___ftdiv@f1+2
  2136  001382  EC0B  F00E         	call	___ftdiv	;wreg free
  2137  001386  C0C3  F023         	movff	?___ftdiv,___ftadd@f1
  2138  00138A  C0C4  F024         	movff	?___ftdiv+1,___ftadd@f1+1
  2139  00138E  C0C5  F025         	movff	?___ftdiv+2,___ftadd@f1+2
  2140  001392  EC35  F00D         	call	___ftadd	;wreg free
  2141  001396  C023  F255         	movff	?___ftadd,_main$1972
  2142  00139A  C024  F256         	movff	?___ftadd+1,_main$1972+1
  2143  00139E  C025  F257         	movff	?___ftadd+2,_main$1972+2
  2144                           
  2145                           ;main.c: 96: pwmTemp = (u1/4 + u2/(2*l) + u4/(4*lambda));
  2146  0013A2  C255  F023         	movff	_main$1972,___ftadd@f1
  2147  0013A6  C256  F024         	movff	_main$1972+1,___ftadd@f1+1
  2148  0013AA  C257  F025         	movff	_main$1972+2,___ftadd@f1+2
  2149  0013AE  0E00               	movlw	0
  2150  0013B0  6E32               	movwf	___ftmul@f2,c
  2151  0013B2  0E80               	movlw	128
  2152  0013B4  6E33               	movwf	___ftmul@f2+1,c
  2153  0013B6  0E40               	movlw	64
  2154  0013B8  6E34               	movwf	___ftmul@f2+2,c
  2155  0013BA  C248  F02F         	movff	main@lambda,___ftmul@f1
  2156  0013BE  C249  F030         	movff	main@lambda+1,___ftmul@f1+1
  2157  0013C2  C24A  F031         	movff	main@lambda+2,___ftmul@f1+2
  2158  0013C6  ECAB  F00E         	call	___ftmul	;wreg free
  2159  0013CA  C02F  F0C6         	movff	?___ftmul,___ftdiv@f2
  2160  0013CE  C030  F0C7         	movff	?___ftmul+1,___ftdiv@f2+1
  2161  0013D2  C031  F0C8         	movff	?___ftmul+2,___ftdiv@f2+2
  2162  0013D6  C24E  F0C3         	movff	main@u4,___ftdiv@f1
  2163  0013DA  C24F  F0C4         	movff	main@u4+1,___ftdiv@f1+1
  2164  0013DE  C250  F0C5         	movff	main@u4+2,___ftdiv@f1+2
  2165  0013E2  EC0B  F00E         	call	___ftdiv	;wreg free
  2166  0013E6  C0C3  F026         	movff	?___ftdiv,___ftadd@f2
  2167  0013EA  C0C4  F027         	movff	?___ftdiv+1,___ftadd@f2+1
  2168  0013EE  C0C5  F028         	movff	?___ftdiv+2,___ftadd@f2+2
  2169  0013F2  EC35  F00D         	call	___ftadd	;wreg free
  2170  0013F6  C023  F258         	movff	?___ftadd,main@pwmTemp
  2171  0013FA  C024  F259         	movff	?___ftadd+1,main@pwmTemp+1
  2172  0013FE  C025  F25A         	movff	?___ftadd+2,main@pwmTemp+2
  2173                           
  2174                           ;main.c: 97: if(pwmTemp <= 0)
  2175  001402  0E00               	movlw	0
  2176  001404  6E13               	movwf	___ftge@ff1,c
  2177  001406  0E00               	movlw	0
  2178  001408  6E14               	movwf	___ftge@ff1+1,c
  2179  00140A  0E00               	movlw	0
  2180  00140C  6E15               	movwf	___ftge@ff1+2,c
  2181  00140E  C258  F016         	movff	main@pwmTemp,___ftge@ff2
  2182  001412  C259  F017         	movff	main@pwmTemp+1,___ftge@ff2+1
  2183  001416  C25A  F018         	movff	main@pwmTemp+2,___ftge@ff2+2
  2184  00141A  EC63  F010         	call	___ftge	;wreg free
  2185  00141E  A0D8               	btfss	status,0,c
  2186  001420  D009               	goto	l4285
  2187                           
  2188                           ;main.c: 98: pwmTemp = 1;
  2189  001422  0E00               	movlw	0
  2190  001424  0102               	movlb	2	; () banked
  2191  001426  6F58               	movwf	main@pwmTemp& (0+255),b
  2192  001428  0E80               	movlw	128
  2193  00142A  0102               	movlb	2	; () banked
  2194  00142C  6F59               	movwf	(main@pwmTemp+1)& (0+255),b
  2195  00142E  0E3F               	movlw	63
  2196  001430  0102               	movlb	2	; () banked
  2197  001432  6F5A               	movwf	(main@pwmTemp+2)& (0+255),b
  2198  001434                     l4285:
  2199                           
  2200                           ;main.c: 99: _pwm[2] = (unsigned char) pwmTemp;
  2201  001434  C258  F013         	movff	main@pwmTemp,___fttol@f1
  2202  001438  C259  F014         	movff	main@pwmTemp+1,___fttol@f1+1
  2203  00143C  C25A  F015         	movff	main@pwmTemp+2,___fttol@f1+2
  2204  001440  EC3B  F00F         	call	___fttol	;wreg free
  2205  001444  5013               	movf	?___fttol,w,c
  2206  001446  6E3D               	movwf	__pwm+2,c
  2207                           
  2208                           ;main.c: 101: _delay((unsigned long)((10)*(48000000/4000.0))); _delay((unsigned long)((1
      +                          0)*(48000000/4000.0))); _delay((unsigned long)((10)*(48000000/4000.0))); _delay((unsigne
      +                          d long)((10)*(48000000/4000.0))); _delay((unsigned long)((10)*(48000000/4000.0))); _dela
  2209  001448  0E9C               	movlw	156
  2210  00144A  0100               	movlb	0	; () banked
  2211  00144C  6FDB               	movwf	??_main& (0+255),b
  2212  00144E  0ED7               	movlw	215
  2213  001450                     u4377:
  2214  001450  2EE8               	decfsz	wreg,f,c
  2215  001452  D7FE               	goto	u4377
  2216  001454  2FDB               	decfsz	??_main& (0+255),f,b
  2217  001456  D7FC               	goto	u4377
  2218  001458  F000               	nop	
  2219  00145A  0E9C               	movlw	156
  2220  00145C  0100               	movlb	0	; () banked
  2221  00145E  6FDB               	movwf	??_main& (0+255),b
  2222  001460  0ED7               	movlw	215
  2223  001462                     u4387:
  2224  001462  2EE8               	decfsz	wreg,f,c
  2225  001464  D7FE               	goto	u4387
  2226  001466  2FDB               	decfsz	??_main& (0+255),f,b
  2227  001468  D7FC               	goto	u4387
  2228  00146A  F000               	nop	
  2229  00146C  0E9C               	movlw	156
  2230  00146E  0100               	movlb	0	; () banked
  2231  001470  6FDB               	movwf	??_main& (0+255),b
  2232  001472  0ED7               	movlw	215
  2233  001474                     u4397:
  2234  001474  2EE8               	decfsz	wreg,f,c
  2235  001476  D7FE               	goto	u4397
  2236  001478  2FDB               	decfsz	??_main& (0+255),f,b
  2237  00147A  D7FC               	goto	u4397
  2238  00147C  F000               	nop	
  2239  00147E  0E9C               	movlw	156
  2240  001480  0100               	movlb	0	; () banked
  2241  001482  6FDB               	movwf	??_main& (0+255),b
  2242  001484  0ED7               	movlw	215
  2243  001486                     u4407:
  2244  001486  2EE8               	decfsz	wreg,f,c
  2245  001488  D7FE               	goto	u4407
  2246  00148A  2FDB               	decfsz	??_main& (0+255),f,b
  2247  00148C  D7FC               	goto	u4407
  2248  00148E  F000               	nop	
  2249  001490  0E9C               	movlw	156
  2250  001492  0100               	movlb	0	; () banked
  2251  001494  6FDB               	movwf	??_main& (0+255),b
  2252  001496  0ED7               	movlw	215
  2253  001498                     u4417:
  2254  001498  2EE8               	decfsz	wreg,f,c
  2255  00149A  D7FE               	goto	u4417
  2256  00149C  2FDB               	decfsz	??_main& (0+255),f,b
  2257  00149E  D7FC               	goto	u4417
  2258  0014A0  F000               	nop	
  2259  0014A2  0E9C               	movlw	156
  2260  0014A4  0100               	movlb	0	; () banked
  2261  0014A6  6FDB               	movwf	??_main& (0+255),b
  2262  0014A8  0ED7               	movlw	215
  2263  0014AA                     u4427:
  2264  0014AA  2EE8               	decfsz	wreg,f,c
  2265  0014AC  D7FE               	goto	u4427
  2266  0014AE  2FDB               	decfsz	??_main& (0+255),f,b
  2267  0014B0  D7FC               	goto	u4427
  2268  0014B2  F000               	nop	
  2269                           
  2270                           ;main.c: 102: _delay((unsigned long)((10)*(48000000/4000.0))); _delay((unsigned long)((1
      +                          0)*(48000000/4000.0))); _delay((unsigned long)((10)*(48000000/4000.0))); _delay((unsigne
      +                          d long)((10)*(48000000/4000.0))); _delay((unsigned long)((10)*(48000000/4000.0))); _dela
  2271  0014B4  0E9C               	movlw	156
  2272  0014B6  0100               	movlb	0	; () banked
  2273  0014B8  6FDB               	movwf	??_main& (0+255),b
  2274  0014BA  0ED7               	movlw	215
  2275  0014BC                     u4437:
  2276  0014BC  2EE8               	decfsz	wreg,f,c
  2277  0014BE  D7FE               	goto	u4437
  2278  0014C0  2FDB               	decfsz	??_main& (0+255),f,b
  2279  0014C2  D7FC               	goto	u4437
  2280  0014C4  F000               	nop	
  2281  0014C6  0E9C               	movlw	156
  2282  0014C8  0100               	movlb	0	; () banked
  2283  0014CA  6FDB               	movwf	??_main& (0+255),b
  2284  0014CC  0ED7               	movlw	215
  2285  0014CE                     u4447:
  2286  0014CE  2EE8               	decfsz	wreg,f,c
  2287  0014D0  D7FE               	goto	u4447
  2288  0014D2  2FDB               	decfsz	??_main& (0+255),f,b
  2289  0014D4  D7FC               	goto	u4447
  2290  0014D6  F000               	nop	
  2291  0014D8  0E9C               	movlw	156
  2292  0014DA  0100               	movlb	0	; () banked
  2293  0014DC  6FDB               	movwf	??_main& (0+255),b
  2294  0014DE  0ED7               	movlw	215
  2295  0014E0                     u4457:
  2296  0014E0  2EE8               	decfsz	wreg,f,c
  2297  0014E2  D7FE               	goto	u4457
  2298  0014E4  2FDB               	decfsz	??_main& (0+255),f,b
  2299  0014E6  D7FC               	goto	u4457
  2300  0014E8  F000               	nop	
  2301  0014EA  0E9C               	movlw	156
  2302  0014EC  0100               	movlb	0	; () banked
  2303  0014EE  6FDB               	movwf	??_main& (0+255),b
  2304  0014F0  0ED7               	movlw	215
  2305  0014F2                     u4467:
  2306  0014F2  2EE8               	decfsz	wreg,f,c
  2307  0014F4  D7FE               	goto	u4467
  2308  0014F6  2FDB               	decfsz	??_main& (0+255),f,b
  2309  0014F8  D7FC               	goto	u4467
  2310  0014FA  F000               	nop	
  2311  0014FC  0E9C               	movlw	156
  2312  0014FE  0100               	movlb	0	; () banked
  2313  001500  6FDB               	movwf	??_main& (0+255),b
  2314  001502  0ED7               	movlw	215
  2315  001504                     u4477:
  2316  001504  2EE8               	decfsz	wreg,f,c
  2317  001506  D7FE               	goto	u4477
  2318  001508  2FDB               	decfsz	??_main& (0+255),f,b
  2319  00150A  D7FC               	goto	u4477
  2320  00150C  F000               	nop	
  2321  00150E  0E9C               	movlw	156
  2322  001510  0100               	movlb	0	; () banked
  2323  001512  6FDB               	movwf	??_main& (0+255),b
  2324  001514  0ED7               	movlw	215
  2325  001516                     u4487:
  2326  001516  2EE8               	decfsz	wreg,f,c
  2327  001518  D7FE               	goto	u4487
  2328  00151A  2FDB               	decfsz	??_main& (0+255),f,b
  2329  00151C  D7FC               	goto	u4487
  2330  00151E  F000               	nop	
  2331  001520  EF74  F005         	goto	l4207
  2332  001524                     __end_of_main:
  2333                           	opt stack 0
  2334                           tblptru	equ	0xFF8
  2335                           tblptrh	equ	0xFF7
  2336                           tblptrl	equ	0xFF6
  2337                           tablat	equ	0xFF5
  2338                           postinc0	equ	0xFEE
  2339                           wreg	equ	0xFE8
  2340                           postdec1	equ	0xFE5
  2341                           fsr1l	equ	0xFE1
  2342                           status	equ	0xFD8
  2343                           
  2344 ;; *************** function _readGIRO *****************
  2345 ;; Defined at:
  2346 ;;		line 69 in file "ADXL345.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  Adress          1    wreg     unsigned char 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  Adress          1   20[COMRAM] unsigned char 
  2351 ;;  c               1   21[COMRAM] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      unsigned char 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0, cstack
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2361 ;;      Params:         0       0       0       0       0       0       0       0       0
  2362 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2364 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2365 ;;Total ram usage:        2 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    6
  2368 ;; This function calls:
  2369 ;;		_IdleI2C
  2370 ;;		_ReadI2C
  2371 ;;		_WriteI2C
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;;		_readAccelGiroValues
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text1
  2379  0023C4                     __ptext1:
  2380                           	opt stack 0
  2381  0023C4                     _readGIRO:
  2382                           	opt stack 24
  2383                           
  2384                           ;incstack = 0
  2385                           ;readGIRO@Adress stored from wreg
  2386  0023C4  6E15               	movwf	readGIRO@Adress,c
  2387                           
  2388                           ;ADXL345.c: 71: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2389  0023C6  80C5               	bsf	4037,0,c	;volatile
  2390  0023C8                     l96:
  2391  0023C8  B0C5               	btfsc	4037,0,c	;volatile
  2392  0023CA  D7FE               	goto	l96
  2393                           
  2394                           ;ADXL345.c: 72: WriteI2C(0xD2);
  2395  0023CC  0ED2               	movlw	210
  2396  0023CE  ECBC  F011         	call	_WriteI2C
  2397                           
  2398                           ;ADXL345.c: 73: IdleI2C();
  2399  0023D2  ECB7  F012         	call	_IdleI2C	;wreg free
  2400                           
  2401                           ;ADXL345.c: 74: WriteI2C(Adress);
  2402  0023D6  5015               	movf	readGIRO@Adress,w,c
  2403  0023D8  ECBC  F011         	call	_WriteI2C
  2404                           
  2405                           ;ADXL345.c: 75: IdleI2C();
  2406  0023DC  ECB7  F012         	call	_IdleI2C	;wreg free
  2407                           
  2408                           ;ADXL345.c: 76: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2409  0023E0  82C5               	bsf	4037,1,c	;volatile
  2410  0023E2                     l99:
  2411  0023E2  B2C5               	btfsc	4037,1,c	;volatile
  2412  0023E4  D7FE               	goto	l99
  2413                           
  2414                           ;ADXL345.c: 77: WriteI2C(0xD3);
  2415  0023E6  0ED3               	movlw	211
  2416  0023E8  ECBC  F011         	call	_WriteI2C
  2417                           
  2418                           ;ADXL345.c: 78: IdleI2C();
  2419  0023EC  ECB7  F012         	call	_IdleI2C	;wreg free
  2420                           
  2421                           ;ADXL345.c: 79: unsigned char c = ReadI2C();
  2422  0023F0  EC93  F012         	call	_ReadI2C	;wreg free
  2423  0023F4  6E16               	movwf	readGIRO@c,c
  2424                           
  2425                           ;ADXL345.c: 80: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2426  0023F6  8AC5               	bsf	4037,5,c	;volatile
  2427  0023F8  88C5               	bsf	4037,4,c	;volatile
  2428  0023FA                     l102:
  2429  0023FA  B8C5               	btfsc	4037,4,c	;volatile
  2430  0023FC  D7FE               	goto	l102
  2431                           
  2432                           ;ADXL345.c: 81: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2433  0023FE  84C5               	bsf	4037,2,c	;volatile
  2434  002400                     l105:
  2435  002400  B4C5               	btfsc	4037,2,c	;volatile
  2436  002402  D7FE               	goto	l105
  2437                           
  2438                           ;ADXL345.c: 82: return c;
  2439  002404  5016               	movf	readGIRO@c,w,c
  2440  002406  0012               	return	
  2441  002408                     __end_of_readGIRO:
  2442                           	opt stack 0
  2443                           tblptru	equ	0xFF8
  2444                           tblptrh	equ	0xFF7
  2445                           tblptrl	equ	0xFF6
  2446                           tablat	equ	0xFF5
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           postdec1	equ	0xFE5
  2450                           fsr1l	equ	0xFE1
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _readACC *****************
  2454 ;; Defined at:
  2455 ;;		line 53 in file "ADXL345.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  Adress          1    wreg     unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  Adress          1   20[COMRAM] unsigned char 
  2460 ;;  c               1   21[COMRAM] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      unsigned char 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0
  2471 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2473 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    6
  2477 ;; This function calls:
  2478 ;;		_IdleI2C
  2479 ;;		_ReadI2C
  2480 ;;		_WriteI2C
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;;		_readAccelGiroValues
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text2
  2488  002408                     __ptext2:
  2489                           	opt stack 0
  2490  002408                     _readACC:
  2491                           	opt stack 24
  2492                           
  2493                           ;incstack = 0
  2494                           ;readACC@Adress stored from wreg
  2495  002408  6E15               	movwf	readACC@Adress,c
  2496                           
  2497                           ;ADXL345.c: 55: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  2498  00240A  80C5               	bsf	4037,0,c	;volatile
  2499  00240C                     l81:
  2500  00240C  B0C5               	btfsc	4037,0,c	;volatile
  2501  00240E  D7FE               	goto	l81
  2502                           
  2503                           ;ADXL345.c: 56: WriteI2C(0xA6);
  2504  002410  0EA6               	movlw	166
  2505  002412  ECBC  F011         	call	_WriteI2C
  2506                           
  2507                           ;ADXL345.c: 57: IdleI2C();
  2508  002416  ECB7  F012         	call	_IdleI2C	;wreg free
  2509                           
  2510                           ;ADXL345.c: 58: WriteI2C(Adress);
  2511  00241A  5015               	movf	readACC@Adress,w,c
  2512  00241C  ECBC  F011         	call	_WriteI2C
  2513                           
  2514                           ;ADXL345.c: 59: IdleI2C();
  2515  002420  ECB7  F012         	call	_IdleI2C	;wreg free
  2516                           
  2517                           ;ADXL345.c: 60: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  2518  002424  82C5               	bsf	4037,1,c	;volatile
  2519  002426                     l84:
  2520  002426  B2C5               	btfsc	4037,1,c	;volatile
  2521  002428  D7FE               	goto	l84
  2522                           
  2523                           ;ADXL345.c: 61: WriteI2C(0xA7);
  2524  00242A  0EA7               	movlw	167
  2525  00242C  ECBC  F011         	call	_WriteI2C
  2526                           
  2527                           ;ADXL345.c: 62: IdleI2C();
  2528  002430  ECB7  F012         	call	_IdleI2C	;wreg free
  2529                           
  2530                           ;ADXL345.c: 63: unsigned char c = ReadI2C();
  2531  002434  EC93  F012         	call	_ReadI2C	;wreg free
  2532  002438  6E16               	movwf	readACC@c,c
  2533                           
  2534                           ;ADXL345.c: 64: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  2535  00243A  8AC5               	bsf	4037,5,c	;volatile
  2536  00243C  88C5               	bsf	4037,4,c	;volatile
  2537  00243E                     l87:
  2538  00243E  B8C5               	btfsc	4037,4,c	;volatile
  2539  002440  D7FE               	goto	l87
  2540                           
  2541                           ;ADXL345.c: 65: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  2542  002442  84C5               	bsf	4037,2,c	;volatile
  2543  002444                     l90:
  2544  002444  B4C5               	btfsc	4037,2,c	;volatile
  2545  002446  D7FE               	goto	l90
  2546                           
  2547                           ;ADXL345.c: 66: return c;
  2548  002448  5016               	movf	readACC@c,w,c
  2549  00244A  0012               	return	
  2550  00244C                     __end_of_readACC:
  2551                           	opt stack 0
  2552                           tblptru	equ	0xFF8
  2553                           tblptrh	equ	0xFF7
  2554                           tblptrl	equ	0xFF6
  2555                           tablat	equ	0xFF5
  2556                           postinc0	equ	0xFEE
  2557                           wreg	equ	0xFE8
  2558                           postdec1	equ	0xFE5
  2559                           fsr1l	equ	0xFE1
  2560                           status	equ	0xFD8
  2561                           
  2562 ;; *************** function _WriteI2C *****************
  2563 ;; Defined at:
  2564 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_writ.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  data_out        1    wreg     unsigned char 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  data_out        1   19[COMRAM] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      char 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2578 ;;      Params:         0       0       0       0       0       0       0       0       0
  2579 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2581 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2582 ;;Total ram usage:        1 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    5
  2585 ;; This function calls:
  2586 ;;		_IdleI2C
  2587 ;; This function is called by:
  2588 ;;		_readACC
  2589 ;;		_readGIRO
  2590 ;;		_initI2C
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text3
  2595  002378                     __ptext3:
  2596                           	opt stack 0
  2597  002378                     _WriteI2C:
  2598                           	opt stack 24
  2599                           
  2600                           ;incstack = 0
  2601                           ;WriteI2C@data_out stored from wreg
  2602  002378  6E14               	movwf	WriteI2C@data_out,c
  2603  00237A  C014  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  2604  00237E  BEC6               	btfsc	4038,7,c	;volatile
  2605  002380  0012               	return	
  2606                           
  2607                           ;	Return value of _WriteI2C is never used
  2608  002382  50C6               	movf	4038,w,c	;volatile
  2609  002384  0B0F               	andlw	15
  2610  002386  0A08               	xorlw	8
  2611  002388  B4D8               	btfsc	status,2,c
  2612  00238A  D00C               	goto	l3655
  2613  00238C  50C6               	movf	4038,w,c	;volatile
  2614  00238E  0B0F               	andlw	15
  2615  002390  0A0B               	xorlw	11
  2616  002392  B4D8               	btfsc	status,2,c
  2617  002394  D007               	goto	l3655
  2618  002396  88C6               	bsf	4038,4,c	;volatile
  2619  002398                     l690:
  2620  002398  A69E               	btfss	3998,3,c	;volatile
  2621  00239A  D7FE               	goto	l690
  2622  00239C  B4C7               	btfsc	4039,2,c	;volatile
  2623  00239E  0012               	return	
  2624  0023A0  50C7               	movf	4039,w,c	;volatile
  2625                           
  2626                           ;	Return value of _WriteI2C is never used
  2627                           
  2628                           ;	Return value of _WriteI2C is never used
  2629  0023A2  0012               	return	
  2630  0023A4                     l3655:
  2631  0023A4  50C6               	movf	4038,w,c	;volatile
  2632  0023A6  0B0F               	andlw	15
  2633  0023A8  0A08               	xorlw	8
  2634  0023AA  B4D8               	btfsc	status,2,c
  2635  0023AC  D005               	goto	l699
  2636  0023AE  50C6               	movf	4038,w,c	;volatile
  2637  0023B0  0B0F               	andlw	15
  2638  0023B2  0A0B               	xorlw	11
  2639  0023B4  A4D8               	btfss	status,2,c
  2640  0023B6  0012               	return	
  2641  0023B8                     l699:
  2642  0023B8  B0C7               	btfsc	4039,0,c	;volatile
  2643  0023BA  D7FE               	goto	l699
  2644  0023BC  ECB7  F012         	call	_IdleI2C	;wreg free
  2645  0023C0  50C5               	movf	4037,w,c	;volatile
  2646                           
  2647                           ;	Return value of _WriteI2C is never used
  2648                           
  2649                           ;	Return value of _WriteI2C is never used
  2650  0023C2  0012               	return	
  2651  0023C4                     __end_of_WriteI2C:
  2652                           	opt stack 0
  2653                           tblptru	equ	0xFF8
  2654                           tblptrh	equ	0xFF7
  2655                           tblptrl	equ	0xFF6
  2656                           tablat	equ	0xFF5
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           postdec1	equ	0xFE5
  2660                           fsr1l	equ	0xFE1
  2661                           status	equ	0xFD8
  2662                           
  2663 ;; *************** function _IdleI2C *****************
  2664 ;; Defined at:
  2665 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_idle.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;		None
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2679 ;;      Params:         0       0       0       0       0       0       0       0       0
  2680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2681 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2682 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2683 ;;Total ram usage:        1 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    4
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_readACC
  2690 ;;		_readGIRO
  2691 ;;		_WriteI2C
  2692 ;;		_initI2C
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text4
  2697  00256E                     __ptext4:
  2698                           	opt stack 0
  2699  00256E                     _IdleI2C:
  2700                           	opt stack 24
  2701  00256E                     l3595:
  2702  00256E  CFC5 F013          	movff	4037,??_IdleI2C	;volatile
  2703  002572  0E1F               	movlw	31
  2704  002574  1613               	andwf	??_IdleI2C,f,c
  2705  002576  A4D8               	btfss	status,2,c
  2706  002578  D7FA               	goto	l3595
  2707  00257A  A4C7               	btfss	4039,2,c	;volatile
  2708  00257C  0012               	return	
  2709  00257E  D7F7               	goto	l3595
  2710  002580                     __end_of_IdleI2C:
  2711                           	opt stack 0
  2712                           tblptru	equ	0xFF8
  2713                           tblptrh	equ	0xFF7
  2714                           tblptrl	equ	0xFF6
  2715                           tablat	equ	0xFF5
  2716                           postinc0	equ	0xFEE
  2717                           wreg	equ	0xFE8
  2718                           postdec1	equ	0xFE5
  2719                           fsr1l	equ	0xFE1
  2720                           status	equ	0xFD8
  2721                           
  2722 ;; *************** function _ReadI2C *****************
  2723 ;; Defined at:
  2724 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\i2c\i2c_read.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  1    wreg      unsigned char 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2738 ;;      Params:         0       0       0       0       0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    4
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_readACC
  2749 ;;		_readGIRO
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text5
  2754  002526                     __ptext5:
  2755                           	opt stack 0
  2756  002526                     _ReadI2C:
  2757                           	opt stack 25
  2758                           
  2759                           ;incstack = 0
  2760  002526  50C6               	movf	4038,w,c	;volatile
  2761  002528  0B0F               	andlw	15
  2762  00252A  0A08               	xorlw	8
  2763  00252C  B4D8               	btfsc	status,2,c
  2764  00252E  D004               	goto	l665
  2765  002530  50C6               	movf	4038,w,c	;volatile
  2766  002532  0B0F               	andlw	15
  2767  002534  0A0B               	xorlw	11
  2768  002536  B4D8               	btfsc	status,2,c
  2769  002538                     l665:
  2770  002538  86C5               	bsf	4037,3,c	;volatile
  2771  00253A                     l666:
  2772  00253A  A0C7               	btfss	4039,0,c	;volatile
  2773  00253C  D7FE               	goto	l666
  2774  00253E  50C9               	movf	4041,w,c	;volatile
  2775  002540  0012               	return	
  2776  002542                     __end_of_ReadI2C:
  2777                           	opt stack 0
  2778                           tblptru	equ	0xFF8
  2779                           tblptrh	equ	0xFF7
  2780                           tblptrl	equ	0xFF6
  2781                           tablat	equ	0xFF5
  2782                           postinc0	equ	0xFEE
  2783                           wreg	equ	0xFE8
  2784                           postdec1	equ	0xFE5
  2785                           fsr1l	equ	0xFE1
  2786                           status	equ	0xFD8
  2787                           
  2788 ;; *************** function _initUART *****************
  2789 ;; Defined at:
  2790 ;;		line 18 in file "Serial.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2804 ;;      Params:         0       0       0       0       0       0       0       0       0
  2805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2807 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2808 ;;Total ram usage:        0 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    4
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text6
  2819  002484                     __ptext6:
  2820                           	opt stack 0
  2821  002484                     _initUART:
  2822                           	opt stack 26
  2823                           
  2824                           ;Serial.c: 20: TRISCbits.TRISC7 = 1; TRISCbits.TRISC6 = 0;
  2825                           
  2826                           ;incstack = 0
  2827  002484  8E94               	bsf	3988,7,c	;volatile
  2828  002486  9C94               	bcf	3988,6,c	;volatile
  2829                           
  2830                           ;Serial.c: 22: SPBRG = (unsigned char) (48000000/(16*115200) - 1);
  2831  002488  0E19               	movlw	25
  2832  00248A  6EAF               	movwf	4015,c	;volatile
  2833                           
  2834                           ;Serial.c: 23: SPBRGH = (unsigned char) (48000000/(16*115200) - 1);
  2835  00248C  0E19               	movlw	25
  2836  00248E  6EB0               	movwf	4016,c	;volatile
  2837                           
  2838                           ;Serial.c: 25: CSRC = 0; TX9 = 0; TXEN = 1;
  2839  002490  9EAC               	bcf	4012,7,c	;volatile
  2840  002492  9CAC               	bcf	4012,6,c	;volatile
  2841  002494  8AAC               	bsf	4012,5,c	;volatile
  2842                           
  2843                           ;Serial.c: 26: SYNC = 0; SENDB = 0; BRGH = 1;
  2844  002496  98AC               	bcf	4012,4,c	;volatile
  2845  002498  96AC               	bcf	4012,3,c	;volatile
  2846  00249A  84AC               	bsf	4012,2,c	;volatile
  2847                           
  2848                           ;Serial.c: 27: TRMT = 0; TX9D = 0; SPEN = 1;
  2849  00249C  92AC               	bcf	4012,1,c	;volatile
  2850  00249E  90AC               	bcf	4012,0,c	;volatile
  2851  0024A0  8EAB               	bsf	4011,7,c	;volatile
  2852                           
  2853                           ;Serial.c: 28: RX9 = 0; SREN = 0; CREN = 1;
  2854  0024A2  9CAB               	bcf	4011,6,c	;volatile
  2855  0024A4  9AAB               	bcf	4011,5,c	;volatile
  2856  0024A6  88AB               	bsf	4011,4,c	;volatile
  2857                           
  2858                           ;Serial.c: 29: ADDEN = 0; FERR = 0; OERR = 0;
  2859  0024A8  96AB               	bcf	4011,3,c	;volatile
  2860  0024AA  94AB               	bcf	4011,2,c	;volatile
  2861  0024AC  92AB               	bcf	4011,1,c	;volatile
  2862                           
  2863                           ;Serial.c: 30: RX9D = 0; TXIE = 0; RCIE = 1;
  2864  0024AE  90AB               	bcf	4011,0,c	;volatile
  2865  0024B0  989D               	bcf	3997,4,c	;volatile
  2866  0024B2  8A9D               	bsf	3997,5,c	;volatile
  2867  0024B4  0012               	return	
  2868  0024B6                     __end_of_initUART:
  2869                           	opt stack 0
  2870                           tblptru	equ	0xFF8
  2871                           tblptrh	equ	0xFF7
  2872                           tblptrl	equ	0xFF6
  2873                           tablat	equ	0xFF5
  2874                           postinc0	equ	0xFEE
  2875                           wreg	equ	0xFE8
  2876                           postdec1	equ	0xFE5
  2877                           fsr1l	equ	0xFE1
  2878                           status	equ	0xFD8
  2879                           
  2880 ;; *************** function _delayMS *****************
  2881 ;; Defined at:
  2882 ;;		line 11 in file "Serial.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  waitTime        2   18[COMRAM] unsigned int 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  j               2   21[COMRAM] unsigned int 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2896 ;;      Params:         2       0       0       0       0       0       0       0       0
  2897 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2898 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2899 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2900 ;;Total ram usage:        5 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; Hardware stack levels required when called:    4
  2903 ;; This function calls:
  2904 ;;		Nothing
  2905 ;; This function is called by:
  2906 ;;		_main
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text7
  2911  0024B6                     __ptext7:
  2912                           	opt stack 0
  2913  0024B6                     _delayMS:
  2914                           	opt stack 26
  2915                           
  2916                           ;Serial.c: 13: for(unsigned j = 0; j < waitTime; ++j)
  2917                           
  2918                           ;incstack = 0
  2919  0024B6  0E00               	movlw	0
  2920  0024B8  6E17               	movwf	delayMS@j+1,c
  2921  0024BA  0E00               	movlw	0
  2922  0024BC  6E16               	movwf	delayMS@j,c
  2923  0024BE  D00A               	goto	l363
  2924  0024C0                     l3895:
  2925                           
  2926                           ;Serial.c: 14: _delay((unsigned long)((1)*(48000000/4000.0)));
  2927  0024C0  0E10               	movlw	16
  2928  0024C2  6E15               	movwf	??_delayMS& (0+255),c
  2929  0024C4  0E94               	movlw	148
  2930  0024C6                     u4497:
  2931  0024C6  2EE8               	decfsz	wreg,f,c
  2932  0024C8  D7FE               	goto	u4497
  2933  0024CA  2E15               	decfsz	??_delayMS& (0+255),f,c
  2934  0024CC  D7FC               	goto	u4497
  2935  0024CE  D000               	nop2	
  2936  0024D0  4A16               	infsnz	delayMS@j,f,c
  2937  0024D2  2A17               	incf	delayMS@j+1,f,c
  2938  0024D4                     l363:
  2939  0024D4  5013               	movf	delayMS@waitTime,w,c
  2940  0024D6  5C16               	subwf	delayMS@j,w,c
  2941  0024D8  5014               	movf	delayMS@waitTime+1,w,c
  2942  0024DA  5817               	subwfb	delayMS@j+1,w,c
  2943  0024DC  B0D8               	btfsc	status,0,c
  2944  0024DE  0012               	return	
  2945  0024E0  D7EF               	goto	l3895
  2946  0024E2                     __end_of_delayMS:
  2947                           	opt stack 0
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           postinc0	equ	0xFEE
  2953                           wreg	equ	0xFE8
  2954                           postdec1	equ	0xFE5
  2955                           fsr1l	equ	0xFE1
  2956                           status	equ	0xFD8
  2957                           
  2958 ;; *************** function ___fttol *****************
  2959 ;; Defined at:
  2960 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  f1              3   18[COMRAM] float 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  lval            4   28[COMRAM] unsigned long 
  2965 ;;  exp1            1   32[COMRAM] unsigned char 
  2966 ;;  sign1           1   27[COMRAM] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  4   18[COMRAM] long 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2976 ;;      Params:         4       0       0       0       0       0       0       0       0
  2977 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2978 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2979 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2980 ;;Total ram usage:       15 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    4
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_main
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text8
  2991  001E76                     __ptext8:
  2992                           	opt stack 0
  2993  001E76                     ___fttol:
  2994                           	opt stack 26
  2995                           
  2996                           ;incstack = 0
  2997  001E76  C015  F017         	movff	___fttol@f1+2,??___fttol
  2998  001E7A  6A18               	clrf	(??___fttol+1)& (0+255),c
  2999  001E7C  6A19               	clrf	(??___fttol+2)& (0+255),c
  3000  001E7E  3414               	rlcf	___fttol@f1+1,w,c
  3001  001E80  3617               	rlcf	??___fttol& (0+255),f,c
  3002  001E82  E301               	bnc	u4091
  3003  001E84  8018               	bsf	(??___fttol+1)& (0+255),0,c
  3004  001E86                     u4091:
  3005  001E86  5017               	movf	??___fttol,w,c
  3006  001E88  6E21               	movwf	___fttol@exp1,c
  3007  001E8A  5021               	movf	___fttol@exp1,w,c
  3008  001E8C  A4D8               	btfss	status,2,c
  3009  001E8E  D009               	goto	l4035
  3010  001E90  0E00               	movlw	0
  3011  001E92  6E13               	movwf	?___fttol,c
  3012  001E94  0E00               	movlw	0
  3013  001E96  6E14               	movwf	?___fttol+1,c
  3014  001E98  0E00               	movlw	0
  3015  001E9A  6E15               	movwf	?___fttol+2,c
  3016  001E9C  0E00               	movlw	0
  3017  001E9E  6E16               	movwf	?___fttol+3,c
  3018  001EA0  0012               	return	
  3019  001EA2                     l4035:
  3020  001EA2  0E17               	movlw	23
  3021  001EA4  6E17               	movwf	??___fttol& (0+255),c
  3022  001EA6  C013  F018         	movff	___fttol@f1,??___fttol+1
  3023  001EAA  C014  F019         	movff	___fttol@f1+1,??___fttol+2
  3024  001EAE  C015  F01A         	movff	___fttol@f1+2,??___fttol+3
  3025  001EB2  2817               	incf	??___fttol,w,c
  3026  001EB4  6E1B               	movwf	(??___fttol+4)& (0+255),c
  3027  001EB6  D004               	goto	u4110
  3028  001EB8                     u4115:
  3029  001EB8  90D8               	bcf	status,0,c
  3030  001EBA  321A               	rrcf	??___fttol+3,f,c
  3031  001EBC  3219               	rrcf	??___fttol+2,f,c
  3032  001EBE  3218               	rrcf	??___fttol+1,f,c
  3033  001EC0                     u4110:
  3034  001EC0  2E1B               	decfsz	(??___fttol+4)& (0+255),f,c
  3035  001EC2  D7FA               	goto	u4115
  3036  001EC4  5018               	movf	??___fttol+1,w,c
  3037  001EC6  6E1C               	movwf	___fttol@sign1,c
  3038  001EC8  8E14               	bsf	___fttol@f1+1,7,c
  3039  001ECA  0EFF               	movlw	255
  3040  001ECC  1613               	andwf	___fttol@f1,f,c
  3041  001ECE  0EFF               	movlw	255
  3042  001ED0  1614               	andwf	___fttol@f1+1,f,c
  3043  001ED2  0E00               	movlw	0
  3044  001ED4  1615               	andwf	___fttol@f1+2,f,c
  3045  001ED6  5013               	movf	___fttol@f1,w,c
  3046  001ED8  6E1D               	movwf	___fttol@lval,c
  3047  001EDA  5014               	movf	___fttol@f1+1,w,c
  3048  001EDC  6E1E               	movwf	___fttol@lval+1,c
  3049  001EDE  5015               	movf	___fttol@f1+2,w,c
  3050  001EE0  6E1F               	movwf	___fttol@lval+2,c
  3051  001EE2  6A20               	clrf	___fttol@lval+3,c
  3052  001EE4  0E8E               	movlw	142
  3053  001EE6  5E21               	subwf	___fttol@exp1,f,c
  3054  001EE8  AE21               	btfss	___fttol@exp1,7,c
  3055  001EEA  D016               	goto	l4057
  3056  001EEC  5021               	movf	___fttol@exp1,w,c
  3057  001EEE  0A80               	xorlw	128
  3058  001EF0  0F8F               	addlw	143
  3059  001EF2  B0D8               	btfsc	status,0,c
  3060  001EF4  D009               	goto	l4053
  3061  001EF6  0E00               	movlw	0
  3062  001EF8  6E13               	movwf	?___fttol,c
  3063  001EFA  0E00               	movlw	0
  3064  001EFC  6E14               	movwf	?___fttol+1,c
  3065  001EFE  0E00               	movlw	0
  3066  001F00  6E15               	movwf	?___fttol+2,c
  3067  001F02  0E00               	movlw	0
  3068  001F04  6E16               	movwf	?___fttol+3,c
  3069  001F06  0012               	return	
  3070  001F08                     l4053:
  3071  001F08  90D8               	bcf	status,0,c
  3072  001F0A  3220               	rrcf	___fttol@lval+3,f,c
  3073  001F0C  321F               	rrcf	___fttol@lval+2,f,c
  3074  001F0E  321E               	rrcf	___fttol@lval+1,f,c
  3075  001F10  321D               	rrcf	___fttol@lval,f,c
  3076  001F12  3E21               	incfsz	___fttol@exp1,f,c
  3077  001F14  D7F9               	goto	l4053
  3078  001F16  D015               	goto	l4067
  3079  001F18                     l4057:
  3080  001F18  0E17               	movlw	23
  3081  001F1A  6421               	cpfsgt	___fttol@exp1,c
  3082  001F1C  D00F               	goto	l4065
  3083  001F1E  0E00               	movlw	0
  3084  001F20  6E13               	movwf	?___fttol,c
  3085  001F22  0E00               	movlw	0
  3086  001F24  6E14               	movwf	?___fttol+1,c
  3087  001F26  0E00               	movlw	0
  3088  001F28  6E15               	movwf	?___fttol+2,c
  3089  001F2A  0E00               	movlw	0
  3090  001F2C  6E16               	movwf	?___fttol+3,c
  3091  001F2E  0012               	return	
  3092  001F30                     l4063:
  3093  001F30  90D8               	bcf	status,0,c
  3094  001F32  361D               	rlcf	___fttol@lval,f,c
  3095  001F34  361E               	rlcf	___fttol@lval+1,f,c
  3096  001F36  361F               	rlcf	___fttol@lval+2,f,c
  3097  001F38  3620               	rlcf	___fttol@lval+3,f,c
  3098  001F3A  0621               	decf	___fttol@exp1,f,c
  3099  001F3C                     l4065:
  3100  001F3C  5021               	movf	___fttol@exp1,w,c
  3101  001F3E  A4D8               	btfss	status,2,c
  3102  001F40  D7F7               	goto	l4063
  3103  001F42                     l4067:
  3104  001F42  501C               	movf	___fttol@sign1,w,c
  3105  001F44  B4D8               	btfsc	status,2,c
  3106  001F46  D008               	goto	l4071
  3107  001F48  1E20               	comf	___fttol@lval+3,f,c
  3108  001F4A  1E1F               	comf	___fttol@lval+2,f,c
  3109  001F4C  1E1E               	comf	___fttol@lval+1,f,c
  3110  001F4E  6C1D               	negf	___fttol@lval,c
  3111  001F50  0E00               	movlw	0
  3112  001F52  221E               	addwfc	___fttol@lval+1,f,c
  3113  001F54  221F               	addwfc	___fttol@lval+2,f,c
  3114  001F56  2220               	addwfc	___fttol@lval+3,f,c
  3115  001F58                     l4071:
  3116  001F58  C01D  F013         	movff	___fttol@lval,?___fttol
  3117  001F5C  C01E  F014         	movff	___fttol@lval+1,?___fttol+1
  3118  001F60  C01F  F015         	movff	___fttol@lval+2,?___fttol+2
  3119  001F64  C020  F016         	movff	___fttol@lval+3,?___fttol+3
  3120  001F68  0012               	return	
  3121  001F6A                     __end_of___fttol:
  3122                           	opt stack 0
  3123                           tblptru	equ	0xFF8
  3124                           tblptrh	equ	0xFF7
  3125                           tblptrl	equ	0xFF6
  3126                           tablat	equ	0xFF5
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           postdec1	equ	0xFE5
  3130                           fsr1l	equ	0xFE1
  3131                           status	equ	0xFD8
  3132                           
  3133 ;; *************** function ___awtoft *****************
  3134 ;; Defined at:
  3135 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awtoft.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  c               2   30[COMRAM] int 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  sign            1   33[COMRAM] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  3   30[COMRAM] float 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3149 ;;      Params:         3       0       0       0       0       0       0       0       0
  3150 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3152 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3153 ;;Total ram usage:        4 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    5
  3156 ;; This function calls:
  3157 ;;		___ftpack
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;;		_readAccelGiroValues
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text9
  3165  00244C                     __ptext9:
  3166                           	opt stack 0
  3167  00244C                     ___awtoft:
  3168                           	opt stack 25
  3169                           
  3170                           ;incstack = 0
  3171  00244C  0E00               	movlw	0
  3172  00244E  6E22               	movwf	___awtoft@sign,c
  3173  002450  AE20               	btfss	___awtoft@c+1,7,c
  3174  002452  D006               	goto	l4025
  3175  002454  6C1F               	negf	___awtoft@c,c
  3176  002456  1E20               	comf	___awtoft@c+1,f,c
  3177  002458  B0D8               	btfsc	status,0,c
  3178  00245A  2A20               	incf	___awtoft@c+1,f,c
  3179  00245C  0E01               	movlw	1
  3180  00245E  6E22               	movwf	___awtoft@sign,c
  3181  002460                     l4025:
  3182  002460  C01F  F013         	movff	___awtoft@c,___ftpack@arg
  3183  002464  C020  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  3184  002468  6A15               	clrf	___ftpack@arg+2,c
  3185  00246A  0E8E               	movlw	142
  3186  00246C  6E16               	movwf	___ftpack@exp,c
  3187  00246E  C022  F017         	movff	___awtoft@sign,___ftpack@sign
  3188  002472  ECB5  F00F         	call	___ftpack	;wreg free
  3189  002476  C013  F01F         	movff	?___ftpack,?___awtoft
  3190  00247A  C014  F020         	movff	?___ftpack+1,?___awtoft+1
  3191  00247E  C015  F021         	movff	?___ftpack+2,?___awtoft+2
  3192  002482  0012               	return	
  3193  002484                     __end_of___awtoft:
  3194                           	opt stack 0
  3195                           tblptru	equ	0xFF8
  3196                           tblptrh	equ	0xFF7
  3197                           tblptrl	equ	0xFF6
  3198                           tablat	equ	0xFF5
  3199                           postinc0	equ	0xFEE
  3200                           wreg	equ	0xFE8
  3201                           postdec1	equ	0xFE5
  3202                           fsr1l	equ	0xFE1
  3203                           status	equ	0xFD8
  3204                           
  3205 ;; *************** function ___awdiv *****************
  3206 ;; Defined at:
  3207 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  dividend        2   22[COMRAM] int 
  3210 ;;  divisor         2   24[COMRAM] int 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  quotient        2   28[COMRAM] int 
  3213 ;;  sign            1   27[COMRAM] unsigned char 
  3214 ;;  counter         1   26[COMRAM] unsigned char 
  3215 ;; Return value:  Size  Location     Type
  3216 ;;                  2   22[COMRAM] int 
  3217 ;; Registers used:
  3218 ;;		wreg, status,2, status,0
  3219 ;; Tracked objects:
  3220 ;;		On entry : 0/0
  3221 ;;		On exit  : 0/0
  3222 ;;		Unchanged: 0/0
  3223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3224 ;;      Params:         4       0       0       0       0       0       0       0       0
  3225 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3227 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3228 ;;Total ram usage:        8 bytes
  3229 ;; Hardware stack levels used:    1
  3230 ;; Hardware stack levels required when called:    4
  3231 ;; This function calls:
  3232 ;;		Nothing
  3233 ;; This function is called by:
  3234 ;;		_main
  3235 ;;		_readAccelGiroValues
  3236 ;;		_scaleChange
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text10
  3241  002156                     __ptext10:
  3242                           	opt stack 0
  3243  002156                     ___awdiv:
  3244                           	opt stack 26
  3245                           
  3246                           ;incstack = 0
  3247  002156  0E00               	movlw	0
  3248  002158  6E1C               	movwf	___awdiv@sign,c
  3249  00215A  AE1A               	btfss	___awdiv@divisor+1,7,c
  3250  00215C  D006               	goto	l3981
  3251  00215E  6C19               	negf	___awdiv@divisor,c
  3252  002160  1E1A               	comf	___awdiv@divisor+1,f,c
  3253  002162  B0D8               	btfsc	status,0,c
  3254  002164  2A1A               	incf	___awdiv@divisor+1,f,c
  3255  002166  0E01               	movlw	1
  3256  002168  6E1C               	movwf	___awdiv@sign,c
  3257  00216A                     l3981:
  3258  00216A  AE18               	btfss	___awdiv@dividend+1,7,c
  3259  00216C  D006               	goto	l3987
  3260  00216E  6C17               	negf	___awdiv@dividend,c
  3261  002170  1E18               	comf	___awdiv@dividend+1,f,c
  3262  002172  B0D8               	btfsc	status,0,c
  3263  002174  2A18               	incf	___awdiv@dividend+1,f,c
  3264  002176  0E01               	movlw	1
  3265  002178  1A1C               	xorwf	___awdiv@sign,f,c
  3266  00217A                     l3987:
  3267  00217A  0E00               	movlw	0
  3268  00217C  6E1E               	movwf	___awdiv@quotient+1,c
  3269  00217E  0E00               	movlw	0
  3270  002180  6E1D               	movwf	___awdiv@quotient,c
  3271  002182  5019               	movf	___awdiv@divisor,w,c
  3272  002184  101A               	iorwf	___awdiv@divisor+1,w,c
  3273  002186  B4D8               	btfsc	status,2,c
  3274  002188  D01C               	goto	l4009
  3275  00218A  0E01               	movlw	1
  3276  00218C  6E1B               	movwf	___awdiv@counter,c
  3277  00218E  D004               	goto	l3995
  3278  002190                     l3993:
  3279  002190  90D8               	bcf	status,0,c
  3280  002192  3619               	rlcf	___awdiv@divisor,f,c
  3281  002194  361A               	rlcf	___awdiv@divisor+1,f,c
  3282  002196  2A1B               	incf	___awdiv@counter,f,c
  3283  002198                     l3995:
  3284  002198  AE1A               	btfss	___awdiv@divisor+1,7,c
  3285  00219A  D7FA               	goto	l3993
  3286  00219C                     l3997:
  3287  00219C  90D8               	bcf	status,0,c
  3288  00219E  361D               	rlcf	___awdiv@quotient,f,c
  3289  0021A0  361E               	rlcf	___awdiv@quotient+1,f,c
  3290  0021A2  5019               	movf	___awdiv@divisor,w,c
  3291  0021A4  5C17               	subwf	___awdiv@dividend,w,c
  3292  0021A6  501A               	movf	___awdiv@divisor+1,w,c
  3293  0021A8  5818               	subwfb	___awdiv@dividend+1,w,c
  3294  0021AA  A0D8               	btfss	status,0,c
  3295  0021AC  D005               	goto	l4005
  3296  0021AE  5019               	movf	___awdiv@divisor,w,c
  3297  0021B0  5E17               	subwf	___awdiv@dividend,f,c
  3298  0021B2  501A               	movf	___awdiv@divisor+1,w,c
  3299  0021B4  5A18               	subwfb	___awdiv@dividend+1,f,c
  3300  0021B6  801D               	bsf	___awdiv@quotient,0,c
  3301  0021B8                     l4005:
  3302  0021B8  90D8               	bcf	status,0,c
  3303  0021BA  321A               	rrcf	___awdiv@divisor+1,f,c
  3304  0021BC  3219               	rrcf	___awdiv@divisor,f,c
  3305  0021BE  2E1B               	decfsz	___awdiv@counter,f,c
  3306  0021C0  D7ED               	goto	l3997
  3307  0021C2                     l4009:
  3308  0021C2  501C               	movf	___awdiv@sign,w,c
  3309  0021C4  B4D8               	btfsc	status,2,c
  3310  0021C6  D004               	goto	l4013
  3311  0021C8  6C1D               	negf	___awdiv@quotient,c
  3312  0021CA  1E1E               	comf	___awdiv@quotient+1,f,c
  3313  0021CC  B0D8               	btfsc	status,0,c
  3314  0021CE  2A1E               	incf	___awdiv@quotient+1,f,c
  3315  0021D0                     l4013:
  3316  0021D0  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  3317  0021D4  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  3318  0021D8  0012               	return	
  3319  0021DA                     __end_of___awdiv:
  3320                           	opt stack 0
  3321                           tblptru	equ	0xFF8
  3322                           tblptrh	equ	0xFF7
  3323                           tblptrl	equ	0xFF6
  3324                           tablat	equ	0xFF5
  3325                           postinc0	equ	0xFEE
  3326                           wreg	equ	0xFE8
  3327                           postdec1	equ	0xFE5
  3328                           fsr1l	equ	0xFE1
  3329                           status	equ	0xFD8
  3330                           
  3331 ;; *************** function _PWM_Init *****************
  3332 ;; Defined at:
  3333 ;;		line 4 in file "PWM.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3347 ;;      Params:         0       0       0       0       0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    4
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text11
  3362  002542                     __ptext11:
  3363                           	opt stack 0
  3364  002542                     _PWM_Init:
  3365                           	opt stack 26
  3366                           
  3367                           ;PWM.c: 5: INTCON = 0xA0;
  3368                           
  3369                           ;incstack = 0
  3370  002542  0EA0               	movlw	160
  3371  002544  6EF2               	movwf	intcon,c	;volatile
  3372                           
  3373                           ;PWM.c: 8: T0CON = 0xC1;
  3374  002546  0EC1               	movlw	193
  3375  002548  6ED5               	movwf	4053,c	;volatile
  3376                           
  3377                           ;PWM.c: 13: TRISB = 0x03;
  3378  00254A  0E03               	movlw	3
  3379  00254C  6E93               	movwf	3987,c	;volatile
  3380                           
  3381                           ;PWM.c: 14: LATB = 0x03;
  3382  00254E  0E03               	movlw	3
  3383  002550  6E8A               	movwf	3978,c	;volatile
  3384                           
  3385                           ;PWM.c: 15: TMR0L = freq;
  3386  002552  C047  FFD6         	movff	_freq,4054	;volatile
  3387  002556  0012               	return	
  3388  002558                     __end_of_PWM_Init:
  3389                           	opt stack 0
  3390                           tblptru	equ	0xFF8
  3391                           tblptrh	equ	0xFF7
  3392                           tblptrl	equ	0xFF6
  3393                           tablat	equ	0xFF5
  3394                           intcon	equ	0xFF2
  3395                           postinc0	equ	0xFEE
  3396                           wreg	equ	0xFE8
  3397                           postdec1	equ	0xFE5
  3398                           fsr1l	equ	0xFE1
  3399                           status	equ	0xFD8
  3400                           
  3401 ;; *************** function _PID_outputControlCalc *****************
  3402 ;; Defined at:
  3403 ;;		line 3 in file "PID.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;  reference       3   18[BANK0 ] float 
  3406 ;;  systemOutput    3   21[BANK0 ] float 
  3407 ;;  whichPID        1   24[BANK0 ] unsigned char 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3419 ;;      Params:         0       7       0       0       0       0       0       0       0
  3420 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3421 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3422 ;;      Totals:         0      12       0       0       0       0       0       0       0
  3423 ;;Total ram usage:       12 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    6
  3426 ;; This function calls:
  3427 ;;		___ftadd
  3428 ;;		___ftdiv
  3429 ;;		___ftge
  3430 ;;		___ftmul
  3431 ;;		___ftneg
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           	psect	text12
  3438  001524                     __ptext12:
  3439                           	opt stack 0
  3440  001524                     _PID_outputControlCalc:
  3441                           	opt stack 24
  3442                           
  3443                           ;PID.c: 5: pid[whichPID].error = reference - systemOutput;
  3444                           
  3445                           ;incstack = 0
  3446  001524  C0D2  F01B         	movff	PID_outputControlCalc@systemOutput,___ftneg@f1
  3447  001528  C0D3  F01C         	movff	PID_outputControlCalc@systemOutput+1,___ftneg@f1+1
  3448  00152C  C0D4  F01D         	movff	PID_outputControlCalc@systemOutput+2,___ftneg@f1+2
  3449  001530  EC71  F012         	call	___ftneg	;wreg free
  3450  001534  C01B  F023         	movff	?___ftneg,___ftadd@f1
  3451  001538  C01C  F024         	movff	?___ftneg+1,___ftadd@f1+1
  3452  00153C  C01D  F025         	movff	?___ftneg+2,___ftadd@f1+2
  3453  001540  C0CF  F026         	movff	PID_outputControlCalc@reference,___ftadd@f2
  3454  001544  C0D0  F027         	movff	PID_outputControlCalc@reference+1,___ftadd@f2+1
  3455  001548  C0D1  F028         	movff	PID_outputControlCalc@reference+2,___ftadd@f2+2
  3456  00154C  EC35  F00D         	call	___ftadd	;wreg free
  3457  001550  0100               	movlb	0	; () banked
  3458  001552  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3459  001554  0D25               	mullw	37
  3460  001556  0E09               	movlw	9
  3461  001558  26F3               	addwf	prodl,f,c
  3462  00155A  0E00               	movlw	0
  3463  00155C  22F4               	addwfc	prodh,f,c
  3464  00155E  0E00               	movlw	low _pid
  3465  001560  24F3               	addwf	prodl,w,c
  3466  001562  6ED9               	movwf	fsr2l,c
  3467  001564  0E01               	movlw	high _pid
  3468  001566  20F4               	addwfc	prodh,w,c
  3469  001568  6EDA               	movwf	fsr2h,c
  3470  00156A  C023  FFDE         	movff	?___ftadd,postinc2
  3471  00156E  C024  FFDE         	movff	?___ftadd+1,postinc2
  3472  001572  C025  FFDE         	movff	?___ftadd+2,postinc2
  3473                           
  3474                           ;PID.c: 8: pid[whichPID].dError = ((pid[whichPID].error - pid[whichPID].aError)/pid[whic
      +                          hPID].step);
  3475  001576  0100               	movlb	0	; () banked
  3476  001578  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3477  00157A  0D25               	mullw	37
  3478  00157C  0E09               	movlw	9
  3479  00157E  26F3               	addwf	prodl,f,c
  3480  001580  0E00               	movlw	0
  3481  001582  22F4               	addwfc	prodh,f,c
  3482  001584  0E00               	movlw	low _pid
  3483  001586  24F3               	addwf	prodl,w,c
  3484  001588  6ED9               	movwf	fsr2l,c
  3485  00158A  0E01               	movlw	high _pid
  3486  00158C  20F4               	addwfc	prodh,w,c
  3487  00158E  6EDA               	movwf	fsr2h,c
  3488  001590  CFDE F026          	movff	postinc2,___ftadd@f2
  3489  001594  CFDE F027          	movff	postinc2,___ftadd@f2+1
  3490  001598  CFDD F028          	movff	postdec2,___ftadd@f2+2
  3491  00159C  0100               	movlb	0	; () banked
  3492  00159E  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3493  0015A0  0D25               	mullw	37
  3494  0015A2  0E12               	movlw	18
  3495  0015A4  26F3               	addwf	prodl,f,c
  3496  0015A6  0E00               	movlw	0
  3497  0015A8  22F4               	addwfc	prodh,f,c
  3498  0015AA  0E00               	movlw	low _pid
  3499  0015AC  24F3               	addwf	prodl,w,c
  3500  0015AE  6ED9               	movwf	fsr2l,c
  3501  0015B0  0E01               	movlw	high _pid
  3502  0015B2  20F4               	addwfc	prodh,w,c
  3503  0015B4  6EDA               	movwf	fsr2h,c
  3504  0015B6  CFDE F01B          	movff	postinc2,___ftneg@f1
  3505  0015BA  CFDE F01C          	movff	postinc2,___ftneg@f1+1
  3506  0015BE  CFDD F01D          	movff	postdec2,___ftneg@f1+2
  3507  0015C2  EC71  F012         	call	___ftneg	;wreg free
  3508  0015C6  C01B  F023         	movff	?___ftneg,___ftadd@f1
  3509  0015CA  C01C  F024         	movff	?___ftneg+1,___ftadd@f1+1
  3510  0015CE  C01D  F025         	movff	?___ftneg+2,___ftadd@f1+2
  3511  0015D2  EC35  F00D         	call	___ftadd	;wreg free
  3512  0015D6  C023  F0C3         	movff	?___ftadd,___ftdiv@f1
  3513  0015DA  C024  F0C4         	movff	?___ftadd+1,___ftdiv@f1+1
  3514  0015DE  C025  F0C5         	movff	?___ftadd+2,___ftdiv@f1+2
  3515  0015E2  0100               	movlb	0	; () banked
  3516  0015E4  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3517  0015E6  0D25               	mullw	37
  3518  0015E8  0E15               	movlw	21
  3519  0015EA  26F3               	addwf	prodl,f,c
  3520  0015EC  0E00               	movlw	0
  3521  0015EE  22F4               	addwfc	prodh,f,c
  3522  0015F0  0E00               	movlw	low _pid
  3523  0015F2  24F3               	addwf	prodl,w,c
  3524  0015F4  6ED9               	movwf	fsr2l,c
  3525  0015F6  0E01               	movlw	high _pid
  3526  0015F8  20F4               	addwfc	prodh,w,c
  3527  0015FA  6EDA               	movwf	fsr2h,c
  3528  0015FC  CFDE F0C6          	movff	postinc2,___ftdiv@f2
  3529  001600  CFDE F0C7          	movff	postinc2,___ftdiv@f2+1
  3530  001604  CFDD F0C8          	movff	postdec2,___ftdiv@f2+2
  3531  001608  EC0B  F00E         	call	___ftdiv	;wreg free
  3532  00160C  0100               	movlb	0	; () banked
  3533  00160E  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3534  001610  0D25               	mullw	37
  3535  001612  0E0C               	movlw	12
  3536  001614  26F3               	addwf	prodl,f,c
  3537  001616  0E00               	movlw	0
  3538  001618  22F4               	addwfc	prodh,f,c
  3539  00161A  0E00               	movlw	low _pid
  3540  00161C  24F3               	addwf	prodl,w,c
  3541  00161E  6ED9               	movwf	fsr2l,c
  3542  001620  0E01               	movlw	high _pid
  3543  001622  20F4               	addwfc	prodh,w,c
  3544  001624  6EDA               	movwf	fsr2h,c
  3545  001626  C0C3  FFDE         	movff	?___ftdiv,postinc2
  3546  00162A  C0C4  FFDE         	movff	?___ftdiv+1,postinc2
  3547  00162E  C0C5  FFDE         	movff	?___ftdiv+2,postinc2
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;PID.c: 9: pid[whichPID].aError = pid[whichPID].error;
  3551  001632  0100               	movlb	0	; () banked
  3552  001634  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3553  001636  0D25               	mullw	37
  3554  001638  0E09               	movlw	9
  3555  00163A  26F3               	addwf	prodl,f,c
  3556  00163C  0E00               	movlw	0
  3557  00163E  22F4               	addwfc	prodh,f,c
  3558  001640  0E00               	movlw	low _pid
  3559  001642  24F3               	addwf	prodl,w,c
  3560  001644  6ED9               	movwf	fsr2l,c
  3561  001646  0E01               	movlw	high _pid
  3562  001648  20F4               	addwfc	prodh,w,c
  3563  00164A  6EDA               	movwf	fsr2h,c
  3564  00164C  0100               	movlb	0	; () banked
  3565  00164E  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3566  001650  0D25               	mullw	37
  3567  001652  0E12               	movlw	18
  3568  001654  26F3               	addwf	prodl,f,c
  3569  001656  0E00               	movlw	0
  3570  001658  22F4               	addwfc	prodh,f,c
  3571  00165A  0E00               	movlw	low _pid
  3572  00165C  24F3               	addwf	prodl,w,c
  3573  00165E  6EE1               	movwf	fsr1l,c
  3574  001660  0E01               	movlw	high _pid
  3575  001662  20F4               	addwfc	prodh,w,c
  3576  001664  6EE2               	movwf	fsr1h,c
  3577  001666  CFDE FFE6          	movff	postinc2,postinc1
  3578  00166A  CFDE FFE6          	movff	postinc2,postinc1
  3579  00166E  CFDE FFE6          	movff	postinc2,postinc1
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;PID.c: 12: if(!pid[whichPID].checkUpLim && !pid[whichPID].checkLowLim)
  3583  001672  0100               	movlb	0	; () banked
  3584  001674  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3585  001676  0D25               	mullw	37
  3586  001678  0E21               	movlw	33
  3587  00167A  26F3               	addwf	prodl,f,c
  3588  00167C  0E00               	movlw	0
  3589  00167E  22F4               	addwfc	prodh,f,c
  3590  001680  0E00               	movlw	low _pid
  3591  001682  24F3               	addwf	prodl,w,c
  3592  001684  6ED9               	movwf	fsr2l,c
  3593  001686  0E01               	movlw	high _pid
  3594  001688  20F4               	addwfc	prodh,w,c
  3595  00168A  6EDA               	movwf	fsr2h,c
  3596  00168C  50DE               	movf	postinc2,w,c
  3597  00168E  10DE               	iorwf	postinc2,w,c
  3598  001690  A4D8               	btfss	status,2,c
  3599  001692  D067               	goto	l637
  3600                           
  3601                           ; BSR set to: 0
  3602  001694  0100               	movlb	0	; () banked
  3603  001696  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3604  001698  0D25               	mullw	37
  3605  00169A  0E23               	movlw	35
  3606  00169C  26F3               	addwf	prodl,f,c
  3607  00169E  0E00               	movlw	0
  3608  0016A0  22F4               	addwfc	prodh,f,c
  3609  0016A2  0E00               	movlw	low _pid
  3610  0016A4  24F3               	addwf	prodl,w,c
  3611  0016A6  6ED9               	movwf	fsr2l,c
  3612  0016A8  0E01               	movlw	high _pid
  3613  0016AA  20F4               	addwfc	prodh,w,c
  3614  0016AC  6EDA               	movwf	fsr2h,c
  3615  0016AE  50DE               	movf	postinc2,w,c
  3616  0016B0  10DE               	iorwf	postinc2,w,c
  3617  0016B2  A4D8               	btfss	status,2,c
  3618  0016B4  D056               	goto	l637
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;PID.c: 13: pid[whichPID].iError += pid[whichPID].error*pid[whichPID].step;
  3622  0016B6  0100               	movlb	0	; () banked
  3623  0016B8  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3624  0016BA  0D25               	mullw	37
  3625  0016BC  0E0F               	movlw	15
  3626  0016BE  26F3               	addwf	prodl,f,c
  3627  0016C0  0E00               	movlw	0
  3628  0016C2  22F4               	addwfc	prodh,f,c
  3629  0016C4  0E00               	movlw	low _pid
  3630  0016C6  24F3               	addwf	prodl,w,c
  3631  0016C8  6ED9               	movwf	fsr2l,c
  3632  0016CA  0E01               	movlw	high _pid
  3633  0016CC  20F4               	addwfc	prodh,w,c
  3634  0016CE  6EDA               	movwf	fsr2h,c
  3635  0016D0  CFDE F023          	movff	postinc2,___ftadd@f1
  3636  0016D4  CFDE F024          	movff	postinc2,___ftadd@f1+1
  3637  0016D8  CFDD F025          	movff	postdec2,___ftadd@f1+2
  3638  0016DC  0100               	movlb	0	; () banked
  3639  0016DE  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3640  0016E0  0D25               	mullw	37
  3641  0016E2  0E15               	movlw	21
  3642  0016E4  26F3               	addwf	prodl,f,c
  3643  0016E6  0E00               	movlw	0
  3644  0016E8  22F4               	addwfc	prodh,f,c
  3645  0016EA  0E00               	movlw	low _pid
  3646  0016EC  24F3               	addwf	prodl,w,c
  3647  0016EE  6ED9               	movwf	fsr2l,c
  3648  0016F0  0E01               	movlw	high _pid
  3649  0016F2  20F4               	addwfc	prodh,w,c
  3650  0016F4  6EDA               	movwf	fsr2h,c
  3651  0016F6  CFDE F032          	movff	postinc2,___ftmul@f2
  3652  0016FA  CFDE F033          	movff	postinc2,___ftmul@f2+1
  3653  0016FE  CFDD F034          	movff	postdec2,___ftmul@f2+2
  3654  001702  0100               	movlb	0	; () banked
  3655  001704  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3656  001706  0D25               	mullw	37
  3657  001708  0E09               	movlw	9
  3658  00170A  26F3               	addwf	prodl,f,c
  3659  00170C  0E00               	movlw	0
  3660  00170E  22F4               	addwfc	prodh,f,c
  3661  001710  0E00               	movlw	low _pid
  3662  001712  24F3               	addwf	prodl,w,c
  3663  001714  6ED9               	movwf	fsr2l,c
  3664  001716  0E01               	movlw	high _pid
  3665  001718  20F4               	addwfc	prodh,w,c
  3666  00171A  6EDA               	movwf	fsr2h,c
  3667  00171C  CFDE F02F          	movff	postinc2,___ftmul@f1
  3668  001720  CFDE F030          	movff	postinc2,___ftmul@f1+1
  3669  001724  CFDD F031          	movff	postdec2,___ftmul@f1+2
  3670  001728  ECAB  F00E         	call	___ftmul	;wreg free
  3671  00172C  C02F  F026         	movff	?___ftmul,___ftadd@f2
  3672  001730  C030  F027         	movff	?___ftmul+1,___ftadd@f2+1
  3673  001734  C031  F028         	movff	?___ftmul+2,___ftadd@f2+2
  3674  001738  EC35  F00D         	call	___ftadd	;wreg free
  3675  00173C  0100               	movlb	0	; () banked
  3676  00173E  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3677  001740  0D25               	mullw	37
  3678  001742  0E0F               	movlw	15
  3679  001744  26F3               	addwf	prodl,f,c
  3680  001746  0E00               	movlw	0
  3681  001748  22F4               	addwfc	prodh,f,c
  3682  00174A  0E00               	movlw	low _pid
  3683  00174C  24F3               	addwf	prodl,w,c
  3684  00174E  6ED9               	movwf	fsr2l,c
  3685  001750  0E01               	movlw	high _pid
  3686  001752  20F4               	addwfc	prodh,w,c
  3687  001754  6EDA               	movwf	fsr2h,c
  3688  001756  C023  FFDE         	movff	?___ftadd,postinc2
  3689  00175A  C024  FFDE         	movff	?___ftadd+1,postinc2
  3690  00175E  C025  FFDE         	movff	?___ftadd+2,postinc2
  3691  001762                     l637:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;PID.c: 15: pid[whichPID].controlSignal = (pid[whichPID].Kp*pid[whichPID].error + pid[wh
      +                          ichPID].Ki*pid[whichPID].iError + pid[whichPID].Kd*pid[whichPID].dError);
  3695  001762  0100               	movlb	0	; () banked
  3696  001764  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3697  001766  0D25               	mullw	37
  3698  001768  0E0F               	movlw	15
  3699  00176A  26F3               	addwf	prodl,f,c
  3700  00176C  0E00               	movlw	0
  3701  00176E  22F4               	addwfc	prodh,f,c
  3702  001770  0E00               	movlw	low _pid
  3703  001772  24F3               	addwf	prodl,w,c
  3704  001774  6ED9               	movwf	fsr2l,c
  3705  001776  0E01               	movlw	high _pid
  3706  001778  20F4               	addwfc	prodh,w,c
  3707  00177A  6EDA               	movwf	fsr2h,c
  3708  00177C  CFDE F032          	movff	postinc2,___ftmul@f2
  3709  001780  CFDE F033          	movff	postinc2,___ftmul@f2+1
  3710  001784  CFDD F034          	movff	postdec2,___ftmul@f2+2
  3711  001788  0100               	movlb	0	; () banked
  3712  00178A  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3713  00178C  0D25               	mullw	37
  3714  00178E  0E03               	movlw	3
  3715  001790  26F3               	addwf	prodl,f,c
  3716  001792  0E00               	movlw	0
  3717  001794  22F4               	addwfc	prodh,f,c
  3718  001796  0E00               	movlw	low _pid
  3719  001798  24F3               	addwf	prodl,w,c
  3720  00179A  6ED9               	movwf	fsr2l,c
  3721  00179C  0E01               	movlw	high _pid
  3722  00179E  20F4               	addwfc	prodh,w,c
  3723  0017A0  6EDA               	movwf	fsr2h,c
  3724  0017A2  CFDE F02F          	movff	postinc2,___ftmul@f1
  3725  0017A6  CFDE F030          	movff	postinc2,___ftmul@f1+1
  3726  0017AA  CFDD F031          	movff	postdec2,___ftmul@f1+2
  3727  0017AE  ECAB  F00E         	call	___ftmul	;wreg free
  3728  0017B2  C02F  F026         	movff	?___ftmul,___ftadd@f2
  3729  0017B6  C030  F027         	movff	?___ftmul+1,___ftadd@f2+1
  3730  0017BA  C031  F028         	movff	?___ftmul+2,___ftadd@f2+2
  3731  0017BE  0100               	movlb	0	; () banked
  3732  0017C0  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3733  0017C2  0D25               	mullw	37
  3734  0017C4  0E09               	movlw	9
  3735  0017C6  26F3               	addwf	prodl,f,c
  3736  0017C8  0E00               	movlw	0
  3737  0017CA  22F4               	addwfc	prodh,f,c
  3738  0017CC  0E00               	movlw	low _pid
  3739  0017CE  24F3               	addwf	prodl,w,c
  3740  0017D0  6ED9               	movwf	fsr2l,c
  3741  0017D2  0E01               	movlw	high _pid
  3742  0017D4  20F4               	addwfc	prodh,w,c
  3743  0017D6  6EDA               	movwf	fsr2h,c
  3744  0017D8  CFDE F032          	movff	postinc2,___ftmul@f2
  3745  0017DC  CFDE F033          	movff	postinc2,___ftmul@f2+1
  3746  0017E0  CFDD F034          	movff	postdec2,___ftmul@f2+2
  3747  0017E4  0100               	movlb	0	; () banked
  3748  0017E6  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3749  0017E8  0D25               	mullw	37
  3750  0017EA  0E00               	movlw	low _pid
  3751  0017EC  24F3               	addwf	prodl,w,c
  3752  0017EE  6ED9               	movwf	fsr2l,c
  3753  0017F0  0E01               	movlw	high _pid
  3754  0017F2  20F4               	addwfc	prodh,w,c
  3755  0017F4  6EDA               	movwf	fsr2h,c
  3756  0017F6  CFDE F02F          	movff	postinc2,___ftmul@f1
  3757  0017FA  CFDE F030          	movff	postinc2,___ftmul@f1+1
  3758  0017FE  CFDD F031          	movff	postdec2,___ftmul@f1+2
  3759  001802  ECAB  F00E         	call	___ftmul	;wreg free
  3760  001806  C02F  F023         	movff	?___ftmul,___ftadd@f1
  3761  00180A  C030  F024         	movff	?___ftmul+1,___ftadd@f1+1
  3762  00180E  C031  F025         	movff	?___ftmul+2,___ftadd@f1+2
  3763  001812  EC35  F00D         	call	___ftadd	;wreg free
  3764  001816  C023  F0D8         	movff	?___ftadd,_PID_outputControlCalc$1974
  3765  00181A  C024  F0D9         	movff	?___ftadd+1,_PID_outputControlCalc$1974+1
  3766  00181E  C025  F0DA         	movff	?___ftadd+2,_PID_outputControlCalc$1974+2
  3767                           
  3768                           ;PID.c: 15: pid[whichPID].controlSignal = (pid[whichPID].Kp*pid[whichPID].error + pid[wh
      +                          ichPID].Ki*pid[whichPID].iError + pid[whichPID].Kd*pid[whichPID].dError);
  3769  001822  C0D8  F023         	movff	_PID_outputControlCalc$1974,___ftadd@f1
  3770  001826  C0D9  F024         	movff	_PID_outputControlCalc$1974+1,___ftadd@f1+1
  3771  00182A  C0DA  F025         	movff	_PID_outputControlCalc$1974+2,___ftadd@f1+2
  3772  00182E  0100               	movlb	0	; () banked
  3773  001830  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3774  001832  0D25               	mullw	37
  3775  001834  0E0C               	movlw	12
  3776  001836  26F3               	addwf	prodl,f,c
  3777  001838  0E00               	movlw	0
  3778  00183A  22F4               	addwfc	prodh,f,c
  3779  00183C  0E00               	movlw	low _pid
  3780  00183E  24F3               	addwf	prodl,w,c
  3781  001840  6ED9               	movwf	fsr2l,c
  3782  001842  0E01               	movlw	high _pid
  3783  001844  20F4               	addwfc	prodh,w,c
  3784  001846  6EDA               	movwf	fsr2h,c
  3785  001848  CFDE F032          	movff	postinc2,___ftmul@f2
  3786  00184C  CFDE F033          	movff	postinc2,___ftmul@f2+1
  3787  001850  CFDD F034          	movff	postdec2,___ftmul@f2+2
  3788  001854  0100               	movlb	0	; () banked
  3789  001856  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3790  001858  0D25               	mullw	37
  3791  00185A  0E06               	movlw	6
  3792  00185C  26F3               	addwf	prodl,f,c
  3793  00185E  0E00               	movlw	0
  3794  001860  22F4               	addwfc	prodh,f,c
  3795  001862  0E00               	movlw	low _pid
  3796  001864  24F3               	addwf	prodl,w,c
  3797  001866  6ED9               	movwf	fsr2l,c
  3798  001868  0E01               	movlw	high _pid
  3799  00186A  20F4               	addwfc	prodh,w,c
  3800  00186C  6EDA               	movwf	fsr2h,c
  3801  00186E  CFDE F02F          	movff	postinc2,___ftmul@f1
  3802  001872  CFDE F030          	movff	postinc2,___ftmul@f1+1
  3803  001876  CFDD F031          	movff	postdec2,___ftmul@f1+2
  3804  00187A  ECAB  F00E         	call	___ftmul	;wreg free
  3805  00187E  C02F  F026         	movff	?___ftmul,___ftadd@f2
  3806  001882  C030  F027         	movff	?___ftmul+1,___ftadd@f2+1
  3807  001886  C031  F028         	movff	?___ftmul+2,___ftadd@f2+2
  3808  00188A  EC35  F00D         	call	___ftadd	;wreg free
  3809  00188E  0100               	movlb	0	; () banked
  3810  001890  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3811  001892  0D25               	mullw	37
  3812  001894  0E1E               	movlw	30
  3813  001896  26F3               	addwf	prodl,f,c
  3814  001898  0E00               	movlw	0
  3815  00189A  22F4               	addwfc	prodh,f,c
  3816  00189C  0E00               	movlw	low _pid
  3817  00189E  24F3               	addwf	prodl,w,c
  3818  0018A0  6ED9               	movwf	fsr2l,c
  3819  0018A2  0E01               	movlw	high _pid
  3820  0018A4  20F4               	addwfc	prodh,w,c
  3821  0018A6  6EDA               	movwf	fsr2h,c
  3822  0018A8  C023  FFDE         	movff	?___ftadd,postinc2
  3823  0018AC  C024  FFDE         	movff	?___ftadd+1,postinc2
  3824  0018B0  C025  FFDE         	movff	?___ftadd+2,postinc2
  3825                           
  3826                           ;PID.c: 18: if(pid[whichPID].controlSignal >= pid[whichPID].upperLimit)
  3827  0018B4  0100               	movlb	0	; () banked
  3828  0018B6  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3829  0018B8  0D25               	mullw	37
  3830  0018BA  0E1E               	movlw	30
  3831  0018BC  26F3               	addwf	prodl,f,c
  3832  0018BE  0E00               	movlw	0
  3833  0018C0  22F4               	addwfc	prodh,f,c
  3834  0018C2  0E00               	movlw	low _pid
  3835  0018C4  24F3               	addwf	prodl,w,c
  3836  0018C6  6ED9               	movwf	fsr2l,c
  3837  0018C8  0E01               	movlw	high _pid
  3838  0018CA  20F4               	addwfc	prodh,w,c
  3839  0018CC  6EDA               	movwf	fsr2h,c
  3840  0018CE  CFDE F013          	movff	postinc2,___ftge@ff1
  3841  0018D2  CFDE F014          	movff	postinc2,___ftge@ff1+1
  3842  0018D6  CFDD F015          	movff	postdec2,___ftge@ff1+2
  3843  0018DA  0100               	movlb	0	; () banked
  3844  0018DC  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3845  0018DE  0D25               	mullw	37
  3846  0018E0  0E18               	movlw	24
  3847  0018E2  26F3               	addwf	prodl,f,c
  3848  0018E4  0E00               	movlw	0
  3849  0018E6  22F4               	addwfc	prodh,f,c
  3850  0018E8  0E00               	movlw	low _pid
  3851  0018EA  24F3               	addwf	prodl,w,c
  3852  0018EC  6ED9               	movwf	fsr2l,c
  3853  0018EE  0E01               	movlw	high _pid
  3854  0018F0  20F4               	addwfc	prodh,w,c
  3855  0018F2  6EDA               	movwf	fsr2h,c
  3856  0018F4  CFDE F016          	movff	postinc2,___ftge@ff2
  3857  0018F8  CFDE F017          	movff	postinc2,___ftge@ff2+1
  3858  0018FC  CFDD F018          	movff	postdec2,___ftge@ff2+2
  3859  001900  EC63  F010         	call	___ftge	;wreg free
  3860  001904  A0D8               	btfss	status,0,c
  3861  001906  D032               	goto	l3961
  3862                           
  3863                           ;PID.c: 19: {
  3864                           ;PID.c: 20: pid[whichPID].checkUpLim = 1;
  3865  001908  0100               	movlb	0	; () banked
  3866  00190A  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3867  00190C  0D25               	mullw	37
  3868  00190E  0E21               	movlw	33
  3869  001910  26F3               	addwf	prodl,f,c
  3870  001912  0E00               	movlw	0
  3871  001914  22F4               	addwfc	prodh,f,c
  3872  001916  0E00               	movlw	low _pid
  3873  001918  24F3               	addwf	prodl,w,c
  3874  00191A  6ED9               	movwf	fsr2l,c
  3875  00191C  0E01               	movlw	high _pid
  3876  00191E  20F4               	addwfc	prodh,w,c
  3877  001920  6EDA               	movwf	fsr2h,c
  3878  001922  0E01               	movlw	1
  3879  001924  6EDE               	movwf	postinc2,c
  3880  001926  0E00               	movlw	0
  3881  001928  6EDD               	movwf	postdec2,c
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;PID.c: 21: pid[whichPID].controlSignal = pid[whichPID].upperLimit;
  3885  00192A  0100               	movlb	0	; () banked
  3886  00192C  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3887  00192E  0D25               	mullw	37
  3888  001930  0E18               	movlw	24
  3889  001932  26F3               	addwf	prodl,f,c
  3890  001934  0E00               	movlw	0
  3891  001936  22F4               	addwfc	prodh,f,c
  3892  001938  0E00               	movlw	low _pid
  3893  00193A  24F3               	addwf	prodl,w,c
  3894  00193C  6ED9               	movwf	fsr2l,c
  3895  00193E  0E01               	movlw	high _pid
  3896  001940  20F4               	addwfc	prodh,w,c
  3897  001942  6EDA               	movwf	fsr2h,c
  3898  001944  0100               	movlb	0	; () banked
  3899  001946  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3900  001948  0D25               	mullw	37
  3901  00194A  0E1E               	movlw	30
  3902  00194C  26F3               	addwf	prodl,f,c
  3903  00194E  0E00               	movlw	0
  3904  001950  22F4               	addwfc	prodh,f,c
  3905  001952  0E00               	movlw	low _pid
  3906  001954  24F3               	addwf	prodl,w,c
  3907  001956  6EE1               	movwf	fsr1l,c
  3908  001958  0E01               	movlw	high _pid
  3909  00195A  20F4               	addwfc	prodh,w,c
  3910  00195C  6EE2               	movwf	fsr1h,c
  3911  00195E  CFDE FFE6          	movff	postinc2,postinc1
  3912  001962  CFDE FFE6          	movff	postinc2,postinc1
  3913  001966  CFDE FFE6          	movff	postinc2,postinc1
  3914                           
  3915                           ;PID.c: 22: }
  3916  00196A  D011               	goto	l3963
  3917  00196C                     l3961:
  3918                           
  3919                           ;PID.c: 23: else
  3920                           ;PID.c: 24: pid[whichPID].checkUpLim = 0;
  3921  00196C  0100               	movlb	0	; () banked
  3922  00196E  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3923  001970  0D25               	mullw	37
  3924  001972  0E21               	movlw	33
  3925  001974  26F3               	addwf	prodl,f,c
  3926  001976  0E00               	movlw	0
  3927  001978  22F4               	addwfc	prodh,f,c
  3928  00197A  0E00               	movlw	low _pid
  3929  00197C  24F3               	addwf	prodl,w,c
  3930  00197E  6ED9               	movwf	fsr2l,c
  3931  001980  0E01               	movlw	high _pid
  3932  001982  20F4               	addwfc	prodh,w,c
  3933  001984  6EDA               	movwf	fsr2h,c
  3934  001986  0E00               	movlw	0
  3935  001988  6EDE               	movwf	postinc2,c
  3936  00198A  0E00               	movlw	0
  3937  00198C  6EDD               	movwf	postdec2,c
  3938  00198E                     l3963:
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;PID.c: 26: if(pid[whichPID].controlSignal <= pid[whichPID].lowerLimit)
  3942  00198E  0100               	movlb	0	; () banked
  3943  001990  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3944  001992  0D25               	mullw	37
  3945  001994  0E1B               	movlw	27
  3946  001996  26F3               	addwf	prodl,f,c
  3947  001998  0E00               	movlw	0
  3948  00199A  22F4               	addwfc	prodh,f,c
  3949  00199C  0E00               	movlw	low _pid
  3950  00199E  24F3               	addwf	prodl,w,c
  3951  0019A0  6ED9               	movwf	fsr2l,c
  3952  0019A2  0E01               	movlw	high _pid
  3953  0019A4  20F4               	addwfc	prodh,w,c
  3954  0019A6  6EDA               	movwf	fsr2h,c
  3955  0019A8  CFDE F013          	movff	postinc2,___ftge@ff1
  3956  0019AC  CFDE F014          	movff	postinc2,___ftge@ff1+1
  3957  0019B0  CFDD F015          	movff	postdec2,___ftge@ff1+2
  3958  0019B4  0100               	movlb	0	; () banked
  3959  0019B6  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3960  0019B8  0D25               	mullw	37
  3961  0019BA  0E1E               	movlw	30
  3962  0019BC  26F3               	addwf	prodl,f,c
  3963  0019BE  0E00               	movlw	0
  3964  0019C0  22F4               	addwfc	prodh,f,c
  3965  0019C2  0E00               	movlw	low _pid
  3966  0019C4  24F3               	addwf	prodl,w,c
  3967  0019C6  6ED9               	movwf	fsr2l,c
  3968  0019C8  0E01               	movlw	high _pid
  3969  0019CA  20F4               	addwfc	prodh,w,c
  3970  0019CC  6EDA               	movwf	fsr2h,c
  3971  0019CE  CFDE F016          	movff	postinc2,___ftge@ff2
  3972  0019D2  CFDE F017          	movff	postinc2,___ftge@ff2+1
  3973  0019D6  CFDD F018          	movff	postdec2,___ftge@ff2+2
  3974  0019DA  EC63  F010         	call	___ftge	;wreg free
  3975  0019DE  A0D8               	btfss	status,0,c
  3976  0019E0  D032               	goto	l3969
  3977                           
  3978                           ;PID.c: 27: {
  3979                           ;PID.c: 28: pid[whichPID].checkLowLim = 1;
  3980  0019E2  0100               	movlb	0	; () banked
  3981  0019E4  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  3982  0019E6  0D25               	mullw	37
  3983  0019E8  0E23               	movlw	35
  3984  0019EA  26F3               	addwf	prodl,f,c
  3985  0019EC  0E00               	movlw	0
  3986  0019EE  22F4               	addwfc	prodh,f,c
  3987  0019F0  0E00               	movlw	low _pid
  3988  0019F2  24F3               	addwf	prodl,w,c
  3989  0019F4  6ED9               	movwf	fsr2l,c
  3990  0019F6  0E01               	movlw	high _pid
  3991  0019F8  20F4               	addwfc	prodh,w,c
  3992  0019FA  6EDA               	movwf	fsr2h,c
  3993  0019FC  0E01               	movlw	1
  3994  0019FE  6EDE               	movwf	postinc2,c
  3995  001A00  0E00               	movlw	0
  3996  001A02  6EDD               	movwf	postdec2,c
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;PID.c: 29: pid[whichPID].controlSignal = pid[whichPID].lowerLimit;
  4000  001A04  0100               	movlb	0	; () banked
  4001  001A06  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  4002  001A08  0D25               	mullw	37
  4003  001A0A  0E1B               	movlw	27
  4004  001A0C  26F3               	addwf	prodl,f,c
  4005  001A0E  0E00               	movlw	0
  4006  001A10  22F4               	addwfc	prodh,f,c
  4007  001A12  0E00               	movlw	low _pid
  4008  001A14  24F3               	addwf	prodl,w,c
  4009  001A16  6ED9               	movwf	fsr2l,c
  4010  001A18  0E01               	movlw	high _pid
  4011  001A1A  20F4               	addwfc	prodh,w,c
  4012  001A1C  6EDA               	movwf	fsr2h,c
  4013  001A1E  0100               	movlb	0	; () banked
  4014  001A20  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  4015  001A22  0D25               	mullw	37
  4016  001A24  0E1E               	movlw	30
  4017  001A26  26F3               	addwf	prodl,f,c
  4018  001A28  0E00               	movlw	0
  4019  001A2A  22F4               	addwfc	prodh,f,c
  4020  001A2C  0E00               	movlw	low _pid
  4021  001A2E  24F3               	addwf	prodl,w,c
  4022  001A30  6EE1               	movwf	fsr1l,c
  4023  001A32  0E01               	movlw	high _pid
  4024  001A34  20F4               	addwfc	prodh,w,c
  4025  001A36  6EE2               	movwf	fsr1h,c
  4026  001A38  CFDE FFE6          	movff	postinc2,postinc1
  4027  001A3C  CFDE FFE6          	movff	postinc2,postinc1
  4028  001A40  CFDE FFE6          	movff	postinc2,postinc1
  4029                           
  4030                           ;PID.c: 30: }
  4031  001A44  0012               	return	
  4032  001A46                     l3969:
  4033                           
  4034                           ;PID.c: 31: else
  4035                           ;PID.c: 32: pid[whichPID].checkLowLim = 0;
  4036  001A46  0100               	movlb	0	; () banked
  4037  001A48  51D5               	movf	PID_outputControlCalc@whichPID& (0+255),w,b
  4038  001A4A  0D25               	mullw	37
  4039  001A4C  0E23               	movlw	35
  4040  001A4E  26F3               	addwf	prodl,f,c
  4041  001A50  0E00               	movlw	0
  4042  001A52  22F4               	addwfc	prodh,f,c
  4043  001A54  0E00               	movlw	low _pid
  4044  001A56  24F3               	addwf	prodl,w,c
  4045  001A58  6ED9               	movwf	fsr2l,c
  4046  001A5A  0E01               	movlw	high _pid
  4047  001A5C  20F4               	addwfc	prodh,w,c
  4048  001A5E  6EDA               	movwf	fsr2h,c
  4049  001A60  0E00               	movlw	0
  4050  001A62  6EDE               	movwf	postinc2,c
  4051  001A64  0E00               	movlw	0
  4052  001A66  6EDD               	movwf	postdec2,c
  4053                           
  4054                           ; BSR set to: 0
  4055  001A68  0012               	return	
  4056  001A6A                     __end_of_PID_outputControlCalc:
  4057                           	opt stack 0
  4058                           tblptru	equ	0xFF8
  4059                           tblptrh	equ	0xFF7
  4060                           tblptrl	equ	0xFF6
  4061                           tablat	equ	0xFF5
  4062                           prodh	equ	0xFF4
  4063                           prodl	equ	0xFF3
  4064                           intcon	equ	0xFF2
  4065                           postinc0	equ	0xFEE
  4066                           wreg	equ	0xFE8
  4067                           postinc1	equ	0xFE6
  4068                           postdec1	equ	0xFE5
  4069                           fsr1h	equ	0xFE2
  4070                           fsr1l	equ	0xFE1
  4071                           postinc2	equ	0xFDE
  4072                           postdec2	equ	0xFDD
  4073                           fsr2h	equ	0xFDA
  4074                           fsr2l	equ	0xFD9
  4075                           status	equ	0xFD8
  4076                           
  4077 ;; *************** function ___ftneg *****************
  4078 ;; Defined at:
  4079 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftneg.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  f1              3   26[COMRAM] float 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  3   26[COMRAM] float 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4093 ;;      Params:         3       0       0       0       0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4096 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4097 ;;Total ram usage:        3 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    4
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_main
  4104 ;;		_PID_outputControlCalc
  4105 ;;		_readAccelGiroValues
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text13
  4110  0024E2                     __ptext13:
  4111                           	opt stack 0
  4112  0024E2                     ___ftneg:
  4113                           	opt stack 26
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;incstack = 0
  4117  0024E2  501B               	movf	___ftneg@f1,w,c
  4118  0024E4  101C               	iorwf	___ftneg@f1+1,w,c
  4119  0024E6  101D               	iorwf	___ftneg@f1+2,w,c
  4120  0024E8  B4D8               	btfsc	status,2,c
  4121  0024EA  D006               	goto	l1008
  4122  0024EC  0E00               	movlw	0
  4123  0024EE  1A1B               	xorwf	___ftneg@f1,f,c
  4124  0024F0  0E00               	movlw	0
  4125  0024F2  1A1C               	xorwf	___ftneg@f1+1,f,c
  4126  0024F4  0E80               	movlw	128
  4127  0024F6  1A1D               	xorwf	___ftneg@f1+2,f,c
  4128  0024F8                     l1008:
  4129  0024F8  C01B  F01B         	movff	___ftneg@f1,?___ftneg
  4130  0024FC  C01C  F01C         	movff	___ftneg@f1+1,?___ftneg+1
  4131  002500  C01D  F01D         	movff	___ftneg@f1+2,?___ftneg+2
  4132  002504  0012               	return		;funcret
  4133  002506                     __end_of___ftneg:
  4134                           	opt stack 0
  4135                           tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           prodh	equ	0xFF4
  4140                           prodl	equ	0xFF3
  4141                           intcon	equ	0xFF2
  4142                           postinc0	equ	0xFEE
  4143                           wreg	equ	0xFE8
  4144                           postinc1	equ	0xFE6
  4145                           postdec1	equ	0xFE5
  4146                           fsr1h	equ	0xFE2
  4147                           fsr1l	equ	0xFE1
  4148                           postinc2	equ	0xFDE
  4149                           postdec2	equ	0xFDD
  4150                           fsr2h	equ	0xFDA
  4151                           fsr2l	equ	0xFD9
  4152                           status	equ	0xFD8
  4153                           
  4154 ;; *************** function ___ftmul *****************
  4155 ;; Defined at:
  4156 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  f1              3   46[COMRAM] float 
  4159 ;;  f2              3   49[COMRAM] float 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  4162 ;;  sign            1    5[BANK0 ] unsigned char 
  4163 ;;  cntr            1    4[BANK0 ] unsigned char 
  4164 ;;  exp             1    0[BANK0 ] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  3   46[COMRAM] float 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4174 ;;      Params:         6       0       0       0       0       0       0       0       0
  4175 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4176 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4177 ;;      Totals:         9       6       0       0       0       0       0       0       0
  4178 ;;Total ram usage:       15 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    5
  4181 ;; This function calls:
  4182 ;;		___ftpack
  4183 ;; This function is called by:
  4184 ;;		_main
  4185 ;;		_PID_outputControlCalc
  4186 ;;		_readAccelGiroValues
  4187 ;; This function uses a non-reentrant model
  4188 ;;
  4189                           
  4190                           	psect	text14
  4191  001D56                     __ptext14:
  4192                           	opt stack 0
  4193  001D56                     ___ftmul:
  4194                           	opt stack 25
  4195                           
  4196                           ;incstack = 0
  4197  001D56  C031  F035         	movff	___ftmul@f1+2,??___ftmul
  4198  001D5A  6A36               	clrf	(??___ftmul+1)& (0+255),c
  4199  001D5C  6A37               	clrf	(??___ftmul+2)& (0+255),c
  4200  001D5E  3430               	rlcf	___ftmul@f1+1,w,c
  4201  001D60  3635               	rlcf	??___ftmul& (0+255),f,c
  4202  001D62  E301               	bnc	u3791
  4203  001D64  8036               	bsf	(??___ftmul+1)& (0+255),0,c
  4204  001D66                     u3791:
  4205  001D66  5035               	movf	??___ftmul,w,c
  4206  001D68  0100               	movlb	0	; () banked
  4207  001D6A  6FBD               	movwf	___ftmul@exp& (0+255),b
  4208  001D6C  0100               	movlb	0	; () banked
  4209  001D6E  51BD               	movf	___ftmul@exp& (0+255),w,b
  4210  001D70  A4D8               	btfss	status,2,c
  4211  001D72  D007               	goto	l3797
  4212                           
  4213                           ; BSR set to: 0
  4214  001D74  0E00               	movlw	0
  4215  001D76  6E2F               	movwf	?___ftmul,c
  4216  001D78  0E00               	movlw	0
  4217  001D7A  6E30               	movwf	?___ftmul+1,c
  4218  001D7C  0E00               	movlw	0
  4219  001D7E  6E31               	movwf	?___ftmul+2,c
  4220                           
  4221                           ; BSR set to: 0
  4222  001D80  0012               	return	
  4223  001D82                     l3797:
  4224                           
  4225                           ; BSR set to: 0
  4226  001D82  C034  F035         	movff	___ftmul@f2+2,??___ftmul
  4227  001D86  6A36               	clrf	(??___ftmul+1)& (0+255),c
  4228  001D88  6A37               	clrf	(??___ftmul+2)& (0+255),c
  4229  001D8A  3433               	rlcf	___ftmul@f2+1,w,c
  4230  001D8C  3635               	rlcf	??___ftmul& (0+255),f,c
  4231  001D8E  E301               	bnc	u3811
  4232  001D90  8036               	bsf	(??___ftmul+1)& (0+255),0,c
  4233  001D92                     u3811:
  4234  001D92  5035               	movf	??___ftmul,w,c
  4235  001D94  0100               	movlb	0	; () banked
  4236  001D96  6FC2               	movwf	___ftmul@sign& (0+255),b
  4237  001D98  0100               	movlb	0	; () banked
  4238  001D9A  51C2               	movf	___ftmul@sign& (0+255),w,b
  4239  001D9C  A4D8               	btfss	status,2,c
  4240  001D9E  D007               	goto	l3803
  4241                           
  4242                           ; BSR set to: 0
  4243  001DA0  0E00               	movlw	0
  4244  001DA2  6E2F               	movwf	?___ftmul,c
  4245  001DA4  0E00               	movlw	0
  4246  001DA6  6E30               	movwf	?___ftmul+1,c
  4247  001DA8  0E00               	movlw	0
  4248  001DAA  6E31               	movwf	?___ftmul+2,c
  4249                           
  4250                           ; BSR set to: 0
  4251  001DAC  0012               	return	
  4252  001DAE                     l3803:
  4253                           
  4254                           ; BSR set to: 0
  4255  001DAE  0100               	movlb	0	; () banked
  4256  001DB0  51C2               	movf	___ftmul@sign& (0+255),w,b
  4257  001DB2  0F7B               	addlw	123
  4258  001DB4  0100               	movlb	0	; () banked
  4259  001DB6  27BD               	addwf	___ftmul@exp& (0+255),f,b
  4260                           
  4261                           ; BSR set to: 0
  4262  001DB8  C031  F0C2         	movff	___ftmul@f1+2,___ftmul@sign
  4263  001DBC  5034               	movf	___ftmul@f2+2,w,c
  4264  001DBE  0100               	movlb	0	; () banked
  4265  001DC0  1BC2               	xorwf	___ftmul@sign& (0+255),f,b
  4266  001DC2  0E80               	movlw	128
  4267  001DC4  0100               	movlb	0	; () banked
  4268  001DC6  17C2               	andwf	___ftmul@sign& (0+255),f,b
  4269                           
  4270                           ; BSR set to: 0
  4271  001DC8  8E30               	bsf	___ftmul@f1+1,7,c
  4272                           
  4273                           ; BSR set to: 0
  4274  001DCA  8E33               	bsf	___ftmul@f2+1,7,c
  4275                           
  4276                           ; BSR set to: 0
  4277  001DCC  0EFF               	movlw	255
  4278  001DCE  1632               	andwf	___ftmul@f2,f,c
  4279  001DD0  0EFF               	movlw	255
  4280  001DD2  1633               	andwf	___ftmul@f2+1,f,c
  4281  001DD4  0E00               	movlw	0
  4282  001DD6  1634               	andwf	___ftmul@f2+2,f,c
  4283                           
  4284                           ; BSR set to: 0
  4285  001DD8  0E00               	movlw	0
  4286  001DDA  0100               	movlb	0	; () banked
  4287  001DDC  6FBE               	movwf	___ftmul@f3_as_product& (0+255),b
  4288  001DDE  0E00               	movlw	0
  4289  001DE0  0100               	movlb	0	; () banked
  4290  001DE2  6FBF               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  4291  001DE4  0E00               	movlw	0
  4292  001DE6  0100               	movlb	0	; () banked
  4293  001DE8  6FC0               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4294                           
  4295                           ; BSR set to: 0
  4296  001DEA  0E07               	movlw	7
  4297  001DEC  0100               	movlb	0	; () banked
  4298  001DEE  6FC1               	movwf	___ftmul@cntr& (0+255),b
  4299  001DF0                     l3817:
  4300                           
  4301                           ; BSR set to: 0
  4302  001DF0  A02F               	btfss	___ftmul@f1,0,c
  4303  001DF2  D009               	goto	l3821
  4304                           
  4305                           ; BSR set to: 0
  4306  001DF4  5032               	movf	___ftmul@f2,w,c
  4307  001DF6  0100               	movlb	0	; () banked
  4308  001DF8  27BE               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4309  001DFA  5033               	movf	___ftmul@f2+1,w,c
  4310  001DFC  0100               	movlb	0	; () banked
  4311  001DFE  23BF               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4312  001E00  5034               	movf	___ftmul@f2+2,w,c
  4313  001E02  0100               	movlb	0	; () banked
  4314  001E04  23C0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4315  001E06                     l3821:
  4316                           
  4317                           ; BSR set to: 0
  4318  001E06  90D8               	bcf	status,0,c
  4319  001E08  3231               	rrcf	___ftmul@f1+2,f,c
  4320  001E0A  3230               	rrcf	___ftmul@f1+1,f,c
  4321  001E0C  322F               	rrcf	___ftmul@f1,f,c
  4322  001E0E  90D8               	bcf	status,0,c
  4323  001E10  3632               	rlcf	___ftmul@f2,f,c
  4324  001E12  3633               	rlcf	___ftmul@f2+1,f,c
  4325  001E14  3634               	rlcf	___ftmul@f2+2,f,c
  4326                           
  4327                           ; BSR set to: 0
  4328  001E16  0100               	movlb	0	; () banked
  4329  001E18  2FC1               	decfsz	___ftmul@cntr& (0+255),f,b
  4330  001E1A  D7EA               	goto	l3817
  4331                           
  4332                           ; BSR set to: 0
  4333                           
  4334                           ; BSR set to: 0
  4335  001E1C  0E09               	movlw	9
  4336  001E1E  0100               	movlb	0	; () banked
  4337  001E20  6FC1               	movwf	___ftmul@cntr& (0+255),b
  4338  001E22                     l3827:
  4339                           
  4340                           ; BSR set to: 0
  4341  001E22  A02F               	btfss	___ftmul@f1,0,c
  4342  001E24  D009               	goto	l3831
  4343                           
  4344                           ; BSR set to: 0
  4345  001E26  5032               	movf	___ftmul@f2,w,c
  4346  001E28  0100               	movlb	0	; () banked
  4347  001E2A  27BE               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4348  001E2C  5033               	movf	___ftmul@f2+1,w,c
  4349  001E2E  0100               	movlb	0	; () banked
  4350  001E30  23BF               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4351  001E32  5034               	movf	___ftmul@f2+2,w,c
  4352  001E34  0100               	movlb	0	; () banked
  4353  001E36  23C0               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4354  001E38                     l3831:
  4355                           
  4356                           ; BSR set to: 0
  4357  001E38  90D8               	bcf	status,0,c
  4358  001E3A  3231               	rrcf	___ftmul@f1+2,f,c
  4359  001E3C  3230               	rrcf	___ftmul@f1+1,f,c
  4360  001E3E  322F               	rrcf	___ftmul@f1,f,c
  4361  001E40  0100               	movlb	0	; () banked
  4362  001E42  90D8               	bcf	status,0,c
  4363  001E44  33C0               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4364  001E46  33BF               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4365  001E48  33BE               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4366                           
  4367                           ; BSR set to: 0
  4368  001E4A  0100               	movlb	0	; () banked
  4369  001E4C  2FC1               	decfsz	___ftmul@cntr& (0+255),f,b
  4370  001E4E  D7E9               	goto	l3827
  4371                           
  4372                           ; BSR set to: 0
  4373                           
  4374                           ; BSR set to: 0
  4375  001E50  C0BE  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  4376  001E54  C0BF  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4377  001E58  C0C0  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4378  001E5C  C0BD  F016         	movff	___ftmul@exp,___ftpack@exp
  4379  001E60  C0C2  F017         	movff	___ftmul@sign,___ftpack@sign
  4380  001E64  ECB5  F00F         	call	___ftpack	;wreg free
  4381  001E68  C013  F02F         	movff	?___ftpack,?___ftmul
  4382  001E6C  C014  F030         	movff	?___ftpack+1,?___ftmul+1
  4383  001E70  C015  F031         	movff	?___ftpack+2,?___ftmul+2
  4384  001E74  0012               	return	
  4385  001E76                     __end_of___ftmul:
  4386                           	opt stack 0
  4387                           tblptru	equ	0xFF8
  4388                           tblptrh	equ	0xFF7
  4389                           tblptrl	equ	0xFF6
  4390                           tablat	equ	0xFF5
  4391                           prodh	equ	0xFF4
  4392                           prodl	equ	0xFF3
  4393                           intcon	equ	0xFF2
  4394                           postinc0	equ	0xFEE
  4395                           wreg	equ	0xFE8
  4396                           postinc1	equ	0xFE6
  4397                           postdec1	equ	0xFE5
  4398                           fsr1h	equ	0xFE2
  4399                           fsr1l	equ	0xFE1
  4400                           postinc2	equ	0xFDE
  4401                           postdec2	equ	0xFDD
  4402                           fsr2h	equ	0xFDA
  4403                           fsr2l	equ	0xFD9
  4404                           status	equ	0xFD8
  4405                           
  4406 ;; *************** function ___ftge *****************
  4407 ;; Defined at:
  4408 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  ff1             3   18[COMRAM] float 
  4411 ;;  ff2             3   21[COMRAM] float 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;		None               void
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4423 ;;      Params:         6       0       0       0       0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4425 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4426 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4427 ;;Total ram usage:        9 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    4
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_main
  4434 ;;		_PID_outputControlCalc
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text15
  4439  0020C6                     __ptext15:
  4440                           	opt stack 0
  4441  0020C6                     ___ftge:
  4442                           	opt stack 26
  4443                           
  4444                           ;incstack = 0
  4445  0020C6  AE15               	btfss	___ftge@ff1+2,7,c
  4446  0020C8  D016               	goto	l3843
  4447  0020CA  C013  F019         	movff	___ftge@ff1,??___ftge
  4448  0020CE  C014  F01A         	movff	___ftge@ff1+1,??___ftge+1
  4449  0020D2  C015  F01B         	movff	___ftge@ff1+2,??___ftge+2
  4450  0020D6  1E19               	comf	??___ftge,f,c
  4451  0020D8  1E1A               	comf	??___ftge+1,f,c
  4452  0020DA  1E1B               	comf	??___ftge+2,f,c
  4453  0020DC  2A19               	incf	??___ftge,f,c
  4454  0020DE  0E00               	movlw	0
  4455  0020E0  221A               	addwfc	??___ftge+1,f,c
  4456  0020E2  221B               	addwfc	??___ftge+2,f,c
  4457  0020E4  0E00               	movlw	0
  4458  0020E6  2419               	addwf	??___ftge,w,c
  4459  0020E8  6E13               	movwf	___ftge@ff1,c
  4460  0020EA  0E00               	movlw	0
  4461  0020EC  201A               	addwfc	??___ftge+1,w,c
  4462  0020EE  6E14               	movwf	___ftge@ff1+1,c
  4463  0020F0  0E80               	movlw	128
  4464  0020F2  201B               	addwfc	??___ftge+2,w,c
  4465  0020F4  6E15               	movwf	___ftge@ff1+2,c
  4466  0020F6                     l3843:
  4467  0020F6  AE18               	btfss	___ftge@ff2+2,7,c
  4468  0020F8  D016               	goto	l3847
  4469  0020FA  C016  F019         	movff	___ftge@ff2,??___ftge
  4470  0020FE  C017  F01A         	movff	___ftge@ff2+1,??___ftge+1
  4471  002102  C018  F01B         	movff	___ftge@ff2+2,??___ftge+2
  4472  002106  1E19               	comf	??___ftge,f,c
  4473  002108  1E1A               	comf	??___ftge+1,f,c
  4474  00210A  1E1B               	comf	??___ftge+2,f,c
  4475  00210C  2A19               	incf	??___ftge,f,c
  4476  00210E  0E00               	movlw	0
  4477  002110  221A               	addwfc	??___ftge+1,f,c
  4478  002112  221B               	addwfc	??___ftge+2,f,c
  4479  002114  0E00               	movlw	0
  4480  002116  2419               	addwf	??___ftge,w,c
  4481  002118  6E16               	movwf	___ftge@ff2,c
  4482  00211A  0E00               	movlw	0
  4483  00211C  201A               	addwfc	??___ftge+1,w,c
  4484  00211E  6E17               	movwf	___ftge@ff2+1,c
  4485  002120  0E80               	movlw	128
  4486  002122  201B               	addwfc	??___ftge+2,w,c
  4487  002124  6E18               	movwf	___ftge@ff2+2,c
  4488  002126                     l3847:
  4489  002126  0E00               	movlw	0
  4490  002128  1A13               	xorwf	___ftge@ff1,f,c
  4491  00212A  0E00               	movlw	0
  4492  00212C  1A14               	xorwf	___ftge@ff1+1,f,c
  4493  00212E  0E80               	movlw	128
  4494  002130  1A15               	xorwf	___ftge@ff1+2,f,c
  4495  002132  0E00               	movlw	0
  4496  002134  1A16               	xorwf	___ftge@ff2,f,c
  4497  002136  0E00               	movlw	0
  4498  002138  1A17               	xorwf	___ftge@ff2+1,f,c
  4499  00213A  0E80               	movlw	128
  4500  00213C  1A18               	xorwf	___ftge@ff2+2,f,c
  4501  00213E  5016               	movf	___ftge@ff2,w,c
  4502  002140  5C13               	subwf	___ftge@ff1,w,c
  4503  002142  5017               	movf	___ftge@ff2+1,w,c
  4504  002144  5814               	subwfb	___ftge@ff1+1,w,c
  4505  002146  5018               	movf	___ftge@ff2+2,w,c
  4506  002148  5815               	subwfb	___ftge@ff1+2,w,c
  4507  00214A  B0D8               	btfsc	status,0,c
  4508  00214C  D002               	goto	l3853
  4509  00214E  90D8               	bcf	status,0,c
  4510  002150  0012               	return	
  4511  002152                     l3853:
  4512  002152  80D8               	bsf	status,0,c
  4513  002154  0012               	return	
  4514  002156                     __end_of___ftge:
  4515                           	opt stack 0
  4516                           tblptru	equ	0xFF8
  4517                           tblptrh	equ	0xFF7
  4518                           tblptrl	equ	0xFF6
  4519                           tablat	equ	0xFF5
  4520                           prodh	equ	0xFF4
  4521                           prodl	equ	0xFF3
  4522                           intcon	equ	0xFF2
  4523                           postinc0	equ	0xFEE
  4524                           wreg	equ	0xFE8
  4525                           postinc1	equ	0xFE6
  4526                           postdec1	equ	0xFE5
  4527                           fsr1h	equ	0xFE2
  4528                           fsr1l	equ	0xFE1
  4529                           postinc2	equ	0xFDE
  4530                           postdec2	equ	0xFDD
  4531                           fsr2h	equ	0xFDA
  4532                           fsr2l	equ	0xFD9
  4533                           status	equ	0xFD8
  4534                           
  4535 ;; *************** function ___ftdiv *****************
  4536 ;; Defined at:
  4537 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  f1              3    6[BANK0 ] float 
  4540 ;;  f2              3    9[BANK0 ] float 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  f3              3   13[BANK0 ] float 
  4543 ;;  sign            1   17[BANK0 ] unsigned char 
  4544 ;;  exp             1   16[BANK0 ] unsigned char 
  4545 ;;  cntr            1   12[BANK0 ] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  3    6[BANK0 ] float 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4555 ;;      Params:         0       6       0       0       0       0       0       0       0
  4556 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4557 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4558 ;;      Totals:         3      12       0       0       0       0       0       0       0
  4559 ;;Total ram usage:       15 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    5
  4562 ;; This function calls:
  4563 ;;		___ftpack
  4564 ;; This function is called by:
  4565 ;;		_main
  4566 ;;		_PID_outputControlCalc
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text16
  4571  001C16                     __ptext16:
  4572                           	opt stack 0
  4573  001C16                     ___ftdiv:
  4574                           	opt stack 25
  4575                           
  4576                           ;incstack = 0
  4577  001C16  C0C5  F038         	movff	___ftdiv@f1+2,??___ftdiv
  4578  001C1A  6A39               	clrf	(??___ftdiv+1)& (0+255),c
  4579  001C1C  6A3A               	clrf	(??___ftdiv+2)& (0+255),c
  4580  001C1E  0100               	movlb	0	; () banked
  4581  001C20  35C4               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  4582  001C22  3638               	rlcf	??___ftdiv& (0+255),f,c
  4583  001C24  E301               	bnc	u3741
  4584  001C26  8039               	bsf	(??___ftdiv+1)& (0+255),0,c
  4585  001C28                     u3741:
  4586  001C28  5038               	movf	??___ftdiv,w,c
  4587  001C2A  0100               	movlb	0	; () banked
  4588  001C2C  6FCD               	movwf	___ftdiv@exp& (0+255),b
  4589  001C2E  0100               	movlb	0	; () banked
  4590  001C30  51CD               	movf	___ftdiv@exp& (0+255),w,b
  4591  001C32  A4D8               	btfss	status,2,c
  4592  001C34  D00A               	goto	l3751
  4593                           
  4594                           ; BSR set to: 0
  4595  001C36  0E00               	movlw	0
  4596  001C38  0100               	movlb	0	; () banked
  4597  001C3A  6FC3               	movwf	?___ftdiv& (0+255),b
  4598  001C3C  0E00               	movlw	0
  4599  001C3E  0100               	movlb	0	; () banked
  4600  001C40  6FC4               	movwf	(?___ftdiv+1)& (0+255),b
  4601  001C42  0E00               	movlw	0
  4602  001C44  0100               	movlb	0	; () banked
  4603  001C46  6FC5               	movwf	(?___ftdiv+2)& (0+255),b
  4604                           
  4605                           ; BSR set to: 0
  4606  001C48  0012               	return	
  4607  001C4A                     l3751:
  4608                           
  4609                           ; BSR set to: 0
  4610  001C4A  C0C8  F038         	movff	___ftdiv@f2+2,??___ftdiv
  4611  001C4E  6A39               	clrf	(??___ftdiv+1)& (0+255),c
  4612  001C50  6A3A               	clrf	(??___ftdiv+2)& (0+255),c
  4613  001C52  0100               	movlb	0	; () banked
  4614  001C54  35C7               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  4615  001C56  3638               	rlcf	??___ftdiv& (0+255),f,c
  4616  001C58  E301               	bnc	u3761
  4617  001C5A  8039               	bsf	(??___ftdiv+1)& (0+255),0,c
  4618  001C5C                     u3761:
  4619  001C5C  5038               	movf	??___ftdiv,w,c
  4620  001C5E  0100               	movlb	0	; () banked
  4621  001C60  6FCE               	movwf	___ftdiv@sign& (0+255),b
  4622  001C62  0100               	movlb	0	; () banked
  4623  001C64  51CE               	movf	___ftdiv@sign& (0+255),w,b
  4624  001C66  A4D8               	btfss	status,2,c
  4625  001C68  D00A               	goto	l3757
  4626                           
  4627                           ; BSR set to: 0
  4628  001C6A  0E00               	movlw	0
  4629  001C6C  0100               	movlb	0	; () banked
  4630  001C6E  6FC3               	movwf	?___ftdiv& (0+255),b
  4631  001C70  0E00               	movlw	0
  4632  001C72  0100               	movlb	0	; () banked
  4633  001C74  6FC4               	movwf	(?___ftdiv+1)& (0+255),b
  4634  001C76  0E00               	movlw	0
  4635  001C78  0100               	movlb	0	; () banked
  4636  001C7A  6FC5               	movwf	(?___ftdiv+2)& (0+255),b
  4637                           
  4638                           ; BSR set to: 0
  4639  001C7C  0012               	return	
  4640  001C7E                     l3757:
  4641                           
  4642                           ; BSR set to: 0
  4643  001C7E  0E00               	movlw	0
  4644  001C80  0100               	movlb	0	; () banked
  4645  001C82  6FCA               	movwf	___ftdiv@f3& (0+255),b
  4646  001C84  0E00               	movlw	0
  4647  001C86  0100               	movlb	0	; () banked
  4648  001C88  6FCB               	movwf	(___ftdiv@f3+1)& (0+255),b
  4649  001C8A  0E00               	movlw	0
  4650  001C8C  0100               	movlb	0	; () banked
  4651  001C8E  6FCC               	movwf	(___ftdiv@f3+2)& (0+255),b
  4652                           
  4653                           ; BSR set to: 0
  4654  001C90  0100               	movlb	0	; () banked
  4655  001C92  51CE               	movf	___ftdiv@sign& (0+255),w,b
  4656  001C94  0F89               	addlw	137
  4657  001C96  0100               	movlb	0	; () banked
  4658  001C98  5FCD               	subwf	___ftdiv@exp& (0+255),f,b
  4659                           
  4660                           ; BSR set to: 0
  4661  001C9A  C0C5  F0CE         	movff	___ftdiv@f1+2,___ftdiv@sign
  4662                           
  4663                           ; BSR set to: 0
  4664  001C9E  0100               	movlb	0	; () banked
  4665  001CA0  51C8               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4666  001CA2  0100               	movlb	0	; () banked
  4667  001CA4  1BCE               	xorwf	___ftdiv@sign& (0+255),f,b
  4668                           
  4669                           ; BSR set to: 0
  4670  001CA6  0E80               	movlw	128
  4671  001CA8  0100               	movlb	0	; () banked
  4672  001CAA  17CE               	andwf	___ftdiv@sign& (0+255),f,b
  4673                           
  4674                           ; BSR set to: 0
  4675  001CAC  0100               	movlb	0	; () banked
  4676  001CAE  8FC4               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  4677                           
  4678                           ; BSR set to: 0
  4679  001CB0  0EFF               	movlw	255
  4680  001CB2  0100               	movlb	0	; () banked
  4681  001CB4  17C3               	andwf	___ftdiv@f1& (0+255),f,b
  4682  001CB6  0EFF               	movlw	255
  4683  001CB8  0100               	movlb	0	; () banked
  4684  001CBA  17C4               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  4685  001CBC  0E00               	movlw	0
  4686  001CBE  0100               	movlb	0	; () banked
  4687  001CC0  17C5               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  4688                           
  4689                           ; BSR set to: 0
  4690  001CC2  0100               	movlb	0	; () banked
  4691  001CC4  8FC7               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  4692                           
  4693                           ; BSR set to: 0
  4694  001CC6  0EFF               	movlw	255
  4695  001CC8  0100               	movlb	0	; () banked
  4696  001CCA  17C6               	andwf	___ftdiv@f2& (0+255),f,b
  4697  001CCC  0EFF               	movlw	255
  4698  001CCE  0100               	movlb	0	; () banked
  4699  001CD0  17C7               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  4700  001CD2  0E00               	movlw	0
  4701  001CD4  0100               	movlb	0	; () banked
  4702  001CD6  17C8               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  4703                           
  4704                           ; BSR set to: 0
  4705  001CD8  0E18               	movlw	24
  4706  001CDA  0100               	movlb	0	; () banked
  4707  001CDC  6FC9               	movwf	___ftdiv@cntr& (0+255),b
  4708  001CDE                     l3777:
  4709                           
  4710                           ; BSR set to: 0
  4711  001CDE  0100               	movlb	0	; () banked
  4712  001CE0  90D8               	bcf	status,0,c
  4713  001CE2  37CA               	rlcf	___ftdiv@f3& (0+255),f,b
  4714  001CE4  37CB               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4715  001CE6  37CC               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4716                           
  4717                           ; BSR set to: 0
  4718  001CE8  0100               	movlb	0	; () banked
  4719  001CEA  51C6               	movf	___ftdiv@f2& (0+255),w,b
  4720  001CEC  0100               	movlb	0	; () banked
  4721  001CEE  5DC3               	subwf	___ftdiv@f1& (0+255),w,b
  4722  001CF0  0100               	movlb	0	; () banked
  4723  001CF2  51C7               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4724  001CF4  0100               	movlb	0	; () banked
  4725  001CF6  59C4               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  4726  001CF8  0100               	movlb	0	; () banked
  4727  001CFA  51C8               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4728  001CFC  0100               	movlb	0	; () banked
  4729  001CFE  59C5               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  4730  001D00  A0D8               	btfss	status,0,c
  4731  001D02  D00E               	goto	l986
  4732                           
  4733                           ; BSR set to: 0
  4734  001D04  0100               	movlb	0	; () banked
  4735  001D06  51C6               	movf	___ftdiv@f2& (0+255),w,b
  4736  001D08  0100               	movlb	0	; () banked
  4737  001D0A  5FC3               	subwf	___ftdiv@f1& (0+255),f,b
  4738  001D0C  0100               	movlb	0	; () banked
  4739  001D0E  51C7               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4740  001D10  0100               	movlb	0	; () banked
  4741  001D12  5BC4               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4742  001D14  0100               	movlb	0	; () banked
  4743  001D16  51C8               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4744  001D18  0100               	movlb	0	; () banked
  4745  001D1A  5BC5               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4746                           
  4747                           ; BSR set to: 0
  4748  001D1C  0100               	movlb	0	; () banked
  4749  001D1E  81CA               	bsf	___ftdiv@f3& (0+255),0,b
  4750  001D20                     l986:
  4751                           
  4752                           ; BSR set to: 0
  4753  001D20  0100               	movlb	0	; () banked
  4754  001D22  90D8               	bcf	status,0,c
  4755  001D24  37C3               	rlcf	___ftdiv@f1& (0+255),f,b
  4756  001D26  37C4               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4757  001D28  37C5               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4758                           
  4759                           ; BSR set to: 0
  4760  001D2A  0100               	movlb	0	; () banked
  4761  001D2C  2FC9               	decfsz	___ftdiv@cntr& (0+255),f,b
  4762  001D2E  D7D7               	goto	l3777
  4763                           
  4764                           ; BSR set to: 0
  4765                           
  4766                           ; BSR set to: 0
  4767  001D30  C0CA  F013         	movff	___ftdiv@f3,___ftpack@arg
  4768  001D34  C0CB  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4769  001D38  C0CC  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4770  001D3C  C0CD  F016         	movff	___ftdiv@exp,___ftpack@exp
  4771  001D40  C0CE  F017         	movff	___ftdiv@sign,___ftpack@sign
  4772  001D44  ECB5  F00F         	call	___ftpack	;wreg free
  4773  001D48  C013  F0C3         	movff	?___ftpack,?___ftdiv
  4774  001D4C  C014  F0C4         	movff	?___ftpack+1,?___ftdiv+1
  4775  001D50  C015  F0C5         	movff	?___ftpack+2,?___ftdiv+2
  4776  001D54  0012               	return	
  4777  001D56                     __end_of___ftdiv:
  4778                           	opt stack 0
  4779                           tblptru	equ	0xFF8
  4780                           tblptrh	equ	0xFF7
  4781                           tblptrl	equ	0xFF6
  4782                           tablat	equ	0xFF5
  4783                           prodh	equ	0xFF4
  4784                           prodl	equ	0xFF3
  4785                           intcon	equ	0xFF2
  4786                           postinc0	equ	0xFEE
  4787                           wreg	equ	0xFE8
  4788                           postinc1	equ	0xFE6
  4789                           postdec1	equ	0xFE5
  4790                           fsr1h	equ	0xFE2
  4791                           fsr1l	equ	0xFE1
  4792                           postinc2	equ	0xFDE
  4793                           postdec2	equ	0xFDD
  4794                           fsr2h	equ	0xFDA
  4795                           fsr2l	equ	0xFD9
  4796                           status	equ	0xFD8
  4797                           
  4798 ;; *************** function ___ftadd *****************
  4799 ;; Defined at:
  4800 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  f1              3   34[COMRAM] float 
  4803 ;;  f2              3   37[COMRAM] float 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  exp1            1   45[COMRAM] unsigned char 
  4806 ;;  exp2            1   44[COMRAM] unsigned char 
  4807 ;;  sign            1   43[COMRAM] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  3   34[COMRAM] float 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4817 ;;      Params:         6       0       0       0       0       0       0       0       0
  4818 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4819 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4820 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4821 ;;Total ram usage:       12 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    5
  4824 ;; This function calls:
  4825 ;;		___ftpack
  4826 ;; This function is called by:
  4827 ;;		_main
  4828 ;;		_PID_outputControlCalc
  4829 ;;		_readAccelGiroValues
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text17
  4834  001A6A                     __ptext17:
  4835                           	opt stack 0
  4836  001A6A                     ___ftadd:
  4837                           	opt stack 25
  4838                           
  4839                           ;incstack = 0
  4840  001A6A  C025  F029         	movff	___ftadd@f1+2,??___ftadd
  4841  001A6E  6A2A               	clrf	(??___ftadd+1)& (0+255),c
  4842  001A70  6A2B               	clrf	(??___ftadd+2)& (0+255),c
  4843  001A72  3424               	rlcf	___ftadd@f1+1,w,c
  4844  001A74  3629               	rlcf	??___ftadd& (0+255),f,c
  4845  001A76  E301               	bnc	u3531
  4846  001A78  802A               	bsf	(??___ftadd+1)& (0+255),0,c
  4847  001A7A                     u3531:
  4848  001A7A  5029               	movf	??___ftadd,w,c
  4849  001A7C  6E2E               	movwf	___ftadd@exp1,c
  4850  001A7E  C028  F029         	movff	___ftadd@f2+2,??___ftadd
  4851  001A82  6A2A               	clrf	(??___ftadd+1)& (0+255),c
  4852  001A84  6A2B               	clrf	(??___ftadd+2)& (0+255),c
  4853  001A86  3427               	rlcf	___ftadd@f2+1,w,c
  4854  001A88  3629               	rlcf	??___ftadd& (0+255),f,c
  4855  001A8A  E301               	bnc	u3541
  4856  001A8C  802A               	bsf	(??___ftadd+1)& (0+255),0,c
  4857  001A8E                     u3541:
  4858  001A8E  5029               	movf	??___ftadd,w,c
  4859  001A90  6E2D               	movwf	___ftadd@exp2,c
  4860  001A92  502E               	movf	___ftadd@exp1,w,c
  4861  001A94  B4D8               	btfsc	status,2,c
  4862  001A96  D00B               	goto	l951
  4863  001A98  502D               	movf	___ftadd@exp2,w,c
  4864  001A9A  5C2E               	subwf	___ftadd@exp1,w,c
  4865  001A9C  B0D8               	btfsc	status,0,c
  4866  001A9E  D00E               	goto	l3683
  4867  001AA0  502E               	movf	___ftadd@exp1,w,c
  4868  001AA2  0800               	sublw	0
  4869  001AA4  242D               	addwf	___ftadd@exp2,w,c
  4870  001AA6  6E29               	movwf	??___ftadd& (0+255),c
  4871  001AA8  0E18               	movlw	24
  4872  001AAA  6429               	cpfsgt	??___ftadd,c
  4873  001AAC  D007               	goto	l3683
  4874  001AAE                     l951:
  4875  001AAE  C026  F023         	movff	___ftadd@f2,?___ftadd
  4876  001AB2  C027  F024         	movff	___ftadd@f2+1,?___ftadd+1
  4877  001AB6  C028  F025         	movff	___ftadd@f2+2,?___ftadd+2
  4878  001ABA  0012               	return	
  4879  001ABC                     l3683:
  4880  001ABC  502D               	movf	___ftadd@exp2,w,c
  4881  001ABE  B4D8               	btfsc	status,2,c
  4882  001AC0  D00B               	goto	l955
  4883  001AC2  502E               	movf	___ftadd@exp1,w,c
  4884  001AC4  5C2D               	subwf	___ftadd@exp2,w,c
  4885  001AC6  B0D8               	btfsc	status,0,c
  4886  001AC8  D00E               	goto	l3689
  4887  001ACA  502D               	movf	___ftadd@exp2,w,c
  4888  001ACC  0800               	sublw	0
  4889  001ACE  242E               	addwf	___ftadd@exp1,w,c
  4890  001AD0  6E29               	movwf	??___ftadd& (0+255),c
  4891  001AD2  0E18               	movlw	24
  4892  001AD4  6429               	cpfsgt	??___ftadd,c
  4893  001AD6  D007               	goto	l3689
  4894  001AD8                     l955:
  4895  001AD8  C023  F023         	movff	___ftadd@f1,?___ftadd
  4896  001ADC  C024  F024         	movff	___ftadd@f1+1,?___ftadd+1
  4897  001AE0  C025  F025         	movff	___ftadd@f1+2,?___ftadd+2
  4898  001AE4  0012               	return	
  4899  001AE6                     l3689:
  4900  001AE6  0E06               	movlw	6
  4901  001AE8  6E2C               	movwf	___ftadd@sign,c
  4902  001AEA  BE25               	btfsc	___ftadd@f1+2,7,c
  4903  001AEC  8E2C               	bsf	___ftadd@sign,7,c
  4904  001AEE  BE28               	btfsc	___ftadd@f2+2,7,c
  4905  001AF0  8C2C               	bsf	___ftadd@sign,6,c
  4906  001AF2  8E24               	bsf	___ftadd@f1+1,7,c
  4907  001AF4  0EFF               	movlw	255
  4908  001AF6  1623               	andwf	___ftadd@f1,f,c
  4909  001AF8  0EFF               	movlw	255
  4910  001AFA  1624               	andwf	___ftadd@f1+1,f,c
  4911  001AFC  0E00               	movlw	0
  4912  001AFE  1625               	andwf	___ftadd@f1+2,f,c
  4913  001B00  8E27               	bsf	___ftadd@f2+1,7,c
  4914  001B02  0EFF               	movlw	255
  4915  001B04  1626               	andwf	___ftadd@f2,f,c
  4916  001B06  0EFF               	movlw	255
  4917  001B08  1627               	andwf	___ftadd@f2+1,f,c
  4918  001B0A  0E00               	movlw	0
  4919  001B0C  1628               	andwf	___ftadd@f2+2,f,c
  4920  001B0E  502D               	movf	___ftadd@exp2,w,c
  4921  001B10  5C2E               	subwf	___ftadd@exp1,w,c
  4922  001B12  B0D8               	btfsc	status,0,c
  4923  001B14  D01B               	goto	l3715
  4924  001B16                     l3705:
  4925  001B16  90D8               	bcf	status,0,c
  4926  001B18  3626               	rlcf	___ftadd@f2,f,c
  4927  001B1A  3627               	rlcf	___ftadd@f2+1,f,c
  4928  001B1C  3628               	rlcf	___ftadd@f2+2,f,c
  4929  001B1E  062D               	decf	___ftadd@exp2,f,c
  4930  001B20  502E               	movf	___ftadd@exp1,w,c
  4931  001B22  182D               	xorwf	___ftadd@exp2,w,c
  4932  001B24  B4D8               	btfsc	status,2,c
  4933  001B26  D00D               	goto	l3713
  4934  001B28  062C               	decf	___ftadd@sign,f,c
  4935  001B2A  C02C  F029         	movff	___ftadd@sign,??___ftadd
  4936  001B2E  0E07               	movlw	7
  4937  001B30  1629               	andwf	??___ftadd,f,c
  4938  001B32  B4D8               	btfsc	status,2,c
  4939  001B34  D006               	goto	l3713
  4940  001B36  D7EF               	goto	l3705
  4941  001B38                     l3711:
  4942  001B38  90D8               	bcf	status,0,c
  4943  001B3A  3225               	rrcf	___ftadd@f1+2,f,c
  4944  001B3C  3224               	rrcf	___ftadd@f1+1,f,c
  4945  001B3E  3223               	rrcf	___ftadd@f1,f,c
  4946  001B40  2A2E               	incf	___ftadd@exp1,f,c
  4947  001B42                     l3713:
  4948  001B42  502D               	movf	___ftadd@exp2,w,c
  4949  001B44  182E               	xorwf	___ftadd@exp1,w,c
  4950  001B46  B4D8               	btfsc	status,2,c
  4951  001B48  D01F               	goto	l966
  4952  001B4A  D7F6               	goto	l3711
  4953  001B4C                     l3715:
  4954  001B4C  502E               	movf	___ftadd@exp1,w,c
  4955  001B4E  5C2D               	subwf	___ftadd@exp2,w,c
  4956  001B50  B0D8               	btfsc	status,0,c
  4957  001B52  D01A               	goto	l966
  4958  001B54                     l3717:
  4959  001B54  90D8               	bcf	status,0,c
  4960  001B56  3623               	rlcf	___ftadd@f1,f,c
  4961  001B58  3624               	rlcf	___ftadd@f1+1,f,c
  4962  001B5A  3625               	rlcf	___ftadd@f1+2,f,c
  4963  001B5C  062E               	decf	___ftadd@exp1,f,c
  4964  001B5E  502E               	movf	___ftadd@exp1,w,c
  4965  001B60  182D               	xorwf	___ftadd@exp2,w,c
  4966  001B62  B4D8               	btfsc	status,2,c
  4967  001B64  D00D               	goto	l3725
  4968  001B66  062C               	decf	___ftadd@sign,f,c
  4969  001B68  C02C  F029         	movff	___ftadd@sign,??___ftadd
  4970  001B6C  0E07               	movlw	7
  4971  001B6E  1629               	andwf	??___ftadd,f,c
  4972  001B70  B4D8               	btfsc	status,2,c
  4973  001B72  D006               	goto	l3725
  4974  001B74  D7EF               	goto	l3717
  4975  001B76                     l3723:
  4976  001B76  90D8               	bcf	status,0,c
  4977  001B78  3228               	rrcf	___ftadd@f2+2,f,c
  4978  001B7A  3227               	rrcf	___ftadd@f2+1,f,c
  4979  001B7C  3226               	rrcf	___ftadd@f2,f,c
  4980  001B7E  2A2D               	incf	___ftadd@exp2,f,c
  4981  001B80                     l3725:
  4982  001B80  502D               	movf	___ftadd@exp2,w,c
  4983  001B82  182E               	xorwf	___ftadd@exp1,w,c
  4984  001B84  A4D8               	btfss	status,2,c
  4985  001B86  D7F7               	goto	l3723
  4986  001B88                     l966:
  4987  001B88  AE2C               	btfss	___ftadd@sign,7,c
  4988  001B8A  D00C               	goto	l975
  4989  001B8C  0EFF               	movlw	255
  4990  001B8E  1A23               	xorwf	___ftadd@f1,f,c
  4991  001B90  0EFF               	movlw	255
  4992  001B92  1A24               	xorwf	___ftadd@f1+1,f,c
  4993  001B94  0EFF               	movlw	255
  4994  001B96  1A25               	xorwf	___ftadd@f1+2,f,c
  4995  001B98  0E01               	movlw	1
  4996  001B9A  2623               	addwf	___ftadd@f1,f,c
  4997  001B9C  0E00               	movlw	0
  4998  001B9E  2224               	addwfc	___ftadd@f1+1,f,c
  4999  001BA0  0E00               	movlw	0
  5000  001BA2  2225               	addwfc	___ftadd@f1+2,f,c
  5001  001BA4                     l975:
  5002  001BA4  AC2C               	btfss	___ftadd@sign,6,c
  5003  001BA6  D00C               	goto	l3731
  5004  001BA8  0EFF               	movlw	255
  5005  001BAA  1A26               	xorwf	___ftadd@f2,f,c
  5006  001BAC  0EFF               	movlw	255
  5007  001BAE  1A27               	xorwf	___ftadd@f2+1,f,c
  5008  001BB0  0EFF               	movlw	255
  5009  001BB2  1A28               	xorwf	___ftadd@f2+2,f,c
  5010  001BB4  0E01               	movlw	1
  5011  001BB6  2626               	addwf	___ftadd@f2,f,c
  5012  001BB8  0E00               	movlw	0
  5013  001BBA  2227               	addwfc	___ftadd@f2+1,f,c
  5014  001BBC  0E00               	movlw	0
  5015  001BBE  2228               	addwfc	___ftadd@f2+2,f,c
  5016  001BC0                     l3731:
  5017  001BC0  0E00               	movlw	0
  5018  001BC2  6E2C               	movwf	___ftadd@sign,c
  5019  001BC4  5023               	movf	___ftadd@f1,w,c
  5020  001BC6  2626               	addwf	___ftadd@f2,f,c
  5021  001BC8  5024               	movf	___ftadd@f1+1,w,c
  5022  001BCA  2227               	addwfc	___ftadd@f2+1,f,c
  5023  001BCC  5025               	movf	___ftadd@f1+2,w,c
  5024  001BCE  2228               	addwfc	___ftadd@f2+2,f,c
  5025  001BD0  AE28               	btfss	___ftadd@f2+2,7,c
  5026  001BD2  D00E               	goto	l3741
  5027  001BD4  0EFF               	movlw	255
  5028  001BD6  1A26               	xorwf	___ftadd@f2,f,c
  5029  001BD8  0EFF               	movlw	255
  5030  001BDA  1A27               	xorwf	___ftadd@f2+1,f,c
  5031  001BDC  0EFF               	movlw	255
  5032  001BDE  1A28               	xorwf	___ftadd@f2+2,f,c
  5033  001BE0  0E01               	movlw	1
  5034  001BE2  2626               	addwf	___ftadd@f2,f,c
  5035  001BE4  0E00               	movlw	0
  5036  001BE6  2227               	addwfc	___ftadd@f2+1,f,c
  5037  001BE8  0E00               	movlw	0
  5038  001BEA  2228               	addwfc	___ftadd@f2+2,f,c
  5039  001BEC  0E01               	movlw	1
  5040  001BEE  6E2C               	movwf	___ftadd@sign,c
  5041  001BF0                     l3741:
  5042  001BF0  C026  F013         	movff	___ftadd@f2,___ftpack@arg
  5043  001BF4  C027  F014         	movff	___ftadd@f2+1,___ftpack@arg+1
  5044  001BF8  C028  F015         	movff	___ftadd@f2+2,___ftpack@arg+2
  5045  001BFC  C02E  F016         	movff	___ftadd@exp1,___ftpack@exp
  5046  001C00  C02C  F017         	movff	___ftadd@sign,___ftpack@sign
  5047  001C04  ECB5  F00F         	call	___ftpack	;wreg free
  5048  001C08  C013  F023         	movff	?___ftpack,?___ftadd
  5049  001C0C  C014  F024         	movff	?___ftpack+1,?___ftadd+1
  5050  001C10  C015  F025         	movff	?___ftpack+2,?___ftadd+2
  5051  001C14  0012               	return	
  5052  001C16                     __end_of___ftadd:
  5053                           	opt stack 0
  5054                           tblptru	equ	0xFF8
  5055                           tblptrh	equ	0xFF7
  5056                           tblptrl	equ	0xFF6
  5057                           tablat	equ	0xFF5
  5058                           prodh	equ	0xFF4
  5059                           prodl	equ	0xFF3
  5060                           intcon	equ	0xFF2
  5061                           postinc0	equ	0xFEE
  5062                           wreg	equ	0xFE8
  5063                           postinc1	equ	0xFE6
  5064                           postdec1	equ	0xFE5
  5065                           fsr1h	equ	0xFE2
  5066                           fsr1l	equ	0xFE1
  5067                           postinc2	equ	0xFDE
  5068                           postdec2	equ	0xFDD
  5069                           fsr2h	equ	0xFDA
  5070                           fsr2l	equ	0xFD9
  5071                           status	equ	0xFD8
  5072                           
  5073 ;; *************** function ___ftpack *****************
  5074 ;; Defined at:
  5075 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  arg             3   18[COMRAM] unsigned um
  5078 ;;  exp             1   21[COMRAM] unsigned char 
  5079 ;;  sign            1   22[COMRAM] unsigned char 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;		None
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  3   18[COMRAM] float 
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5091 ;;      Params:         5       0       0       0       0       0       0       0       0
  5092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5093 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5094 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5095 ;;Total ram usage:        8 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    4
  5098 ;; This function calls:
  5099 ;;		Nothing
  5100 ;; This function is called by:
  5101 ;;		___awtoft
  5102 ;;		___ftadd
  5103 ;;		___ftdiv
  5104 ;;		___ftmul
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text18
  5109  001F6A                     __ptext18:
  5110                           	opt stack 0
  5111  001F6A                     ___ftpack:
  5112                           	opt stack 25
  5113                           
  5114                           ;incstack = 0
  5115  001F6A  5016               	movf	___ftpack@exp,w,c
  5116  001F6C  B4D8               	btfsc	status,2,c
  5117  001F6E  D005               	goto	l3603
  5118  001F70  5013               	movf	___ftpack@arg,w,c
  5119  001F72  1014               	iorwf	___ftpack@arg+1,w,c
  5120  001F74  1015               	iorwf	___ftpack@arg+2,w,c
  5121  001F76  A4D8               	btfss	status,2,c
  5122  001F78  D00C               	goto	l3609
  5123  001F7A                     l3603:
  5124  001F7A  0E00               	movlw	0
  5125  001F7C  6E13               	movwf	?___ftpack,c
  5126  001F7E  0E00               	movlw	0
  5127  001F80  6E14               	movwf	?___ftpack+1,c
  5128  001F82  0E00               	movlw	0
  5129  001F84  6E15               	movwf	?___ftpack+2,c
  5130  001F86  0012               	return	
  5131  001F88                     l3607:
  5132  001F88  2A16               	incf	___ftpack@exp,f,c
  5133  001F8A  90D8               	bcf	status,0,c
  5134  001F8C  3215               	rrcf	___ftpack@arg+2,f,c
  5135  001F8E  3214               	rrcf	___ftpack@arg+1,f,c
  5136  001F90  3213               	rrcf	___ftpack@arg,f,c
  5137  001F92                     l3609:
  5138  001F92  0E00               	movlw	0
  5139  001F94  1413               	andwf	___ftpack@arg,w,c
  5140  001F96  6E18               	movwf	??___ftpack& (0+255),c
  5141  001F98  0E00               	movlw	0
  5142  001F9A  1414               	andwf	___ftpack@arg+1,w,c
  5143  001F9C  6E19               	movwf	(??___ftpack+1)& (0+255),c
  5144  001F9E  0EFE               	movlw	254
  5145  001FA0  1415               	andwf	___ftpack@arg+2,w,c
  5146  001FA2  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  5147  001FA4  5018               	movf	??___ftpack,w,c
  5148  001FA6  1019               	iorwf	??___ftpack+1,w,c
  5149  001FA8  101A               	iorwf	??___ftpack+2,w,c
  5150  001FAA  B4D8               	btfsc	status,2,c
  5151  001FAC  D00C               	goto	l3615
  5152  001FAE  D7EC               	goto	l3607
  5153  001FB0                     l3611:
  5154  001FB0  2A16               	incf	___ftpack@exp,f,c
  5155  001FB2  0E01               	movlw	1
  5156  001FB4  2613               	addwf	___ftpack@arg,f,c
  5157  001FB6  0E00               	movlw	0
  5158  001FB8  2214               	addwfc	___ftpack@arg+1,f,c
  5159  001FBA  0E00               	movlw	0
  5160  001FBC  2215               	addwfc	___ftpack@arg+2,f,c
  5161  001FBE  90D8               	bcf	status,0,c
  5162  001FC0  3215               	rrcf	___ftpack@arg+2,f,c
  5163  001FC2  3214               	rrcf	___ftpack@arg+1,f,c
  5164  001FC4  3213               	rrcf	___ftpack@arg,f,c
  5165  001FC6                     l3615:
  5166  001FC6  0E00               	movlw	0
  5167  001FC8  1413               	andwf	___ftpack@arg,w,c
  5168  001FCA  6E18               	movwf	??___ftpack& (0+255),c
  5169  001FCC  0E00               	movlw	0
  5170  001FCE  1414               	andwf	___ftpack@arg+1,w,c
  5171  001FD0  6E19               	movwf	(??___ftpack+1)& (0+255),c
  5172  001FD2  0EFF               	movlw	255
  5173  001FD4  1415               	andwf	___ftpack@arg+2,w,c
  5174  001FD6  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  5175  001FD8  5018               	movf	??___ftpack,w,c
  5176  001FDA  1019               	iorwf	??___ftpack+1,w,c
  5177  001FDC  101A               	iorwf	??___ftpack+2,w,c
  5178  001FDE  B4D8               	btfsc	status,2,c
  5179  001FE0  D006               	goto	l3619
  5180  001FE2  D7E6               	goto	l3611
  5181  001FE4                     l3617:
  5182  001FE4  0616               	decf	___ftpack@exp,f,c
  5183  001FE6  90D8               	bcf	status,0,c
  5184  001FE8  3613               	rlcf	___ftpack@arg,f,c
  5185  001FEA  3614               	rlcf	___ftpack@arg+1,f,c
  5186  001FEC  3615               	rlcf	___ftpack@arg+2,f,c
  5187  001FEE                     l3619:
  5188  001FEE  BE14               	btfsc	___ftpack@arg+1,7,c
  5189  001FF0  D003               	goto	l928
  5190  001FF2  0E02               	movlw	2
  5191  001FF4  6016               	cpfslt	___ftpack@exp,c
  5192  001FF6  D7F6               	goto	l3617
  5193  001FF8                     l928:
  5194  001FF8  A016               	btfss	___ftpack@exp,0,c
  5195  001FFA  9E14               	bcf	___ftpack@arg+1,7,c
  5196  001FFC  90D8               	bcf	status,0,c
  5197  001FFE  3216               	rrcf	___ftpack@exp,f,c
  5198  002000  5016               	movf	___ftpack@exp,w,c
  5199  002002  1215               	iorwf	___ftpack@arg+2,f,c
  5200  002004  5017               	movf	___ftpack@sign,w,c
  5201  002006  A4D8               	btfss	status,2,c
  5202  002008  8E15               	bsf	___ftpack@arg+2,7,c
  5203  00200A  C013  F013         	movff	___ftpack@arg,?___ftpack
  5204  00200E  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  5205  002012  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  5206  002016  0012               	return	
  5207  002018                     __end_of___ftpack:
  5208                           	opt stack 0
  5209                           tblptru	equ	0xFF8
  5210                           tblptrh	equ	0xFF7
  5211                           tblptrl	equ	0xFF6
  5212                           tablat	equ	0xFF5
  5213                           prodh	equ	0xFF4
  5214                           prodl	equ	0xFF3
  5215                           intcon	equ	0xFF2
  5216                           postinc0	equ	0xFEE
  5217                           wreg	equ	0xFE8
  5218                           postinc1	equ	0xFE6
  5219                           postdec1	equ	0xFE5
  5220                           fsr1h	equ	0xFE2
  5221                           fsr1l	equ	0xFE1
  5222                           postinc2	equ	0xFDE
  5223                           postdec2	equ	0xFDD
  5224                           fsr2h	equ	0xFDA
  5225                           fsr2l	equ	0xFD9
  5226                           status	equ	0xFD8
  5227                           
  5228 ;; *************** function _INTERRUPTION *****************
  5229 ;; Defined at:
  5230 ;;		line 4 in file "Interrup.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;		None
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;		None
  5235 ;; Return value:  Size  Location     Type
  5236 ;;                  1    wreg      void 
  5237 ;; Registers used:
  5238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5239 ;; Tracked objects:
  5240 ;;		On entry : 0/0
  5241 ;;		On exit  : 0/0
  5242 ;;		Unchanged: 0/0
  5243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5244 ;;      Params:         0       0       0       0       0       0       0       0       0
  5245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5246 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5247 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5248 ;;Total ram usage:       14 bytes
  5249 ;; Hardware stack levels used:    1
  5250 ;; Hardware stack levels required when called:    3
  5251 ;; This function calls:
  5252 ;;		_INTERRUPTION_Serial
  5253 ;;		_INTERRUPTION_Timer0
  5254 ;; This function is called by:
  5255 ;;		Interrupt level 2
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	intcode
  5260  000808                     __pintcode:
  5261                           	opt stack 0
  5262  000808                     _INTERRUPTION:
  5263                           	opt stack 24
  5264                           
  5265                           ;incstack = 0
  5266  000808  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5267  00080A  CFFA F005          	movff	pclath,??_INTERRUPTION
  5268  00080E  CFFB F006          	movff	pclatu,??_INTERRUPTION+1
  5269  000812  ED2B  F011         	call	int_func,f	;refresh shadow registers
  5270                           pclatu	equ	0xFFB
  5271                           pclath	equ	0xFFA
  5272                           tblptru	equ	0xFF8
  5273                           tblptrh	equ	0xFF7
  5274                           tblptrl	equ	0xFF6
  5275                           tablat	equ	0xFF5
  5276                           prodh	equ	0xFF4
  5277                           prodl	equ	0xFF3
  5278                           intcon	equ	0xFF2
  5279                           postinc0	equ	0xFEE
  5280                           wreg	equ	0xFE8
  5281                           postinc1	equ	0xFE6
  5282                           postdec1	equ	0xFE5
  5283                           fsr1h	equ	0xFE2
  5284                           fsr1l	equ	0xFE1
  5285                           postinc2	equ	0xFDE
  5286                           postdec2	equ	0xFDD
  5287                           fsr2h	equ	0xFDA
  5288                           fsr2l	equ	0xFD9
  5289                           status	equ	0xFD8
  5290                           
  5291                           	psect	intcode_body
  5292  002256                     __pintcode_body:
  5293                           	opt stack 24
  5294  002256                     int_func:
  5295                           	opt stack 24
  5296  002256  0006               	pop		; remove dummy address from shadow register refresh
  5297  002258  CFE9 F007          	movff	fsr0l,??_INTERRUPTION+2
  5298  00225C  CFEA F008          	movff	fsr0h,??_INTERRUPTION+3
  5299  002260  CFE1 F009          	movff	fsr1l,??_INTERRUPTION+4
  5300  002264  CFE2 F00A          	movff	fsr1h,??_INTERRUPTION+5
  5301  002268  CFD9 F00B          	movff	fsr2l,??_INTERRUPTION+6
  5302  00226C  CFDA F00C          	movff	fsr2h,??_INTERRUPTION+7
  5303  002270  CFF3 F00D          	movff	prodl,??_INTERRUPTION+8
  5304  002274  CFF4 F00E          	movff	prodh,??_INTERRUPTION+9
  5305  002278  CFF6 F00F          	movff	tblptrl,??_INTERRUPTION+10
  5306  00227C  CFF7 F010          	movff	tblptrh,??_INTERRUPTION+11
  5307  002280  CFF8 F011          	movff	tblptru,??_INTERRUPTION+12
  5308  002284  CFF5 F012          	movff	tablat,??_INTERRUPTION+13
  5309                           
  5310                           ;Interrup.c: 7: INTERRUPTION_Timer0();
  5311  002288  ECC0  F012         	call	_INTERRUPTION_Timer0	;wreg free
  5312                           
  5313                           ;Interrup.c: 13: INTERRUPTION_Serial();
  5314  00228C  EC0C  F010         	call	_INTERRUPTION_Serial	;wreg free
  5315                           
  5316                           ;Interrup.c: 16: return;
  5317  002290  C012  FFF5         	movff	??_INTERRUPTION+13,tablat
  5318  002294  C011  FFF8         	movff	??_INTERRUPTION+12,tblptru
  5319  002298  C010  FFF7         	movff	??_INTERRUPTION+11,tblptrh
  5320  00229C  C00F  FFF6         	movff	??_INTERRUPTION+10,tblptrl
  5321  0022A0  C00E  FFF4         	movff	??_INTERRUPTION+9,prodh
  5322  0022A4  C00D  FFF3         	movff	??_INTERRUPTION+8,prodl
  5323  0022A8  C00C  FFDA         	movff	??_INTERRUPTION+7,fsr2h
  5324  0022AC  C00B  FFD9         	movff	??_INTERRUPTION+6,fsr2l
  5325  0022B0  C00A  FFE2         	movff	??_INTERRUPTION+5,fsr1h
  5326  0022B4  C009  FFE1         	movff	??_INTERRUPTION+4,fsr1l
  5327  0022B8  C008  FFEA         	movff	??_INTERRUPTION+3,fsr0h
  5328  0022BC  C007  FFE9         	movff	??_INTERRUPTION+2,fsr0l
  5329  0022C0  C006  FFFB         	movff	??_INTERRUPTION+1,pclatu
  5330  0022C4  C005  FFFA         	movff	??_INTERRUPTION,pclath
  5331  0022C8  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5332  0022CA  0011               	retfie		f
  5333  0022CC                     __end_of_INTERRUPTION:
  5334                           	opt stack 0
  5335                           pclatu	equ	0xFFB
  5336                           pclath	equ	0xFFA
  5337                           tblptru	equ	0xFF8
  5338                           tblptrh	equ	0xFF7
  5339                           tblptrl	equ	0xFF6
  5340                           tablat	equ	0xFF5
  5341                           prodh	equ	0xFF4
  5342                           prodl	equ	0xFF3
  5343                           intcon	equ	0xFF2
  5344                           postinc0	equ	0xFEE
  5345                           fsr0h	equ	0xFEA
  5346                           fsr0l	equ	0xFE9
  5347                           wreg	equ	0xFE8
  5348                           postinc1	equ	0xFE6
  5349                           postdec1	equ	0xFE5
  5350                           fsr1h	equ	0xFE2
  5351                           fsr1l	equ	0xFE1
  5352                           postinc2	equ	0xFDE
  5353                           postdec2	equ	0xFDD
  5354                           fsr2h	equ	0xFDA
  5355                           fsr2l	equ	0xFD9
  5356                           status	equ	0xFD8
  5357                           
  5358 ;; *************** function _INTERRUPTION_Timer0 *****************
  5359 ;; Defined at:
  5360 ;;		line 20 in file "Interrup.c"
  5361 ;; Parameters:    Size  Location     Type
  5362 ;;		None
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      void 
  5367 ;; Registers used:
  5368 ;;		wreg, status,2, status,0, cstack
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5374 ;;      Params:         0       0       0       0       0       0       0       0       0
  5375 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5377 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5378 ;;Total ram usage:        0 bytes
  5379 ;; Hardware stack levels used:    1
  5380 ;; Hardware stack levels required when called:    1
  5381 ;; This function calls:
  5382 ;;		_PWM_Execute
  5383 ;; This function is called by:
  5384 ;;		_INTERRUPTION
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text20
  5389  002580                     __ptext20:
  5390                           	opt stack 0
  5391  002580                     _INTERRUPTION_Timer0:
  5392                           	opt stack 25
  5393                           
  5394                           ;Interrup.c: 21: if(INTCONbits.TMR0IF) {
  5395                           
  5396                           ;incstack = 0
  5397  002580  A4F2               	btfss	intcon,2,c	;volatile
  5398  002582  0012               	return	
  5399                           
  5400                           ;Interrup.c: 22: INTCONbits.TMR0IF = 0;
  5401  002584  94F2               	bcf	intcon,2,c	;volatile
  5402                           
  5403                           ;Interrup.c: 23: PWM_Execute();
  5404  002586  EC66  F011         	call	_PWM_Execute	;wreg free
  5405                           
  5406                           ;Interrup.c: 24: TMR0L = freq;
  5407  00258A  C047  FFD6         	movff	_freq,4054	;volatile
  5408  00258E  0012               	return	
  5409  002590                     __end_of_INTERRUPTION_Timer0:
  5410                           	opt stack 0
  5411                           pclatu	equ	0xFFB
  5412                           pclath	equ	0xFFA
  5413                           tblptru	equ	0xFF8
  5414                           tblptrh	equ	0xFF7
  5415                           tblptrl	equ	0xFF6
  5416                           tablat	equ	0xFF5
  5417                           prodh	equ	0xFF4
  5418                           prodl	equ	0xFF3
  5419                           intcon	equ	0xFF2
  5420                           postinc0	equ	0xFEE
  5421                           fsr0h	equ	0xFEA
  5422                           fsr0l	equ	0xFE9
  5423                           wreg	equ	0xFE8
  5424                           postinc1	equ	0xFE6
  5425                           postdec1	equ	0xFE5
  5426                           fsr1h	equ	0xFE2
  5427                           fsr1l	equ	0xFE1
  5428                           postinc2	equ	0xFDE
  5429                           postdec2	equ	0xFDD
  5430                           fsr2h	equ	0xFDA
  5431                           fsr2l	equ	0xFD9
  5432                           status	equ	0xFD8
  5433                           
  5434 ;; *************** function _PWM_Execute *****************
  5435 ;; Defined at:
  5436 ;;		line 19 in file "PWM.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;		None
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;		None
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      void 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5450 ;;      Params:         0       0       0       0       0       0       0       0       0
  5451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5453 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5454 ;;Total ram usage:        0 bytes
  5455 ;; Hardware stack levels used:    1
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_INTERRUPTION_Timer0
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text21
  5464  0022CC                     __ptext21:
  5465                           	opt stack 0
  5466  0022CC                     _PWM_Execute:
  5467                           	opt stack 25
  5468                           
  5469                           ;PWM.c: 21: PWM_Counter++;
  5470                           
  5471                           ;incstack = 0
  5472  0022CC  2A4A               	incf	_PWM_Counter,f,c
  5473                           
  5474                           ;PWM.c: 22: if(PWM_Counter == _pwm[0])
  5475  0022CE  504A               	movf	_PWM_Counter,w,c
  5476  0022D0  183B               	xorwf	__pwm,w,c
  5477  0022D2  B4D8               	btfsc	status,2,c
  5478                           
  5479                           ;PWM.c: 23: PORTB &= 0b11111011;
  5480  0022D4  9481               	bcf	3969,2,c	;volatile
  5481                           
  5482                           ;PWM.c: 24: if(PWM_Counter == _pwm[1])
  5483  0022D6  504A               	movf	_PWM_Counter,w,c
  5484  0022D8  183C               	xorwf	__pwm+1,w,c
  5485  0022DA  B4D8               	btfsc	status,2,c
  5486                           
  5487                           ;PWM.c: 25: PORTB &= 0b11110111;
  5488  0022DC  9681               	bcf	3969,3,c	;volatile
  5489                           
  5490                           ;PWM.c: 26: if(PWM_Counter == _pwm[2])
  5491  0022DE  504A               	movf	_PWM_Counter,w,c
  5492  0022E0  183D               	xorwf	__pwm+2,w,c
  5493  0022E2  B4D8               	btfsc	status,2,c
  5494                           
  5495                           ;PWM.c: 27: PORTB &= 0b11101111;
  5496  0022E4  9881               	bcf	3969,4,c	;volatile
  5497                           
  5498                           ;PWM.c: 28: if(PWM_Counter == _pwm[3])
  5499  0022E6  504A               	movf	_PWM_Counter,w,c
  5500  0022E8  183E               	xorwf	__pwm+3,w,c
  5501  0022EA  B4D8               	btfsc	status,2,c
  5502                           
  5503                           ;PWM.c: 29: PORTB &= 0b11011111;
  5504  0022EC  9A81               	bcf	3969,5,c	;volatile
  5505                           
  5506                           ;PWM.c: 30: if(PWM_Counter == _pwm[4])
  5507  0022EE  504A               	movf	_PWM_Counter,w,c
  5508  0022F0  183F               	xorwf	__pwm+4,w,c
  5509  0022F2  A4D8               	btfss	status,2,c
  5510  0022F4  D002               	goto	i2l1477
  5511                           
  5512                           ;PWM.c: 31: PORTB &= 0b10111111;
  5513  0022F6  9C81               	bcf	3969,6,c	;volatile
  5514  0022F8  D005               	goto	i2l1483
  5515  0022FA                     i2l1477:
  5516                           
  5517                           ;PWM.c: 32: else if(PWM_Counter == 0)
  5518  0022FA  504A               	movf	_PWM_Counter,w,c
  5519  0022FC  A4D8               	btfss	status,2,c
  5520  0022FE  D002               	goto	i2l1483
  5521                           
  5522                           ;PWM.c: 33: PORTB |= 0b11111100;
  5523  002300  0EFC               	movlw	252
  5524  002302  1281               	iorwf	3969,f,c	;volatile
  5525  002304                     i2l1483:
  5526                           
  5527                           ;PWM.c: 36: if(_pwm[0] == 0)
  5528  002304  503B               	movf	__pwm,w,c
  5529  002306  B4D8               	btfsc	status,2,c
  5530                           
  5531                           ;PWM.c: 37: PORTB &= 0b11111011;
  5532  002308  9481               	bcf	3969,2,c	;volatile
  5533                           
  5534                           ;PWM.c: 38: if(_pwm[1] == 0)
  5535  00230A  503C               	movf	__pwm+1,w,c
  5536  00230C  B4D8               	btfsc	status,2,c
  5537                           
  5538                           ;PWM.c: 39: PORTB &= 0b11110111;
  5539  00230E  9681               	bcf	3969,3,c	;volatile
  5540                           
  5541                           ;PWM.c: 40: if(_pwm[2] == 0)
  5542  002310  503D               	movf	__pwm+2,w,c
  5543  002312  B4D8               	btfsc	status,2,c
  5544                           
  5545                           ;PWM.c: 41: PORTB &= 0b11101111;
  5546  002314  9881               	bcf	3969,4,c	;volatile
  5547                           
  5548                           ;PWM.c: 42: if(_pwm[3] == 0)
  5549  002316  503E               	movf	__pwm+3,w,c
  5550  002318  B4D8               	btfsc	status,2,c
  5551                           
  5552                           ;PWM.c: 43: PORTB &= 0b11011111;
  5553  00231A  9A81               	bcf	3969,5,c	;volatile
  5554                           
  5555                           ;PWM.c: 44: if(_pwm[4] == 0)
  5556  00231C  503F               	movf	__pwm+4,w,c
  5557  00231E  A4D8               	btfss	status,2,c
  5558  002320  0012               	return	
  5559                           
  5560                           ;PWM.c: 45: PORTB &= 0b10111111;
  5561  002322  9C81               	bcf	3969,6,c	;volatile
  5562  002324  0012               	return	
  5563  002326                     __end_of_PWM_Execute:
  5564                           	opt stack 0
  5565                           pclatu	equ	0xFFB
  5566                           pclath	equ	0xFFA
  5567                           tblptru	equ	0xFF8
  5568                           tblptrh	equ	0xFF7
  5569                           tblptrl	equ	0xFF6
  5570                           tablat	equ	0xFF5
  5571                           prodh	equ	0xFF4
  5572                           prodl	equ	0xFF3
  5573                           intcon	equ	0xFF2
  5574                           postinc0	equ	0xFEE
  5575                           fsr0h	equ	0xFEA
  5576                           fsr0l	equ	0xFE9
  5577                           wreg	equ	0xFE8
  5578                           postinc1	equ	0xFE6
  5579                           postdec1	equ	0xFE5
  5580                           fsr1h	equ	0xFE2
  5581                           fsr1l	equ	0xFE1
  5582                           postinc2	equ	0xFDE
  5583                           postdec2	equ	0xFDD
  5584                           fsr2h	equ	0xFDA
  5585                           fsr2l	equ	0xFD9
  5586                           status	equ	0xFD8
  5587                           
  5588 ;; *************** function _INTERRUPTION_Serial *****************
  5589 ;; Defined at:
  5590 ;;		line 32 in file "Interrup.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;		None
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  1    wreg      void 
  5597 ;; Registers used:
  5598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5604 ;;      Params:         0       0       0       0       0       0       0       0       0
  5605 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5607 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5608 ;;Total ram usage:        0 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    2
  5611 ;; This function calls:
  5612 ;;		_SerialReadUntilToken
  5613 ;;		_waitToken
  5614 ;; This function is called by:
  5615 ;;		_INTERRUPTION
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text22
  5620  002018                     __ptext22:
  5621                           	opt stack 0
  5622  002018                     _INTERRUPTION_Serial:
  5623                           	opt stack 24
  5624                           
  5625                           ;Interrup.c: 33: if(PIR1bits.RCIF){
  5626                           
  5627                           ;incstack = 0
  5628  002018  AA9E               	btfss	3998,5,c	;volatile
  5629  00201A  0012               	return	
  5630                           
  5631                           ;Interrup.c: 35: PIR1bits.RCIF = 0;
  5632  00201C  9A9E               	bcf	3998,5,c	;volatile
  5633                           
  5634                           ;Interrup.c: 36: if(waitToken('_'))
  5635  00201E  0E5F               	movlw	95
  5636  002020  EC83  F012         	call	_waitToken
  5637  002024  A0D8               	btfss	status,0,c
  5638  002026  0012               	return	
  5639                           
  5640                           ;Interrup.c: 37: {
  5641                           ;Interrup.c: 38: SerialReadUntilToken('_');
  5642  002028  0E5F               	movlw	95
  5643  00202A  EC93  F011         	call	_SerialReadUntilToken
  5644                           
  5645                           ;Interrup.c: 41: if(SerialReceivedString[0] == '1'){
  5646  00202E  0E31               	movlw	49
  5647  002030  0101               	movlb	1	; () banked
  5648  002032  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5649  002034  B4D8               	btfsc	status,2,c
  5650                           
  5651                           ; BSR set to: 1
  5652                           ;Interrup.c: 42: _pwm[0]+=1;
  5653  002036  2A3B               	incf	__pwm,f,c
  5654                           
  5655                           ; BSR set to: 1
  5656                           ;Interrup.c: 43: }
  5657                           ;Interrup.c: 44: if(SerialReceivedString[0] == '0'){
  5658                           
  5659                           ; BSR set to: 1
  5660  002038  0E30               	movlw	48
  5661  00203A  0101               	movlb	1	; () banked
  5662  00203C  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5663  00203E  B4D8               	btfsc	status,2,c
  5664                           
  5665                           ; BSR set to: 1
  5666                           ;Interrup.c: 45: _pwm[0]-=1;
  5667  002040  063B               	decf	__pwm,f,c
  5668                           
  5669                           ; BSR set to: 1
  5670                           ;Interrup.c: 46: }
  5671                           ;Interrup.c: 47: if(SerialReceivedString[0] == '3'){
  5672                           
  5673                           ; BSR set to: 1
  5674  002042  0E33               	movlw	51
  5675  002044  0101               	movlb	1	; () banked
  5676  002046  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5677  002048  B4D8               	btfsc	status,2,c
  5678                           
  5679                           ; BSR set to: 1
  5680                           ;Interrup.c: 48: _pwm[1]+=1;
  5681  00204A  2A3C               	incf	__pwm+1,f,c
  5682                           
  5683                           ; BSR set to: 1
  5684                           ;Interrup.c: 49: }
  5685                           ;Interrup.c: 50: if(SerialReceivedString[0] == '2'){
  5686                           
  5687                           ; BSR set to: 1
  5688  00204C  0E32               	movlw	50
  5689  00204E  0101               	movlb	1	; () banked
  5690  002050  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5691  002052  B4D8               	btfsc	status,2,c
  5692                           
  5693                           ; BSR set to: 1
  5694                           ;Interrup.c: 51: _pwm[1]-=1;
  5695  002054  063C               	decf	__pwm+1,f,c
  5696                           
  5697                           ; BSR set to: 1
  5698                           ;Interrup.c: 52: }
  5699                           ;Interrup.c: 53: if(SerialReceivedString[0] == '5'){
  5700                           
  5701                           ; BSR set to: 1
  5702  002056  0E35               	movlw	53
  5703  002058  0101               	movlb	1	; () banked
  5704  00205A  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5705  00205C  B4D8               	btfsc	status,2,c
  5706                           
  5707                           ; BSR set to: 1
  5708                           ;Interrup.c: 54: _pwm[2]+=1;
  5709  00205E  2A3D               	incf	__pwm+2,f,c
  5710                           
  5711                           ; BSR set to: 1
  5712                           ;Interrup.c: 55: }
  5713                           ;Interrup.c: 56: if(SerialReceivedString[0] == '4'){
  5714                           
  5715                           ; BSR set to: 1
  5716  002060  0E34               	movlw	52
  5717  002062  0101               	movlb	1	; () banked
  5718  002064  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5719  002066  B4D8               	btfsc	status,2,c
  5720                           
  5721                           ; BSR set to: 1
  5722                           ;Interrup.c: 57: _pwm[2]-=1;
  5723  002068  063D               	decf	__pwm+2,f,c
  5724                           
  5725                           ; BSR set to: 1
  5726                           ;Interrup.c: 58: }
  5727                           ;Interrup.c: 59: if(SerialReceivedString[0] == '7'){
  5728                           
  5729                           ; BSR set to: 1
  5730  00206A  0E37               	movlw	55
  5731  00206C  0101               	movlb	1	; () banked
  5732  00206E  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5733  002070  B4D8               	btfsc	status,2,c
  5734                           
  5735                           ; BSR set to: 1
  5736                           ;Interrup.c: 60: _pwm[3]+=1;
  5737  002072  2A3E               	incf	__pwm+3,f,c
  5738                           
  5739                           ; BSR set to: 1
  5740                           ;Interrup.c: 61: }
  5741                           ;Interrup.c: 62: if(SerialReceivedString[0] == '6'){
  5742                           
  5743                           ; BSR set to: 1
  5744  002074  0E36               	movlw	54
  5745  002076  0101               	movlb	1	; () banked
  5746  002078  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5747  00207A  B4D8               	btfsc	status,2,c
  5748                           
  5749                           ; BSR set to: 1
  5750                           ;Interrup.c: 63: _pwm[3]-=1;
  5751  00207C  063E               	decf	__pwm+3,f,c
  5752                           
  5753                           ; BSR set to: 1
  5754                           ;Interrup.c: 64: }
  5755                           ;Interrup.c: 65: if(SerialReceivedString[0] == 't'){
  5756                           
  5757                           ; BSR set to: 1
  5758  00207E  0E74               	movlw	116
  5759  002080  0101               	movlb	1	; () banked
  5760  002082  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5761  002084  A4D8               	btfss	status,2,c
  5762  002086  D004               	goto	i2l2875
  5763                           
  5764                           ; BSR set to: 1
  5765                           ;Interrup.c: 66: _pwm[0]=255;
  5766  002088  683B               	setf	__pwm,c
  5767                           
  5768                           ;Interrup.c: 67: _pwm[1]=255;
  5769  00208A  683C               	setf	__pwm+1,c
  5770                           
  5771                           ;Interrup.c: 68: _pwm[2]=255;
  5772  00208C  683D               	setf	__pwm+2,c
  5773                           
  5774                           ;Interrup.c: 69: _pwm[3]=255;
  5775  00208E  683E               	setf	__pwm+3,c
  5776  002090                     i2l2875:
  5777                           
  5778                           ; BSR set to: 1
  5779                           ;Interrup.c: 70: }
  5780                           ;Interrup.c: 71: if(SerialReceivedString[0] == 'g'){
  5781  002090  0E67               	movlw	103
  5782  002092  0101               	movlb	1	; () banked
  5783  002094  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5784  002096  A4D8               	btfss	status,2,c
  5785  002098  D008               	goto	i2l2879
  5786                           
  5787                           ; BSR set to: 1
  5788                           ;Interrup.c: 72: _pwm[0]=127;
  5789  00209A  0E7F               	movlw	127
  5790  00209C  6E3B               	movwf	__pwm,c
  5791                           
  5792                           ;Interrup.c: 73: _pwm[1]=127;
  5793  00209E  0E7F               	movlw	127
  5794  0020A0  6E3C               	movwf	__pwm+1,c
  5795                           
  5796                           ;Interrup.c: 74: _pwm[2]=127;
  5797  0020A2  0E7F               	movlw	127
  5798  0020A4  6E3D               	movwf	__pwm+2,c
  5799                           
  5800                           ;Interrup.c: 75: _pwm[3]=127;
  5801  0020A6  0E7F               	movlw	127
  5802  0020A8  6E3E               	movwf	__pwm+3,c
  5803  0020AA                     i2l2879:
  5804                           
  5805                           ; BSR set to: 1
  5806                           ;Interrup.c: 76: }
  5807                           ;Interrup.c: 77: if(SerialReceivedString[0] == 'b'){
  5808  0020AA  0E62               	movlw	98
  5809  0020AC  0101               	movlb	1	; () banked
  5810  0020AE  19B8               	xorwf	_SerialReceivedString& (0+255),w,b
  5811  0020B0  A4D8               	btfss	status,2,c
  5812  0020B2  0012               	return	
  5813                           
  5814                           ; BSR set to: 1
  5815                           ;Interrup.c: 78: _pwm[0]=1;
  5816  0020B4  0E01               	movlw	1
  5817  0020B6  6E3B               	movwf	__pwm,c
  5818                           
  5819                           ;Interrup.c: 79: _pwm[1]=1;
  5820  0020B8  0E01               	movlw	1
  5821  0020BA  6E3C               	movwf	__pwm+1,c
  5822                           
  5823                           ;Interrup.c: 80: _pwm[2]=1;
  5824  0020BC  0E01               	movlw	1
  5825  0020BE  6E3D               	movwf	__pwm+2,c
  5826                           
  5827                           ;Interrup.c: 81: _pwm[3]=1;
  5828  0020C0  0E01               	movlw	1
  5829  0020C2  6E3E               	movwf	__pwm+3,c
  5830                           
  5831                           ; BSR set to: 1
  5832                           
  5833                           ; BSR set to: 1
  5834                           
  5835                           ; BSR set to: 1
  5836  0020C4  0012               	return	
  5837  0020C6                     __end_of_INTERRUPTION_Serial:
  5838                           	opt stack 0
  5839                           pclatu	equ	0xFFB
  5840                           pclath	equ	0xFFA
  5841                           tblptru	equ	0xFF8
  5842                           tblptrh	equ	0xFF7
  5843                           tblptrl	equ	0xFF6
  5844                           tablat	equ	0xFF5
  5845                           prodh	equ	0xFF4
  5846                           prodl	equ	0xFF3
  5847                           intcon	equ	0xFF2
  5848                           postinc0	equ	0xFEE
  5849                           fsr0h	equ	0xFEA
  5850                           fsr0l	equ	0xFE9
  5851                           wreg	equ	0xFE8
  5852                           postinc1	equ	0xFE6
  5853                           postdec1	equ	0xFE5
  5854                           fsr1h	equ	0xFE2
  5855                           fsr1l	equ	0xFE1
  5856                           postinc2	equ	0xFDE
  5857                           postdec2	equ	0xFDD
  5858                           fsr2h	equ	0xFDA
  5859                           fsr2l	equ	0xFD9
  5860                           status	equ	0xFD8
  5861                           
  5862 ;; *************** function _waitToken *****************
  5863 ;; Defined at:
  5864 ;;		line 115 in file "Serial.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  value           1    wreg     unsigned char 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  value           1    0[COMRAM] unsigned char 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;		None               void
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5878 ;;      Params:         0       0       0       0       0       0       0       0       0
  5879 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5881 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5882 ;;Total ram usage:        1 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    1
  5885 ;; This function calls:
  5886 ;;		_SerialRead
  5887 ;; This function is called by:
  5888 ;;		_INTERRUPTION_Serial
  5889 ;;		_WifiTCPRead
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text23
  5894  002506                     __ptext23:
  5895                           	opt stack 0
  5896  002506                     _waitToken:
  5897                           	opt stack 24
  5898                           
  5899                           ;incstack = 0
  5900                           ;waitToken@value stored from wreg
  5901  002506  6E01               	movwf	waitToken@value,c
  5902                           
  5903                           ;Serial.c: 117: if(!RCIF)
  5904  002508  BA9E               	btfsc	3998,5,c	;volatile
  5905  00250A  D002               	goto	i2l2589
  5906                           
  5907                           ;Serial.c: 118: return 0;
  5908  00250C  90D8               	bcf	status,0,c
  5909  00250E  0012               	return	
  5910  002510                     i2l2589:
  5911                           
  5912                           ;Serial.c: 120: if((SerialRead() == value)){
  5913  002510  ECAC  F012         	call	_SerialRead	;wreg free
  5914  002514  1801               	xorwf	waitToken@value,w,c
  5915  002516  A4D8               	btfss	status,2,c
  5916  002518  D004               	goto	i2l2599
  5917                           
  5918                           ;Serial.c: 121: RCREG = value+1;
  5919  00251A  2801               	incf	waitToken@value,w,c
  5920  00251C  6EAE               	movwf	4014,c	;volatile
  5921                           
  5922                           ;Serial.c: 122: return 1;
  5923  00251E  80D8               	bsf	status,0,c
  5924                           
  5925                           ;Serial.c: 123: }
  5926  002520  0012               	return	
  5927  002522                     i2l2599:
  5928                           
  5929                           ;Serial.c: 124: else
  5930                           ;Serial.c: 125: return 0;
  5931  002522  90D8               	bcf	status,0,c
  5932  002524  0012               	return	
  5933  002526                     __end_of_waitToken:
  5934                           	opt stack 0
  5935                           pclatu	equ	0xFFB
  5936                           pclath	equ	0xFFA
  5937                           tblptru	equ	0xFF8
  5938                           tblptrh	equ	0xFF7
  5939                           tblptrl	equ	0xFF6
  5940                           tablat	equ	0xFF5
  5941                           prodh	equ	0xFF4
  5942                           prodl	equ	0xFF3
  5943                           intcon	equ	0xFF2
  5944                           postinc0	equ	0xFEE
  5945                           fsr0h	equ	0xFEA
  5946                           fsr0l	equ	0xFE9
  5947                           wreg	equ	0xFE8
  5948                           postinc1	equ	0xFE6
  5949                           postdec1	equ	0xFE5
  5950                           fsr1h	equ	0xFE2
  5951                           fsr1l	equ	0xFE1
  5952                           postinc2	equ	0xFDE
  5953                           postdec2	equ	0xFDD
  5954                           fsr2h	equ	0xFDA
  5955                           fsr2l	equ	0xFD9
  5956                           status	equ	0xFD8
  5957                           
  5958 ;; *************** function _SerialReadUntilToken *****************
  5959 ;; Defined at:
  5960 ;;		line 136 in file "Serial.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  charToCompar    1    wreg     const unsigned char 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  charToCompar    1    1[COMRAM] const unsigned char 
  5965 ;;  i               2    2[COMRAM] unsigned int 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;                  1    wreg      void 
  5968 ;; Registers used:
  5969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5975 ;;      Params:         0       0       0       0       0       0       0       0       0
  5976 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5977 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5978 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5979 ;;Total ram usage:        4 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    1
  5982 ;; This function calls:
  5983 ;;		_SerialRead
  5984 ;; This function is called by:
  5985 ;;		_INTERRUPTION_Serial
  5986 ;;		_WifiTCPRead
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text24
  5991  002326                     __ptext24:
  5992                           	opt stack 0
  5993  002326                     _SerialReadUntilToken:
  5994                           	opt stack 24
  5995                           
  5996                           ;incstack = 0
  5997                           ;SerialReadUntilToken@charToCompare stored from wreg
  5998  002326  6E02               	movwf	SerialReadUntilToken@charToCompare,c
  5999                           
  6000                           ;Serial.c: 138: unsigned i = 0;
  6001  002328  0E00               	movlw	0
  6002  00232A  6E04               	movwf	SerialReadUntilToken@i+1,c
  6003  00232C  0E00               	movlw	0
  6004  00232E  6E03               	movwf	SerialReadUntilToken@i,c
  6005  002330                     i2l2605:
  6006                           
  6007                           ;Serial.c: 140: {
  6008                           ;Serial.c: 141: SerialReceivedString[i] = SerialRead();
  6009  002330  0EB8               	movlw	low _SerialReceivedString
  6010  002332  2403               	addwf	SerialReadUntilToken@i,w,c
  6011  002334  6ED9               	movwf	fsr2l,c
  6012  002336  0E01               	movlw	high _SerialReceivedString
  6013  002338  2004               	addwfc	SerialReadUntilToken@i+1,w,c
  6014  00233A  6EDA               	movwf	fsr2h,c
  6015  00233C  ECAC  F012         	call	_SerialRead	;wreg free
  6016  002340  6EDF               	movwf	indf2,c
  6017                           
  6018                           ;Serial.c: 142: if( charToCompare == SerialReceivedString[i])
  6019  002342  0EB8               	movlw	low _SerialReceivedString
  6020  002344  2403               	addwf	SerialReadUntilToken@i,w,c
  6021  002346  6ED9               	movwf	fsr2l,c
  6022  002348  0E01               	movlw	high _SerialReceivedString
  6023  00234A  2004               	addwfc	SerialReadUntilToken@i+1,w,c
  6024  00234C  6EDA               	movwf	fsr2h,c
  6025  00234E  5002               	movf	SerialReadUntilToken@charToCompare,w,c
  6026  002350  18DE               	xorwf	postinc2,w,c
  6027  002352  A4D8               	btfss	status,2,c
  6028  002354  D009               	goto	i2l2611
  6029                           
  6030                           ;Serial.c: 143: {
  6031                           ;Serial.c: 144: SerialReceivedString[i] = '\0';
  6032  002356  0EB8               	movlw	low _SerialReceivedString
  6033  002358  2403               	addwf	SerialReadUntilToken@i,w,c
  6034  00235A  6ED9               	movwf	fsr2l,c
  6035  00235C  0E01               	movlw	high _SerialReceivedString
  6036  00235E  2004               	addwfc	SerialReadUntilToken@i+1,w,c
  6037  002360  6EDA               	movwf	fsr2h,c
  6038  002362  0E00               	movlw	0
  6039  002364  6EDF               	movwf	indf2,c
  6040                           
  6041                           ;Serial.c: 145: break;
  6042  002366  D003               	goto	i2l426
  6043  002368                     i2l2611:
  6044                           
  6045                           ;Serial.c: 146: }
  6046                           ;Serial.c: 147: ++i;
  6047  002368  4A03               	infsnz	SerialReadUntilToken@i,f,c
  6048  00236A  2A04               	incf	SerialReadUntilToken@i+1,f,c
  6049  00236C  D7E1               	goto	i2l2605
  6050  00236E                     i2l426:
  6051                           
  6052                           ;Serial.c: 148: }
  6053                           ;Serial.c: 149: SerialLen = i;
  6054  00236E  C003  F045         	movff	SerialReadUntilToken@i,_SerialLen
  6055  002372  C004  F046         	movff	SerialReadUntilToken@i+1,_SerialLen+1
  6056                           
  6057                           ;Serial.c: 150: return;
  6058  002376  0012               	return		;funcret
  6059  002378                     __end_of_SerialReadUntilToken:
  6060                           	opt stack 0
  6061                           pclatu	equ	0xFFB
  6062                           pclath	equ	0xFFA
  6063                           tblptru	equ	0xFF8
  6064                           tblptrh	equ	0xFF7
  6065                           tblptrl	equ	0xFF6
  6066                           tablat	equ	0xFF5
  6067                           prodh	equ	0xFF4
  6068                           prodl	equ	0xFF3
  6069                           intcon	equ	0xFF2
  6070                           postinc0	equ	0xFEE
  6071                           fsr0h	equ	0xFEA
  6072                           fsr0l	equ	0xFE9
  6073                           wreg	equ	0xFE8
  6074                           postinc1	equ	0xFE6
  6075                           postdec1	equ	0xFE5
  6076                           fsr1h	equ	0xFE2
  6077                           fsr1l	equ	0xFE1
  6078                           indf2	equ	0xFDF
  6079                           postinc2	equ	0xFDE
  6080                           postdec2	equ	0xFDD
  6081                           fsr2h	equ	0xFDA
  6082                           fsr2l	equ	0xFD9
  6083                           status	equ	0xFD8
  6084                           
  6085 ;; *************** function _SerialRead *****************
  6086 ;; Defined at:
  6087 ;;		line 75 in file "Serial.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;		None
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;		None
  6092 ;; Return value:  Size  Location     Type
  6093 ;;                  1    wreg      unsigned char 
  6094 ;; Registers used:
  6095 ;;		wreg, status,2
  6096 ;; Tracked objects:
  6097 ;;		On entry : 0/0
  6098 ;;		On exit  : 0/0
  6099 ;;		Unchanged: 0/0
  6100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6101 ;;      Params:         0       0       0       0       0       0       0       0       0
  6102 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6104 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6105 ;;Total ram usage:        0 bytes
  6106 ;; Hardware stack levels used:    1
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_waitToken
  6111 ;;		_SerialReadUntilToken
  6112 ;;		_SerialReadString
  6113 ;;		_SerialReceiveNChar
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text25
  6118  002558                     __ptext25:
  6119                           	opt stack 0
  6120  002558                     _SerialRead:
  6121                           	opt stack 24
  6122                           
  6123                           ;Serial.c: 77: if(OERR)
  6124                           
  6125                           ;incstack = 0
  6126  002558  A2AB               	btfss	4011,1,c	;volatile
  6127  00255A  D002               	goto	i2l393
  6128                           
  6129                           ;Serial.c: 78: {
  6130                           ;Serial.c: 79: CREN = 0;
  6131  00255C  98AB               	bcf	4011,4,c	;volatile
  6132                           
  6133                           ;Serial.c: 80: CREN = 1;
  6134  00255E  88AB               	bsf	4011,4,c	;volatile
  6135  002560                     i2l393:
  6136  002560  AA9E               	btfss	3998,5,c	;volatile
  6137  002562  D7FE               	goto	i2l393
  6138                           
  6139                           ;Serial.c: 83: SerialReceivedData = RCREG;
  6140  002564  CFAE F04B          	movff	4014,_SerialReceivedData	;volatile
  6141                           
  6142                           ;Serial.c: 84: RCIF = 0;
  6143  002568  9A9E               	bcf	3998,5,c	;volatile
  6144                           
  6145                           ;Serial.c: 85: return RCREG;
  6146  00256A  50AE               	movf	4014,w,c	;volatile
  6147  00256C  0012               	return	
  6148  00256E                     __end_of_SerialRead:
  6149                           	opt stack 0
  6150                           pclatu	equ	0xFFB
  6151                           pclath	equ	0xFFA
  6152                           tblptru	equ	0xFF8
  6153                           tblptrh	equ	0xFF7
  6154                           tblptrl	equ	0xFF6
  6155                           tablat	equ	0xFF5
  6156                           prodh	equ	0xFF4
  6157                           prodl	equ	0xFF3
  6158                           intcon	equ	0xFF2
  6159                           postinc0	equ	0xFEE
  6160                           fsr0h	equ	0xFEA
  6161                           fsr0l	equ	0xFE9
  6162                           wreg	equ	0xFE8
  6163                           postinc1	equ	0xFE6
  6164                           postdec1	equ	0xFE5
  6165                           fsr1h	equ	0xFE2
  6166                           fsr1l	equ	0xFE1
  6167                           indf2	equ	0xFDF
  6168                           postinc2	equ	0xFDE
  6169                           postdec2	equ	0xFDD
  6170                           fsr2h	equ	0xFDA
  6171                           fsr2l	equ	0xFD9
  6172                           status	equ	0xFD8
  6173                           pclatu	equ	0xFFB
  6174                           pclath	equ	0xFFA
  6175                           tblptru	equ	0xFF8
  6176                           tblptrh	equ	0xFF7
  6177                           tblptrl	equ	0xFF6
  6178                           tablat	equ	0xFF5
  6179                           prodh	equ	0xFF4
  6180                           prodl	equ	0xFF3
  6181                           intcon	equ	0xFF2
  6182                           postinc0	equ	0xFEE
  6183                           fsr0h	equ	0xFEA
  6184                           fsr0l	equ	0xFE9
  6185                           wreg	equ	0xFE8
  6186                           postinc1	equ	0xFE6
  6187                           postdec1	equ	0xFE5
  6188                           fsr1h	equ	0xFE2
  6189                           fsr1l	equ	0xFE1
  6190                           indf2	equ	0xFDF
  6191                           postinc2	equ	0xFDE
  6192                           postdec2	equ	0xFDD
  6193                           fsr2h	equ	0xFDA
  6194                           fsr2l	equ	0xFD9
  6195                           status	equ	0xFD8
  6196                           
  6197                           	psect	rparam
  6198  0000                     pclatu	equ	0xFFB
  6199                           pclath	equ	0xFFA
  6200                           tblptru	equ	0xFF8
  6201                           tblptrh	equ	0xFF7
  6202                           tblptrl	equ	0xFF6
  6203                           tablat	equ	0xFF5
  6204                           prodh	equ	0xFF4
  6205                           prodl	equ	0xFF3
  6206                           intcon	equ	0xFF2
  6207                           postinc0	equ	0xFEE
  6208                           fsr0h	equ	0xFEA
  6209                           fsr0l	equ	0xFE9
  6210                           wreg	equ	0xFE8
  6211                           postinc1	equ	0xFE6
  6212                           postdec1	equ	0xFE5
  6213                           fsr1h	equ	0xFE2
  6214                           fsr1l	equ	0xFE1
  6215                           indf2	equ	0xFDF
  6216                           postinc2	equ	0xFDE
  6217                           postdec2	equ	0xFDD
  6218                           fsr2h	equ	0xFDA
  6219                           fsr2l	equ	0xFD9
  6220                           status	equ	0xFD8
  6221                           
  6222                           	psect	temp
  6223  00004D                     btemp:
  6224                           	opt stack 0
  6225  00004D                     	ds	1
  6226  0000                     int$flags	set	btemp
  6227                           pclatu	equ	0xFFB
  6228                           pclath	equ	0xFFA
  6229                           tblptru	equ	0xFF8
  6230                           tblptrh	equ	0xFF7
  6231                           tblptrl	equ	0xFF6
  6232                           tablat	equ	0xFF5
  6233                           prodh	equ	0xFF4
  6234                           prodl	equ	0xFF3
  6235                           intcon	equ	0xFF2
  6236                           postinc0	equ	0xFEE
  6237                           fsr0h	equ	0xFEA
  6238                           fsr0l	equ	0xFE9
  6239                           wreg	equ	0xFE8
  6240                           postinc1	equ	0xFE6
  6241                           postdec1	equ	0xFE5
  6242                           fsr1h	equ	0xFE2
  6243                           fsr1l	equ	0xFE1
  6244                           indf2	equ	0xFDF
  6245                           postinc2	equ	0xFDE
  6246                           postdec2	equ	0xFDD
  6247                           fsr2h	equ	0xFDA
  6248                           fsr2l	equ	0xFD9
  6249                           status	equ	0xFD8


Data Sizes:
    Strings     125
    Constant    0
    Data        21
    BSS         401
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160     33     134
    BANK1           256      0     254
    BANK2           256     41      91
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__strchr	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), SerialReceivedString(BANK1[50]), 

    sp__ADC_Read	PTR unsigned int  size(2) Largest target is 20
		 -> ADC(BANK1[20]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), SerialReceivedString(BANK1[50]), 


Critical Paths under _main in COMRAM

    _main->___ftdiv
    _readGIRO->_WriteI2C
    _readACC->_WriteI2C
    _WriteI2C->_IdleI2C
    ___awtoft->___awdiv
    ___awdiv->_readACC
    ___awdiv->_readGIRO
    _PID_outputControlCalc->___ftdiv
    ___ftneg->___ftpack
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___awtoft

Critical Paths under _INTERRUPTION in COMRAM

    _INTERRUPTION_Serial->_SerialReadUntilToken

Critical Paths under _main in BANK0

    _main->_PID_outputControlCalc
    _PID_outputControlCalc->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _INTERRUPTION in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPTION in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPTION in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPTION in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPTION in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPTION in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPTION in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPTION in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                71    71      0   65723
                                             30 BANK0      3     3      0
                                              0 BANK2     41    41      0
              _PID_outputControlCalc
                           _PWM_Init
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                            _delayMS
                           _initUART
                            _readACC
                           _readGIRO
 ---------------------------------------------------------------------------------
 (1) _readGIRO                                             2     2      0      96
                                             20 COMRAM     2     2      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _readACC                                              2     2      0      96
                                             20 COMRAM     2     2      0
                            _IdleI2C
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             1     1      0      31
                                             19 COMRAM     1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (3) _IdleI2C                                              1     1      0       0
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delayMS                                              5     3      2     145
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     679
                                             18 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    3367
                                             30 COMRAM     4     1      3
                            ___awdiv (ARG)
                           ___ftpack
                            _readACC (ARG)
                           _readGIRO (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    2139
                                             22 COMRAM     8     4      4
                            _readACC (ARG)
                           _readGIRO (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PID_outputControlCalc                               12     5      7   28734
                                             18 BANK0     12     5      7
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3    1759
                                             26 COMRAM     3     0      3
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    7378
                                             46 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            _readACC (ARG)
                           _readGIRO (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               9     3      6    1122
                                             18 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    5000
                                             55 COMRAM     3     3      0
                                              6 BANK0     12     6      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6   11463
                                             34 COMRAM    12     6      6
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                            _readACC (ARG)
                           _readGIRO (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2464
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPTION                                        14    14      0     156
                                              4 COMRAM    14    14      0
                _INTERRUPTION_Serial
                _INTERRUPTION_Timer0
 ---------------------------------------------------------------------------------
 (5) _INTERRUPTION_Timer0                                  0     0      0       0
                        _PWM_Execute
 ---------------------------------------------------------------------------------
 (6) _PWM_Execute                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INTERRUPTION_Serial                                  0     0      0     156
               _SerialReadUntilToken
                          _waitToken
 ---------------------------------------------------------------------------------
 (6) _waitToken                                            1     1      0      44
                                              0 COMRAM     1     1      0
                         _SerialRead
 ---------------------------------------------------------------------------------
 (6) _SerialReadUntilToken                                 4     4      0     112
                                              0 COMRAM     4     4      0
                         _SerialRead
 ---------------------------------------------------------------------------------
 (7) _SerialRead                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PID_outputControlCalc
     ___ftadd
       ___awdiv (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___awtoft (ARG)
         ___awdiv (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___ftpack (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _readACC (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _readGIRO (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     ___ftdiv
       ___ftadd (ARG)
         ___awdiv (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___awtoft (ARG)
           ___awdiv (ARG)
             _readACC (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
             _readGIRO (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
           ___ftpack (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftmul (ARG)
         ___awdiv (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___awtoft (ARG)
           ___awdiv (ARG)
             _readACC (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
             _readGIRO (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
           ___ftpack (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___ftadd (ARG)
           ___awdiv (ARG)
             _readACC (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
             _readGIRO (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
           ___awtoft (ARG)
             ___awdiv (ARG)
               _readACC (ARG)
                 _IdleI2C
                 _ReadI2C
                 _WriteI2C
                   _IdleI2C
               _readGIRO (ARG)
                 _IdleI2C
                 _ReadI2C
                 _WriteI2C
                   _IdleI2C
             ___ftpack (ARG)
             _readACC (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
             _readGIRO (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___awtoft (ARG)
         ___awdiv (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___ftpack (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftadd (ARG)
         ___awdiv (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___awtoft (ARG)
           ___awdiv (ARG)
             _readACC (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
             _readGIRO (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
           ___ftpack (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _readACC (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _readGIRO (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     ___ftneg
       ___ftpack (ARG)
   _PWM_Init
   ___awdiv
     _readACC (ARG)
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
     _readGIRO (ARG)
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   ___awtoft
     ___awdiv (ARG)
       _readACC (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _readGIRO (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     ___ftpack (ARG)
     _readACC (ARG)
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
     _readGIRO (ARG)
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   ___ftadd
     ___awdiv (ARG)
       _readACC (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _readGIRO (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     ___awtoft (ARG)
       ___awdiv (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftpack (ARG)
       _readACC (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _readGIRO (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     _readACC (ARG)
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
     _readGIRO (ARG)
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   ___ftdiv
     ___ftadd (ARG)
       ___awdiv (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___awtoft (ARG)
         ___awdiv (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___ftpack (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _readACC (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _readGIRO (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     ___ftmul (ARG)
       ___awdiv (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___awtoft (ARG)
         ___awdiv (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___ftpack (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftadd (ARG)
         ___awdiv (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___awtoft (ARG)
           ___awdiv (ARG)
             _readACC (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
             _readGIRO (ARG)
               _IdleI2C
               _ReadI2C
               _WriteI2C
                 _IdleI2C
           ___ftpack (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       _readACC (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _readGIRO (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       _readACC (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _readGIRO (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     ___awtoft (ARG)
       ___awdiv (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftpack (ARG)
       _readACC (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _readGIRO (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     ___ftadd (ARG)
       ___awdiv (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___awtoft (ARG)
         ___awdiv (ARG)
           _readACC (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
           _readGIRO (ARG)
             _IdleI2C
             _ReadI2C
             _WriteI2C
               _IdleI2C
         ___ftpack (ARG)
         _readACC (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
         _readGIRO (ARG)
           _IdleI2C
           _ReadI2C
           _WriteI2C
             _IdleI2C
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       _readACC (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
       _readGIRO (ARG)
         _IdleI2C
         _ReadI2C
         _WriteI2C
           _IdleI2C
     ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     _readACC (ARG)
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
     _readGIRO (ARG)
       _IdleI2C
       _ReadI2C
       _WriteI2C
         _IdleI2C
   ___ftneg
     ___ftpack (ARG)
   ___fttol
   _delayMS
   _initUART
   _readACC
     _IdleI2C
     _ReadI2C
     _WriteI2C
       _IdleI2C
   _readGIRO
     _IdleI2C
     _ReadI2C
     _WriteI2C
       _IdleI2C

 _INTERRUPTION (ROOT)
   _INTERRUPTION_Serial
     _SerialReadUntilToken
       _SerialRead
     _waitToken
       _SerialRead
   _INTERRUPTION_Timer0
     _PWM_Execute

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     29      5B       9       35.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      86       5       83.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     3A      4C       1       80.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     22B      20        0.0%
DATA                 0      0     22B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Feb 02 19:40:43 2017

                                _A 0194                                  _h 0040  
                      _SSPSTATbits 000FC7                                 l81 240C  
                               l90 2444                                 l84 2426  
                               l87 243E                                 l96 23C8  
                               l99 23E2                       ___awdiv@sign 001C  
      __end_of_INTERRUPTION_Serial 20C6        __end_of_INTERRUPTION_Timer0 2590  
                     ___ftadd@exp1 002E                       ___ftadd@exp2 002D  
                     ___ftadd@sign 002C                                l102 23FA  
                              l105 2400                                _ADC 01EA  
                              l363 24D4                                l637 1762  
                              l665 2538                                l666 253A  
                              l690 2398                                l951 1AAE  
                              l928 1FF8                                l955 1AD8  
                              l699 23B8                                l966 1B88  
                              l975 1BA4                                l986 1D20  
                      _PWM_Counter 004A                                _RX9 007D5E  
                              _TX9 007D66                        _PWM_Execute 22CC  
                              _pid 0100                                _vel 00AE  
                              _pos 00A5                                prod 000FF3  
                              wreg 000FE8                       __CFG_LVP$OFF 000000  
                     ___ftdiv@cntr 00C9                       ___ftdiv@sign 00CE  
                     __CFG_WDT$OFF 000000                               l1008 24F8  
                             l4013 21D0                               l4005 21B8  
                             l4009 21C2                               l4025 2460  
                             l4035 1EA2                               l4053 1F08  
                             l4071 1F58                               l4063 1F30  
                             l4207 0AE8                               l4065 1F3C  
                             l4057 1F18                               l3611 1FB0  
                             l3603 1F7A                               l4067 1F42  
                             l3615 1FC6                               l3607 1F88  
                             l3711 1B38                               l4255 109C  
                             l3617 1FE4                               l3609 1F92  
                             l3713 1B42                               l3705 1B16  
                             l4265 11D4                               l4193 0ABC  
                             l4185 0AA6                               l3619 1FEE  
                             l3731 1BC0                               l3723 1B76  
                             l3715 1B4C                               l3803 1DAE  
                             l4275 130C                               l3741 1BF0  
                             l3725 1B80                               l3717 1B54  
                             l3821 1E06                               l4285 1434  
                             l4189 0AB0                               l3751 1C4A  
                             l3831 1E38                               l3655 23A4  
                             l3817 1DF0                               l3683 1ABC  
                             l3843 20F6                               l3827 1E22  
                             l3595 256E                               l3757 1C7E  
                             l3853 2152                               l3847 2126  
                             l3689 1AE6                               l3777 1CDE  
                             l3961 196C                               l3963 198E  
                             l3797 1D82                               l3981 216A  
                             l3895 24C0                               l3969 1A46  
                             l3993 2190                               l3995 2198  
                             l3987 217A                               l3997 219C  
                             STR_1 088C                               STR_2 0856  
                             STR_3 081B                               STR_4 0864  
                             STR_5 0840                               STR_6 0872  
                             STR_7 0880                               STR_8 0895  
                             _BRGH 007D62                               _CREN 007D5C  
                             _FERR 007D5A                               _CSRC 007D67  
                             _LATB 000F8A                               u4110 1EC0  
                             u4115 1EB8                               u3531 1A7A  
                             u4091 1E86                               u3541 1A8E  
                             u4407 1486                               u4417 1498  
                             u3811 1D92                               u4427 14AA  
                             u3741 1C28                               u4437 14BC  
                             u4447 14CE                               u3761 1C5C  
                             u4457 14E0                               u4377 1450  
                             u4467 14F2                               u4387 1462  
                             _RCIE 007CED                               _RCIF 007CF5  
                             u4477 1504                               u4397 1474  
                             u3791 1D66                               u4487 1516  
                             u4497 24C6                               _OERR 007D59  
                             _RX9D 007D58                               _SPEN 007D5F  
                             _TX9D 007D60                               _SREN 007D5D  
                             _TRMT 007D61                               _TXIE 007CEC  
                             _TXIF 007CF4                               _TXEN 007D65  
                             _SYNC 007D64                       __CFG_PWRT$ON 000000  
                             __pwm 003B                               _main 089A  
                             _giro 008A                               _freq 0047  
                     ___ftpack@arg 0013                       ___ftpack@exp 0016  
                             fsr0h 000FEA                               fsr1h 000FE2  
                             fsr0l 000FE9                               fsr2h 000FDA  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004D  
                             pclat 000FFA                        main@pwmTemp 0258  
                             prodh 000FF4                               prodl 000FF3  
                             start 0816                    __end_of_IdleI2C 2580  
           ??_SerialReadUntilToken 0001                      __CFG_MCLRE$ON 000000  
                     ___ftmul@cntr 00C1                       ___param_bank 000010  
                     ___ftmul@sign 00C2                    __end_of_ReadI2C 2542  
   __size_of_PID_outputControlCalc 0546      __end_of_PID_outputControlCalc 1A6A  
                     ___fttol@exp1 0021                       ___fttol@lval 001D  
                    __CFG_PLLDIV$5 000000                              _ADDEN 007D5B  
                            ?_main 0001                    __end_of___awdiv 21DA  
                  __end_of___ftadd 1C16                    __end_of___ftdiv 1D56  
                  __end_of___ftneg 2506                    __end_of___ftmul 1E76  
                            _T0CON 000FD5                    ___awdiv@divisor 0019  
                  __end_of___fttol 1F6A                              i2l426 236E  
                            i2l393 2560                    ___awdiv@counter 001B  
                            _RCREG 000FAE                              _SENDB 007D63  
                            _TMR0L 000FD6                              _SPBRG 000FAF  
                            _PORTB 000F81                      __CFG_USBDIV$2 000000  
                            _TRISA 000F92                              _TRISB 000F93  
                            _TXREG 000FAD                    __end_of_delayMS 24E2  
                     _ADC_NChannel 0043                              _accel 006F  
                  __end_of_readACC 244C                      ___awtoft@sign 0022  
                    ?_INTERRUPTION 0001                      ___ftpack@sign 0017  
                            main@i 0254                              main@j 0232  
                            main@l 0245                              main@z 023C  
                   __pbitbssCOMRAM 0260                   __end_of_PWM_Init 2558  
                            tablat 000FF5               _SerialReceivedString 01B8  
                            status 000FD8                    __initialization 21DA  
                     __end_of_main 1524                             ??_main 00DB  
                    ___fttol@sign1 001C                      __activetblptr 000002  
                   ??_INTERRUPTION 0005                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ADCON2 000FC0  
                           _ADRESH 000FC4                             _ADRESL 000FC3  
                 ___awdiv@dividend 0017                   __end_of_WriteI2C 23C4  
                 __end_of___awtoft 2484                   __end_of___ftpack 2018  
                           i2l2611 2368                             i2l1483 2304  
                           i2l2605 2330                             i2l1477 22FA  
                           i2l2589 2510                             i2l2599 2522  
                           i2l2875 2090                             i2l2879 20AA  
                           _INTCON 000FF2                          ??_IdleI2C 0013  
                           _SPBRGH 000FB0                             _SSPADD 000FC8  
                           _SSPBUF 000FC9                          ??_ReadI2C 0013  
                   _WifiTCPDataLen 00E4                         _SerialRead 2558  
                           ___ftge 20C6                          ??___awdiv 001B  
                        ??___ftadd 0029                          ??___ftdiv 0038  
                        ??___ftneg 001E                   __end_of_readGIRO 2408  
                 __end_of_initUART 24B6                          ??___ftmul 0035  
                        ??___fttol 0017                             _filtro 00E1  
                           clear_0 2220                             clear_1 222C  
                           clear_2 2238                          ??_delayMS 0015  
                 ___awdiv@quotient 001D                             main@u1 024B  
                           main@u2 0233                             main@u3 0236  
                           main@u4 024E              ___ftmul@f3_as_product 00BE  
                        ??_readACC 0015                       __pdataCOMRAM 003B  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                       __accesstop 0060            __end_of__initialization 2248  
                  __CFG_PBADEN$OFF 000000                         ___ftadd@f1 0023  
                       ___ftadd@f2 0026                         ___ftge@ff1 0013  
                       ___ftge@ff2 0016                      ___rparam_used 000001  
                       ___ftdiv@f1 00C3                         ___ftdiv@f2 00C6  
                       ___ftdiv@f3 00CA                         ___ftneg@f1 001B  
                       ___awtoft@c 001F                         ___ftmul@f1 002F  
                       ___ftmul@f2 0032                         ___fttol@f1 0013  
                   __pcstackCOMRAM 0001                       __pidataBANK0 259D  
                        ?_PWM_Init 0001                       ?_PWM_Execute 0001  
                       __pbssBANK0 0060                         __pbssBANK1 0100  
                       __pbssBANK2 0200                        ?_SerialRead 0001  
                          ?___ftge 0013               __end_of_INTERRUPTION 22CC  
PID_outputControlCalc@systemOutput 00D2                          ?_WriteI2C 0001  
                        ?___awtoft 001F                          ?___ftpack 0013  
                       ??_PWM_Init 0013                 __size_of_waitToken 0020  
     __size_of_INTERRUPTION_Serial 00AE       __size_of_INTERRUPTION_Timer0 0010  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
                          _SSPSTAT 000FC7                          ?_readGIRO 0001  
                        ?_initUART 0001                            _IdleI2C 256E  
                    readACC@Adress 0015                            _ReadI2C 2526  
                          __Hparam 0000                            __Lparam 0000  
                      _WifiTCPData 0060      __size_of_SerialReadUntilToken 0052  
                  __size_of___ftge 0090                            ___awdiv 2156  
                          ___ftadd 1A6A                            ___ftdiv 1C16  
                          ___ftneg 24E2                            ___ftmul 1D56  
                          ___fttol 1E76                       __psmallconst 081A  
                          __pcinit 21DA                         ??_WriteI2C 0014  
                          _delayMS 24B6                         ??___awtoft 0022  
            _PID_outputControlCalc 1524                         ??___ftpack 0018  
                          __ramtop 0800                            __ptext0 089A  
                          __ptext1 23C4                            __ptext2 2408  
                          __ptext3 2378                            __ptext4 256E  
                          __ptext5 2526                            __ptext6 2484  
                          __ptext7 24B6                            __ptext8 1E76  
                          __ptext9 244C                            _readACC 2408  
              __size_of_SerialRead 0016                            main@phi 023F  
                          main@psi 0242                     __pintcode_body 2256  
             end_of_initialization 2248                         ??_readGIRO 0015  
                       ??_initUART 0013                      __Lmediumconst 0000  
       _PID_outputControlCalc$1974 00D8                            int_func 2256  
                __end_of_waitToken 2526     PID_outputControlCalc@reference 00CF  
                 _SerialSendString 0200                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc1 000FE6                            postinc2 000FDE  
                        _TRISCbits 000F94               __size_of_PWM_Execute 005A  
                      ___ftdiv@exp 00CD                         main@lambda 0248  
            __size_of_INTERRUPTION 1AC4                        ___ftmul@exp 00BD  
           ?_PID_outputControlCalc 00CF                     __end_of___ftge 2156  
                    __pidataCOMRAM 2590                    delayMS@waitTime 0013  
                      _ADC_Channel 0048                  __size_of_PWM_Init 0016  
              start_initialization 21DA               _PID_interruptCounter 00B7  
                 WriteI2C@data_out 0014                       _INTERRUPTION 0808  
                     ??_SerialRead 0001                          _SerialLen 0045  
              _INTERRUPTION_Serial 2018                _INTERRUPTION_Timer0 2580  
                         ??___ftge 0019                        __pdataBANK0 00DE  
                __size_of_WriteI2C 004C                  __size_of___awtoft 0038  
                __size_of___ftpack 00AE                        __pbssCOMRAM 0048  
            SerialReadUntilToken@i 0003               ?_INTERRUPTION_Serial 0001  
                    __pcstackBANK0 00BD                      __pcstackBANK2 0232  
             ?_INTERRUPTION_Timer0 0001                          _accelBias 0078  
               __end_of_SerialRead 256E                          _accelTemp 0081  
                   waitToken@value 0001                           ?_IdleI2C 0001  
                         ?_ReadI2C 0001                  __size_of_readGIRO 0044  
                __size_of_initUART 0032                          _main$1972 0255  
                        _main$1973 0251                          __pintcode 0808  
                         ?___awdiv 0017                           ?___ftadd 0023  
                         ?___ftdiv 00C3                           ?___ftneg 001B  
                         ?___ftmul 002F                           ?___fttol 0013  
                         ?_delayMS 0013                           ?_readACC 0001  
                      __smallconst 081A              ??_INTERRUPTION_Serial 0005  
            ??_INTERRUPTION_Timer0 0001       __end_of_SerialReadUntilToken 2378  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
                        _waitToken 2506                         _ADCON0bits 000FC2  
                         _PWM_Init 2542                          main@theta 0239  
                        copy_data0 21EE                          copy_data1 220E  
               _SerialReceivedData 004B                          readGIRO@c 0016  
                 __size_of_IdleI2C 0012                   __size_of_ReadI2C 001C  
                         __Hrparam 0000            ??_PID_outputControlCalc 00D6  
                         __Lrparam 0000                         ?_waitToken 0001  
                 __size_of___awdiv 0084                   __size_of___ftadd 01AC  
                 __size_of___ftdiv 0140                   __size_of___ftneg 0024  
                 __size_of___ftmul 0120                   __size_of___fttol 00F4  
                         _WriteI2C 2378                           ___awtoft 244C  
                         ___ftpack 1F6A                   WifiTCPSend@F4101 00DE  
                 __size_of_delayMS 002C                      ??_PWM_Execute 0001  
                 __size_of_readACC 0044                           _flagData 0260  
                         _flagLink 0261                           __ptext10 2156  
                         __ptext11 2542                           __ptext20 2580  
                         __ptext12 1524                           __ptext21 22CC  
                         __ptext13 24E2                           __ptext22 2018  
                         __ptext14 1D56                           __ptext23 2506  
                         __ptext15 20C6                           __ptext24 2326  
                         __ptext16 1C16                           __ptext25 2558  
                         __ptext17 1A6A                           __ptext18 1F6A  
SerialReadUntilToken@charToCompare 0002                           _giroBias 0093  
                         _contador 00BB                           _giroTemp 009C  
                         _readGIRO 23C4                           _initUART 2484  
                    __size_of_main 0C8A                           delayMS@j 0016  
             _SerialReadUntilToken 2326                           int$flags 004D  
            __CFG_CPUDIV$OSC1_PLL2 000000                           readACC@c 0016  
                       _INTCONbits 000FF2                __end_of_PWM_Execute 2326  
                         intlevel2 0000                        ??_waitToken 0001  
            ?_SerialReadUntilToken 0001      PID_outputControlCalc@whichPID 00D5  
                      _SSPCON1bits 000FC6                        _SSPCON2bits 000FC5  
               __CFG_FOSC$HSPLL_HS 000000                     readGIRO@Adress 0015  
